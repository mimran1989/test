{"version":3,"sources":["webpack://Provus/./node_modules/async/dist/async.mjs","webpack://Provus/./node_modules/d/index.js","webpack://Provus/./node_modules/deferred/_ext.js","webpack://Provus/./node_modules/deferred/assimilate.js","webpack://Provus/./node_modules/deferred/deferred.js","webpack://Provus/./node_modules/deferred/dynamic-queue.js","webpack://Provus/./node_modules/deferred/ext/_process-arguments.js","webpack://Provus/./node_modules/deferred/ext/array/every.js","webpack://Provus/./node_modules/deferred/ext/array/find.js","webpack://Provus/./node_modules/deferred/ext/array/map.js","webpack://Provus/./node_modules/deferred/ext/array/reduce.js","webpack://Provus/./node_modules/deferred/ext/array/some.js","webpack://Provus/./node_modules/deferred/ext/function/call-async.js","webpack://Provus/./node_modules/deferred/ext/function/delay.js","webpack://Provus/./node_modules/deferred/ext/function/gate.js","webpack://Provus/./node_modules/deferred/ext/function/promisify-sync.js","webpack://Provus/./node_modules/deferred/ext/function/promisify.js","webpack://Provus/./node_modules/deferred/ext/promise/_array.js","webpack://Provus/./node_modules/deferred/ext/promise/aside.js","webpack://Provus/./node_modules/deferred/ext/promise/catch.js","webpack://Provus/./node_modules/deferred/ext/promise/cb.js","webpack://Provus/./node_modules/deferred/ext/promise/finally.js","webpack://Provus/./node_modules/deferred/ext/promise/get.js","webpack://Provus/./node_modules/deferred/ext/promise/invoke-async.js","webpack://Provus/./node_modules/deferred/ext/promise/invoke.js","webpack://Provus/./node_modules/deferred/ext/promise/map.js","webpack://Provus/./node_modules/deferred/ext/promise/reduce.js","webpack://Provus/./node_modules/deferred/ext/promise/some.js","webpack://Provus/./node_modules/deferred/ext/promise/spread.js","webpack://Provus/./node_modules/deferred/ext/promise/timeout.js","webpack://Provus/./node_modules/deferred/index.js","webpack://Provus/./node_modules/deferred/invoke-async.js","webpack://Provus/./node_modules/deferred/is-promise.js","webpack://Provus/./node_modules/deferred/lib/some-every.js","webpack://Provus/./node_modules/deferred/monitor.js","webpack://Provus/./node_modules/deferred/profiler.js","webpack://Provus/./node_modules/deferred/valid-promise.js","webpack://Provus/./node_modules/es5-ext/array/from/index.js","webpack://Provus/./node_modules/es5-ext/array/from/is-implemented.js","webpack://Provus/./node_modules/es5-ext/array/from/shim.js","webpack://Provus/./node_modules/es5-ext/array/of/index.js","webpack://Provus/./node_modules/es5-ext/array/of/is-implemented.js","webpack://Provus/./node_modules/es5-ext/array/of/shim.js","webpack://Provus/./node_modules/es5-ext/array/to-array.js","webpack://Provus/./node_modules/es5-ext/error/custom.js","webpack://Provus/./node_modules/es5-ext/error/is-error.js","webpack://Provus/./node_modules/es5-ext/function/\u0000#/partial.js","webpack://Provus/./node_modules/es5-ext/function/\u0000#/spread.js","webpack://Provus/./node_modules/es5-ext/function/_define-length.js","webpack://Provus/./node_modules/es5-ext/function/is-arguments.js","webpack://Provus/./node_modules/es5-ext/function/is-function.js","webpack://Provus/./node_modules/es5-ext/function/noop.js","webpack://Provus/./node_modules/es5-ext/iterable/is.js","webpack://Provus/./node_modules/es5-ext/iterable/validate-object.js","webpack://Provus/./node_modules/es5-ext/math/sign/index.js","webpack://Provus/./node_modules/es5-ext/math/sign/is-implemented.js","webpack://Provus/./node_modules/es5-ext/math/sign/shim.js","webpack://Provus/./node_modules/es5-ext/number/to-integer.js","webpack://Provus/./node_modules/es5-ext/number/to-pos-integer.js","webpack://Provus/./node_modules/es5-ext/object/_iterate.js","webpack://Provus/./node_modules/es5-ext/object/assign/index.js","webpack://Provus/./node_modules/es5-ext/object/assign/is-implemented.js","webpack://Provus/./node_modules/es5-ext/object/assign/shim.js","webpack://Provus/./node_modules/es5-ext/object/create.js","webpack://Provus/./node_modules/es5-ext/object/for-each.js","webpack://Provus/./node_modules/es5-ext/object/is-array-like.js","webpack://Provus/./node_modules/es5-ext/object/is-callable.js","webpack://Provus/./node_modules/es5-ext/object/is-object.js","webpack://Provus/./node_modules/es5-ext/object/is-value.js","webpack://Provus/./node_modules/es5-ext/object/keys/index.js","webpack://Provus/./node_modules/es5-ext/object/keys/is-implemented.js","webpack://Provus/./node_modules/es5-ext/object/keys/shim.js","webpack://Provus/./node_modules/es5-ext/object/mixin.js","webpack://Provus/./node_modules/es5-ext/object/normalize-options.js","webpack://Provus/./node_modules/es5-ext/object/set-prototype-of/index.js","webpack://Provus/./node_modules/es5-ext/object/set-prototype-of/is-implemented.js","webpack://Provus/./node_modules/es5-ext/object/set-prototype-of/shim.js","webpack://Provus/./node_modules/es5-ext/object/valid-callable.js","webpack://Provus/./node_modules/es5-ext/object/valid-object.js","webpack://Provus/./node_modules/es5-ext/object/valid-value.js","webpack://Provus/./node_modules/es5-ext/string/\u0000#/contains/index.js","webpack://Provus/./node_modules/es5-ext/string/\u0000#/contains/is-implemented.js","webpack://Provus/./node_modules/es5-ext/string/\u0000#/contains/shim.js","webpack://Provus/./node_modules/es5-ext/string/\u0000#/pad.js","webpack://Provus/./node_modules/es5-ext/string/\u0000#/repeat/index.js","webpack://Provus/./node_modules/es5-ext/string/\u0000#/repeat/is-implemented.js","webpack://Provus/./node_modules/es5-ext/string/\u0000#/repeat/shim.js","webpack://Provus/./node_modules/es5-ext/string/is-string.js","webpack://Provus/./node_modules/es6-symbol/index.js","webpack://Provus/./node_modules/es6-symbol/is-implemented.js","webpack://Provus/./node_modules/es6-symbol/is-symbol.js","webpack://Provus/./node_modules/es6-symbol/lib/private/generate-name.js","webpack://Provus/./node_modules/es6-symbol/lib/private/setup/standard-symbols.js","webpack://Provus/./node_modules/es6-symbol/lib/private/setup/symbol-registry.js","webpack://Provus/./node_modules/es6-symbol/polyfill.js","webpack://Provus/./node_modules/es6-symbol/validate-symbol.js","webpack://Provus/./node_modules/event-emitter/index.js","webpack://Provus/./node_modules/event-emitter/unify.js","webpack://Provus/./node_modules/ext/global-this/implementation.js","webpack://Provus/./node_modules/ext/global-this/index.js","webpack://Provus/./node_modules/ext/global-this/is-implemented.js","webpack://Provus/./node_modules/next-tick/index.js","webpack://Provus/./node_modules/timers-ext/max-timeout.js","webpack://Provus/./node_modules/timers-ext/valid-timeout.js","webpack://Provus/./node_modules/type/function/is.js","webpack://Provus/./node_modules/type/object/is.js","webpack://Provus/./node_modules/type/plain-function/is.js","webpack://Provus/./node_modules/type/prototype/is.js","webpack://Provus/./node_modules/type/value/is.js","webpack://Provus/webpack/bootstrap","webpack://Provus/webpack/runtime/define property getters","webpack://Provus/webpack/runtime/hasOwnProperty shorthand","webpack://Provus/webpack/runtime/make namespace object","webpack://Provus/./ui/components/queue/queue.ts"],"names":["apply","fn","args","callArgs","initialParams","callback","pop","call","this","hasQueueMicrotask","queueMicrotask","hasSetImmediate","setImmediate","hasNextTick","process","nextTick","fallback","setTimeout","wrap","defer","setImmediate$1","asyncify","func","isAsync","handlePromise","result","e","then","promise","value","invokeCallback","err","message","Error","error","Symbol","toStringTag","wrapAsync","asyncFn","awaitify","arity","length","Promise","resolve","reject","cbArgs","applyEach","eachfn","fns","that","cb","concat","_asyncMap","arr","iteratee","results","counter","_iteratee","_","iterCb","index","v","isArrayLike","breakLoop","once","wrapper","callFn","Object","assign","onlyOnce","asyncEachOfLimit","generator","limit","done","canceled","awaiting","running","idx","replenish","next","iterDone","iterateeCallback","catch","handleError","eachOfLimit","obj","RangeError","asyncIterator","isAsyncIterable","nextElem","coll","i","len","key","createArrayIterator","okeys","iterator","getIterator","item","createES2015Iterator","keys","createIterator","looping","elem","eachOfLimit$2","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf$1","map$1","applyEach$1","eachOfSeries$1","mapSeries$1","applyEachSeries","PROMISE_SYMBOL","promiseCallback","res","rej","auto","tasks","concurrency","numTasks","runningTasks","hasError","listeners","create","readyTasks","readyToCheck","uncheckedDependencies","enqueueTask","task","push","taskCallback","safeResults","forEach","rkey","processQueue","taskFn","runTask","shift","run","getDependents","taskName","Array","isArray","indexOf","dependencies","slice","remainingDependencies","dependencyName","join","taskListeners","dependent","checkForDeadlocks","FN_ARGS","ARROW_FN_ARGS","FN_ARG_SPLIT","FN_ARG","autoInject","newTasks","params","fnIsAsync","hasNoDeps","newTask","src","string","stripped","endBlockComment","endIndex","stripComments","toString","match","replace","split","map","arg","trim","parseParams","taskCb","newArgs","name","DLL","constructor","head","tail","removeLink","node","prev","empty","insertAfter","newNode","insertBefore","unshift","setInitial","toArray","cur","data","remove","testFn","curr","dll","queue","worker","payload","_worker","numRunning","workersList","events","drain","saturated","unsaturated","off","event","handler","filter","ev","trigger","processingScheduled","_insert","insertAtFront","rejectOnError","q","started","_tasks","_createCB","l","splice","buffer","idle","_maybeDrain","eventMethod","handleAndRemove","on","isProcessing","paused","datum","pushAsync","kill","unshiftAsync","Math","min","pause","resume","defineProperties","writable","cargo","cargo$1","reduce$1","memo","x","seq","functions","_functions","newargs","nextargs","compose","reverse","mapLimit$1","concatLimit$1","val","mapResults","concat$1","concatSeries$1","constant","ignoredArgs","_createTester","check","getResult","testResult","testPassed","detect$1","bool","detectLimit$1","detectSeries$1","consoleFunc","resultArgs","console","dir","doWhilst$1","test","_fn","_test","truth","doUntil","_withoutIndex","each","eachLimit$2","eachSeries$1","ensureAsync","sync","innerArgs","every$1","everyLimit$1","everySeries$1","filterArray","truthValues","filterGeneric","sort","a","b","_filter","filter$1","filterLimit$1","filterSeries$1","forever$1","errback","groupByLimit$1","hasOwnProperty","prototype","groupBy","groupBySeries","log","mapValuesLimit$1","newObj","mapValues","mapValuesSeries","memoize","hasher","queues","memoized","unmemoized","_parallel","parallel","parallelLimit","queue$1","items","Heap","heap","pushCount","Number","MIN_SAFE_INTEGER","percUp","p","smaller","parent","t","percDown","top","j","y","priority","priorityQueue","race$1","TypeError","reduceRight","array","reversed","reflect","reflectCallback","retVal","reflectAll","reject$2","rejectLimit$1","rejectSeries$1","constant$1","retry","opts","options","times","intervalFunc","arguments","parseTimes","_task","attempt","retryAttempt","errorFilter","acc","interval","retryable","series","some$1","Boolean","someLimit$1","someSeries$1","sortBy$1","criteria","comparator","left","right","timeout","milliseconds","info","timer","timedOut","clearTimeout","code","timesLimit","count","size","range","n","timesSeries","transform","accumulator","k","tryEach$1","unmemoize","whilst$1","rest","until","waterfall$1","taskIndex","nextTask","cargoQueue","concatLimit","concatSeries","detect","detectLimit","detectSeries","doWhilst","eachLimit","eachOf","eachOfSeries","eachSeries","every","everyLimit","everySeries","filterLimit","filterSeries","forever","groupByLimit","mapLimit","mapSeries","mapValuesLimit","race","reduce","rejectLimit","rejectSeries","some","someLimit","someSeries","sortBy","tryEach","waterfall","whilst","all","allLimit","allSeries","any","anyLimit","anySeries","find","findLimit","findSeries","flatMap","flatMapLimit","flatMapSeries","forEachSeries","forEachLimit","forEachOf","forEachOfSeries","forEachOfLimit","inject","foldl","foldr","select","selectLimit","selectSeries","wrapSync","during","doDuring","isValue","isPlainFunction","normalizeOpts","contains","module","exports","dscr","c","w","desc","configurable","enumerable","gs","get","set","undefined","deferred","callable","isCallable","d","ee","isPromise","defineProperty","unres","onres","String","_unresolved","_onresolve","_resolved","_names","Function","win","fail","def","pending","resolved","returnsPromise","valueOf","promiseResolve","promiseReject","cont","failed","extend","isObject","getPrototypeOf","self","ignore","resolvedValue","resolvedReason","Deferred","createDeferred","extendShim","ext","assimilate","isError","noop","setPrototypeOf","_profile","_monitor","monitor","bind","_settle","deps","dPromise","nuDeps","waiting","initialized","itemValue","DynamicQueue","aFrom","ensureIterable","list","add","_processValue","arrayOf","Find","ensureValue","toNaturalNumber","context","current","processCb","listValue","processValue","DMap","Reduce","initial","resolvedInitial","init","state","continue","applyFn","callAsync","processArguments","resolvedArgs","delayed","ensureTimeout","delay","gateReject","toPosInt","eeUnify","max","type","cLimit","qLimit","decrement","unload","isNaN","thisArg","localResult","finally","deferredReject","validValue","localResolve","localReject","e2","methodIgnored","argsResolved","method","spread","customError","invokeAsync","dynamicQueue","validPromise","gate","promisify","promisifySync","end","resolvent","Iterator","stack","rStats","unresolved","uStats","profile","partial","pad","isResolved","line","search","unknown","profileEnd","total","lpad","data1","data2","stats","from","iteratorSymbol","isArguments","isFunction","isString","arrayLike","Context","mapFn","charCodeAt","of","captureStackTrace","objToString","id","defineLength","generate","mixin","cache","arg1","arg2","target","isFunctionStringTag","RegExp","is","sign","abs","floor","isFinite","toInteger","objPropertyIsEnumerable","propertyIsEnumerable","defVal","compareFn","foo","bar","trzy","dest","shim","nullObject","polyProps","level","getOwnPropertyNames","props","function","object","_undefined","getOwnPropertyDescriptor","getOwnPropertySymbols","source","sourceObject","symbol","opts1","plainObject","customCreate","validate","status","objIsPrototypeOf","isPrototypeOf","nullDesc","tmpObj1","tmpObj2","__proto__","isNullBase","nullPolyfill","str","searchString","repeat","fill","sLength","global","validTypes","toPrimitive","objPrototype","created","ie11BugWorkaround","postfix","NativeSymbol","SymbolPolyfill","hasInstance","isConcatSpreadable","species","unscopables","validateSymbol","registry","for","keyFor","HiddenSymbol","isNativeSafe","generateName","setupStandardSymbols","setupSymbolRegistry","description","__description__","__name__","isSymbol","emit","methods","descriptors","base","descriptor","listener","__eeOnceListener__","__ee__","candidate","o","e1","naiveFallback","window","__global__","globalThis","ensureCallable","byObserver","Observer","currentQueue","document","createTextNode","observe","characterData","MutationObserver","WebKitMutationObserver","maxTimeout","isPrototype","possibleTypes","classRe","functionToString","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","definition","prop","r","async_1","Provus","Queue","registeredActions","actionName","invokeAction","actionQueue","registerAction","async","registerActions","actionsToRegister","action","actions","actionsToSchedule","allActionPromises"],"mappings":"0CA6CA,SAASA,EAAMC,KAAOC,GAClB,MAAO,IAAIC,IAAaF,KAAMC,KAAQC,GAG1C,SAASC,EAAeH,GACpB,OAAO,YAAaC,GAChB,IAAIG,EAAWH,EAAKI,MACpB,OAAOL,EAAGM,KAAKC,KAAMN,EAAMG,I,+pDAMnC,IAAII,EAA8C,mBAAnBC,gBAAiCA,eAC5DC,EAA0C,mBAAjBC,cAA+BA,aACxDC,EAAiC,iBAAZC,SAAoD,mBAArBA,QAAQC,SAEhE,SAASC,EAASf,GACdgB,WAAWhB,EAAI,GAGnB,SAASiB,EAAKC,GACV,MAAO,CAAClB,KAAOC,IAASiB,GAAM,IAAMlB,KAAMC,KAe9C,IAAIkB,EAAiBF,EAVjBT,EACSC,eACFC,EACEC,aACFC,EACEC,QAAQC,SAERC,GA6Db,SAASK,EAASC,GACd,OAAIC,EAAQD,GACD,YAAapB,GAChB,MAAMG,EAAWH,EAAKI,MAEtB,OAAOkB,EADSF,EAAKtB,MAAMQ,KAAMN,GACHG,IAI/BD,GAAc,SAAUF,EAAMG,GACjC,IAAIoB,EACJ,IACIA,EAASH,EAAKtB,MAAMQ,KAAMN,GAC5B,MAAOwB,GACL,OAAOrB,EAASqB,GAGpB,GAAID,GAAiC,mBAAhBA,EAAOE,KACxB,OAAOH,EAAcC,EAAQpB,GAE7BA,EAAS,KAAMoB,MAK3B,SAASD,EAAcI,EAASvB,GAC5B,OAAOuB,EAAQD,MAAKE,IAChBC,EAAezB,EAAU,KAAMwB,MAChCE,IACCD,EAAezB,EAAU0B,GAAOA,EAAIC,QAAUD,EAAM,IAAIE,MAAMF,OAItE,SAASD,EAAezB,EAAU6B,EAAOL,GACrC,IACIxB,EAAS6B,EAAOL,GAClB,MAAOE,GACLX,GAAeM,IAAO,MAAMA,IAAKK,IAIzC,SAASR,EAAQtB,GACb,MAAkC,kBAA3BA,EAAGkC,OAAOC,aAWrB,SAASC,EAAUC,GACf,GAAuB,mBAAZA,EAAwB,MAAM,IAAIL,MAAM,uBACnD,OAAOV,EAAQe,GAAWjB,EAASiB,GAAWA,EAKlD,SAASC,EAAUD,EAASE,EAAQF,EAAQG,QACxC,IAAKD,EAAO,MAAM,IAAIP,MAAM,sBAe5B,OAdA,YAAuB/B,GACnB,MAA+B,mBAApBA,EAAKsC,EAAQ,GACbF,EAAQtC,MAAMQ,KAAMN,GAGxB,IAAIwC,SAAQ,CAACC,EAASC,KACzB1C,EAAKsC,EAAQ,GAAK,CAACT,KAAQc,KACvB,GAAId,EAAK,OAAOa,EAAOb,GACvBY,EAAQE,EAAOJ,OAAS,EAAII,EAASA,EAAO,KAEhDP,EAAQtC,MAAMQ,KAAMN,OAOhC,SAAS4C,EAAWC,GAChB,OAAO,SAAmBC,KAAQ7C,GAO9B,OANWoC,GAAS,SAAUlC,GAC1B,IAAI4C,EAAOzC,KACX,OAAOuC,EAAOC,GAAK,CAAC/C,EAAIiD,KACpBb,EAAUpC,GAAID,MAAMiD,EAAM9C,EAASgD,OAAOD,MAC3C7C,OAMf,SAAS+C,EAAUL,EAAQM,EAAKC,EAAUjD,GACtCgD,EAAMA,GAAO,GACb,IAAIE,EAAU,GACVC,EAAU,EACVC,EAAYpB,EAAUiB,GAE1B,OAAOP,EAAOM,GAAK,CAACxB,EAAO6B,EAAGC,KAC1B,IAAIC,EAAQJ,IACZC,EAAU5B,GAAO,CAACE,EAAK8B,KACnBN,EAAQK,GAASC,EACjBF,EAAO5B,SAEZA,IACC1B,EAAS0B,EAAKwB,MAItB,SAASO,EAAYjC,GACjB,OAAOA,GACqB,iBAAjBA,EAAMY,QACbZ,EAAMY,QAAU,GAChBZ,EAAMY,OAAS,GAAM,EAK7B,MAAMsB,EAAY,GAElB,SAASC,EAAK/D,GACV,SAASgE,KAAY/D,GACjB,GAAW,OAAPD,EAAJ,CACA,IAAIiE,EAASjE,EACbA,EAAK,KACLiE,EAAOlE,MAAMQ,KAAMN,IAGvB,OADAiE,OAAOC,OAAOH,EAAShE,GAChBgE,EAgDX,SAASI,EAASpE,GACd,OAAO,YAAaC,GAChB,GAAW,OAAPD,EAAa,MAAM,IAAIgC,MAAM,gCACjC,IAAIiC,EAASjE,EACbA,EAAK,KACLiE,EAAOlE,MAAMQ,KAAMN,IAK3B,SAASoE,EAAiBC,EAAWC,EAAOlB,EAAUjD,GAClD,IAAIoE,GAAO,EACPC,GAAW,EACXC,GAAW,EACXC,EAAU,EACVC,EAAM,EAEV,SAASC,IAEDF,GAAWJ,GAASG,GAAYF,IAEpCE,GAAW,EACXJ,EAAUQ,OAAOpD,MAAK,EAAEE,QAAO4C,KAAMO,MAEjC,IAAIN,IAAYD,EAAhB,CAEA,GADAE,GAAW,EACPK,EAMA,OALAP,GAAO,OACHG,GAAW,GAEXvE,EAAS,OAIjBuE,IACAtB,EAASzB,EAAOgD,EAAKI,GACrBJ,IACAC,QACDI,MAAMC,IAGb,SAASF,EAAiBlD,EAAKN,GAG3B,GADAmD,GAAW,GACPF,EACJ,OAAI3C,EAAYoD,EAAYpD,IAEhB,IAARA,GACA0C,GAAO,OACPC,GAAW,IAIXjD,IAAWsC,GAAcU,GAAQG,GAAW,GAC5CH,GAAO,EAEApE,EAAS,YAEpByE,IAGJ,SAASK,EAAYpD,GACb2C,IACJC,GAAW,EACXF,GAAO,EACPpE,EAAS0B,IAGb+C,IAGJ,IAAIM,EAAeZ,GACR,CAACa,EAAK/B,EAAUjD,KAEnB,GADAA,EAAW2D,EAAK3D,GACZmE,GAAS,EACT,MAAM,IAAIc,WAAW,2CAEzB,IAAKD,EACD,OAAOhF,EAAS,MAEpB,GAjN8B,mBAiNTgF,EAjNflD,OAAOC,aAkNT,OAAOkC,EAAiBe,EAAKb,EAAOlB,EAAUjD,GAElD,GAjNR,SAAyBgF,GACrB,MAA4C,mBAA9BA,EAAIlD,OAAOoD,eAgNjBC,CAAgBH,GAChB,OAAOf,EAAiBe,EAAIlD,OAAOoD,iBAAkBf,EAAOlB,EAAUjD,GAE1E,IAAIoF,EA/FZ,SAAwBC,GACpB,GAAI5B,EAAY4B,GACZ,OAlCR,SAA6BA,GACzB,IAAIC,GAAK,EACLC,EAAMF,EAAKjD,OACf,OAAO,WACH,QAASkD,EAAIC,EAAM,CAAC/D,MAAO6D,EAAKC,GAAIE,IAAKF,GAAK,MA8BvCG,CAAoBJ,GAG/B,IAlB0BL,EACtBU,EACAJ,EACAC,EAeAI,EAzCR,SAAsBN,GAClB,OAAOA,EAAKvD,OAAO6D,WAAaN,EAAKvD,OAAO6D,YAwC7BC,CAAYP,GAC3B,OAAOM,EA9BX,SAA8BA,GAC1B,IAAIL,GAAK,EACT,OAAO,WACH,IAAIO,EAAOF,EAASjB,OACpB,OAAImB,EAAKzB,KACE,MACXkB,IACO,CAAC9D,MAAOqE,EAAKrE,MAAOgE,IAAKF,KAuBlBQ,CAAqBH,IAlBnCD,GADsBV,EAmB8CK,GAlBtDvB,OAAOiC,KAAKf,GAAO,GACjCM,GAAK,EACLC,EAAMG,EAAMtD,OACT,SAASsC,IACZ,IAAIc,EAAME,IAAQJ,GAClB,MAAY,cAARE,EACOd,IAEJY,EAAIC,EAAM,CAAC/D,MAAOwD,EAAIQ,GAAMA,OAAO,OAmG3BQ,CAAehB,GAC1BZ,GAAO,EACPC,GAAW,EACXE,EAAU,EACV0B,GAAU,EAEd,SAASrB,EAAiBlD,EAAKF,GAC3B,IAAI6C,EAEJ,GADAE,GAAW,EACP7C,EACA0C,GAAO,EACPpE,EAAS0B,QAER,IAAY,IAARA,EACL0C,GAAO,EACPC,GAAW,MAEV,IAAI7C,IAAUkC,GAAcU,GAAQG,GAAW,EAEhD,OADAH,GAAO,EACApE,EAAS,MAEViG,GACNxB,KAIR,SAASA,IAEL,IADAwB,GAAU,EACH1B,EAAUJ,IAAUC,GAAM,CAC7B,IAAI8B,EAAOd,IACX,GAAa,OAATc,EAKA,OAJA9B,GAAO,OACHG,GAAW,GACXvE,EAAS,OAIjBuE,GAAW,EACXtB,EAASiD,EAAK1E,MAAO0E,EAAKV,IAAKxB,EAASY,IAE5CqB,GAAU,EAGdxB,KA6BJ0B,EAAgBjE,GAJpB,SAAuBmD,EAAMlB,EAAOlB,EAAUjD,GAC1C,OAAO+E,EAAYZ,EAAZY,CAAmBM,EAAMrD,EAAUiB,GAAWjD,KAGb,GAG5C,SAASoG,EAAgBf,EAAMpC,EAAUjD,GACrCA,EAAW2D,EAAK3D,GAChB,IAAIuD,EAAQ,EACR8C,EAAY,GACZ,OAACjE,GAAUiD,EACXhB,GAAW,EAKf,SAASiC,EAAiB5E,EAAKF,IACf,IAARE,IACA2C,GAAW,IAEE,IAAbA,IACA3C,EACA1B,EAAS0B,KACC2E,IAAcjE,GAAWZ,IAAUkC,GAC7C1D,EAAS,OAIjB,IAhBe,IAAXoC,GACApC,EAAS,MAeNuD,EAAQnB,EAAQmB,IACnBN,EAASoC,EAAK9B,GAAQA,EAAOS,EAASsC,IAK9C,SAASC,EAAelB,EAAMpC,EAAUjD,GACpC,OAAOmG,EAAcd,EAAMmB,IAAUvD,EAAUjD,GAqHnD,IAAIyG,EAAWvE,GALf,SAAgBmD,EAAMpC,EAAUjD,GAE5B,OAD2ByD,EAAY4B,GAAQe,EAAkBG,GACrClB,EAAMrD,EAAUiB,GAAWjD,KAG3B,GA0H5B0G,EAAQxE,GAHZ,SAAcmD,EAAMpC,EAAUjD,GAC1B,OAAO+C,EAAU0D,EAAUpB,EAAMpC,EAAUjD,KAErB,GAyCtB2G,EAAclE,EAAUiE,GAuBxBE,EAAiB1E,GAHrB,SAAsBmD,EAAMpC,EAAUjD,GAClC,OAAOmG,EAAcd,EAAM,EAAGpC,EAAUjD,KAEA,GAwBxC6G,EAAc3E,GAHlB,SAAoBmD,EAAMpC,EAAUjD,GAChC,OAAO+C,EAAU6D,EAAgBvB,EAAMpC,EAAUjD,KAEf,GAqBlC8G,EAAkBrE,EAAUoE,GAEhC,MAAME,EAAiBjF,OAAO,mBAE9B,SAASkF,IACL,IAAI1E,EAASC,EACb,SAASvC,EAAU0B,KAAQ7B,GACvB,GAAI6B,EAAK,OAAOa,EAAOb,GACvBY,EAAQzC,EAAKuC,OAAS,EAAIvC,EAAOA,EAAK,IAQ1C,OALAG,EAAS+G,GAAkB,IAAI1E,SAAQ,CAAC4E,EAAKC,KACzC5E,EAAU2E,EACV1E,EAAS2E,KAGNlH,EAoJX,SAASmH,EAAKC,EAAOC,EAAarH,GACH,iBAAhBqH,IAEPrH,EAAWqH,EACXA,EAAc,MAElBrH,EAAW2D,EAAK3D,GAAYgH,KAC5B,IAAIM,EAAWxD,OAAOiC,KAAKqB,GAAOhF,OAClC,IAAKkF,EACD,OAAOtH,EAAS,MAEfqH,IACDA,EAAcC,GAGlB,IAAIpE,EAAU,GACVqE,EAAe,EACflD,GAAW,EACXmD,GAAW,EAEXC,EAAY3D,OAAO4D,OAAO,MAE1BC,EAAa,GAGbC,EAAe,GAEfC,EAAwB,GAuC5B,SAASC,EAAYtC,EAAKuC,GACtBJ,EAAWK,MAAK,IA+BpB,SAAiBxC,EAAKuC,GAClB,IAAIP,EAAJ,CAEA,IAAIS,EAAejE,GAAS,CAACtC,KAAQN,KAEjC,GADAmG,KACY,IAAR7F,EAOJ,GAHIN,EAAOgB,OAAS,KACfhB,GAAUA,GAEXM,EAAK,CACL,IAAIwG,EAAc,GAOlB,GANApE,OAAOiC,KAAK7C,GAASiF,SAAQC,IACzBF,EAAYE,GAAQlF,EAAQkF,MAEhCF,EAAY1C,GAAOpE,EACnBoG,GAAW,EACXC,EAAY3D,OAAO4D,OAAO,MACtBrD,EAAU,OACdrE,EAAS0B,EAAKwG,QAEdhF,EAAQsC,GAAOpE,GA7BHqG,EA8BCjC,IA9BsB,IAC7B2C,SAAQvI,GAAMA,MAC5ByI,SAUQhE,GAAW,KAsBnBkD,IACA,IAAIe,EAAStG,EAAU+F,EAAKA,EAAK3F,OAAS,IACtC2F,EAAK3F,OAAS,EACdkG,EAAOpF,EAAS+E,GAEhBK,EAAOL,IAhEWM,CAAQ/C,EAAKuC,KAGvC,SAASM,IACL,IAAIhE,EAAJ,CACA,GAA0B,IAAtBsD,EAAWvF,QAAiC,IAAjBmF,EAC3B,OAAOvH,EAAS,KAAMkD,GAE1B,KAAMyE,EAAWvF,QAAUmF,EAAeF,GAC5BM,EAAWa,OACrBC,IAiFR,SAASC,EAAcC,GACnB,IAAIvH,EAAS,GAOb,OANA0C,OAAOiC,KAAKqB,GAAOe,SAAQ3C,IACvB,MAAMuC,EAAOX,EAAM5B,GACfoD,MAAMC,QAAQd,IAASA,EAAKe,QAAQH,IAAa,GACjDvH,EAAO4G,KAAKxC,MAGbpE,EAGX,OA5IA0C,OAAOiC,KAAKqB,GAAOe,SAAQ3C,IACvB,IAAIuC,EAAOX,EAAM5B,GACjB,IAAKoD,MAAMC,QAAQd,GAIf,OAFAD,EAAYtC,EAAK,CAACuC,SAClBH,EAAaI,KAAKxC,GAItB,IAAIuD,EAAehB,EAAKiB,MAAM,EAAGjB,EAAK3F,OAAS,GAC3C6G,EAAwBF,EAAa3G,OACzC,GAA8B,IAA1B6G,EAGA,OAFAnB,EAAYtC,EAAKuC,QACjBH,EAAaI,KAAKxC,GAGtBqC,EAAsBrC,GAAOyD,EAE7BF,EAAaZ,SAAQe,IACjB,IAAK9B,EAAM8B,GACP,MAAM,IAAItH,MAAM,oBAAsB4D,EAClC,oCACA0D,EAAiB,QACjBH,EAAaI,KAAK,OA8BlC,IAAqBR,EACbS,KAAgB3B,EADHkB,EA5BDO,MA+BZE,EAAgB3B,EAAUkB,GAAY,IAG1CS,EAAcpB,MAlCkB,KAEM,KAD9BiB,GAEInB,EAAYtC,EAAKuC,YA8EjC,WAMI,IAFA,IACI5E,EAAU,EACPyE,EAAaxF,QAEhBe,IACAuF,EAFcd,EAAa3H,OAEAkI,SAAQkB,IACY,KAArCxB,EAAsBwB,IACxBzB,EAAaI,KAAKqB,MAK9B,GAAIlG,IAAYmE,EACZ,MAAM,IAAI1F,MACN,iEA1FZ0H,GACAjB,IAyGOrI,EAAS+G,GAGpB,IAAIwC,EAAU,gEACVC,EAAgB,8CAChBC,EAAe,IACfC,EAAS,eA8Hb,SAASC,EAAWvC,EAAOpH,GACvB,IAAI4J,EAAW,GAqCf,OAnCA9F,OAAOiC,KAAKqB,GAAOe,SAAQ3C,IACvB,IACIqE,EADAvB,EAASlB,EAAM5B,GAEfsE,EAAY5I,EAAQoH,GACpByB,GACED,GAA+B,IAAlBxB,EAAOlG,QACrB0H,GAA+B,IAAlBxB,EAAOlG,OAEzB,GAAIwG,MAAMC,QAAQP,GACduB,EAAS,IAAIvB,GACbA,EAASuB,EAAO5J,MAEhB2J,EAASpE,GAAOqE,EAAO/G,OAAO+G,EAAOzH,OAAS,EAAI4H,EAAU1B,QACzD,GAAIyB,EAEPH,EAASpE,GAAO8C,MACb,CAEH,GADAuB,EArHZ,SAAqB5I,GACjB,MAAMgJ,EA5BV,SAAuBC,GACnB,IAAIC,EAAW,GACX5G,EAAQ,EACR6G,EAAkBF,EAAOpB,QAAQ,MACrC,KAAOvF,EAAQ2G,EAAO9H,QAClB,GAAsB,MAAlB8H,EAAO3G,IAAsC,MAApB2G,EAAO3G,EAAM,GAAY,CAElD,IAAI8G,EAAWH,EAAOpB,QAAQ,KAAMvF,GACpCA,GAAuB,IAAd8G,EAAmBH,EAAO9H,OAASiI,OACzC,IAA0B,IAArBD,GAA8C,MAAlBF,EAAO3G,IAAwC,MAApB2G,EAAO3G,EAAM,GAAa,CAEzF,IAAI8G,EAAWH,EAAOpB,QAAQ,KAAMvF,IAClB,IAAd8G,GACA9G,EAAQ8G,EAAW,EACnBD,EAAkBF,EAAOpB,QAAQ,KAAMvF,KAEvC4G,GAAYD,EAAO3G,GACnBA,UAGJ4G,GAAYD,EAAO3G,GACnBA,IAGR,OAAO4G,EAIKG,CAAcrJ,EAAKsJ,YAC/B,IAAIC,EAAQP,EAAIO,MAAMjB,GAItB,GAHKiB,IACDA,EAAQP,EAAIO,MAAMhB,KAEjBgB,EAAO,MAAM,IAAI5I,MAAM,gDAAkDqI,GAC9E,IAAK,CAAEpK,GAAQ2K,EACf,OAAO3K,EACF4K,QAAQ,MAAO,IACfC,MAAMjB,GACNkB,KAAKC,GAAQA,EAAIH,QAAQf,EAAQ,IAAImB,SA0GzBC,CAAYxC,GACE,IAAlBA,EAAOlG,SAAiB0H,GAAgC,IAAlBD,EAAOzH,OAC9C,MAAM,IAAIR,MAAM,0DAIfkI,GAAWD,EAAO5J,MAEvB2J,EAASpE,GAAOqE,EAAO/G,OAAOkH,GAGlC,SAASA,EAAQ9G,EAAS6H,GACtB,IAAIC,EAAUnB,EAAOc,KAAIM,GAAQ/H,EAAQ+H,KACzCD,EAAQhD,KAAK+C,GACb/I,EAAUsG,EAAVtG,IAAqBgJ,OAItB7D,EAAKyC,EAAU5J,GAO1B,MAAMkL,EACFC,cACIhL,KAAKiL,KAAOjL,KAAKkL,KAAO,KACxBlL,KAAKiC,OAAS,EAGlBkJ,WAAWC,GAQP,OAPIA,EAAKC,KAAMD,EAAKC,KAAK9G,KAAO6G,EAAK7G,KAChCvE,KAAKiL,KAAOG,EAAK7G,KAClB6G,EAAK7G,KAAM6G,EAAK7G,KAAK8G,KAAOD,EAAKC,KAChCrL,KAAKkL,KAAOE,EAAKC,KAEtBD,EAAKC,KAAOD,EAAK7G,KAAO,KACxBvE,KAAKiC,QAAU,EACRmJ,EAGXE,QACI,KAAMtL,KAAKiL,MAAMjL,KAAKqI,QACtB,OAAOrI,KAGXuL,YAAYH,EAAMI,GACdA,EAAQH,KAAOD,EACfI,EAAQjH,KAAO6G,EAAK7G,KAChB6G,EAAK7G,KAAM6G,EAAK7G,KAAK8G,KAAOG,EAC3BxL,KAAKkL,KAAOM,EACjBJ,EAAK7G,KAAOiH,EACZxL,KAAKiC,QAAU,EAGnBwJ,aAAaL,EAAMI,GACfA,EAAQH,KAAOD,EAAKC,KACpBG,EAAQjH,KAAO6G,EACXA,EAAKC,KAAMD,EAAKC,KAAK9G,KAAOiH,EAC3BxL,KAAKiL,KAAOO,EACjBJ,EAAKC,KAAOG,EACZxL,KAAKiC,QAAU,EAGnByJ,QAAQN,GACApL,KAAKiL,KAAMjL,KAAKyL,aAAazL,KAAKiL,KAAMG,GACvCO,EAAW3L,KAAMoL,GAG1BvD,KAAKuD,GACGpL,KAAKkL,KAAMlL,KAAKuL,YAAYvL,KAAKkL,KAAME,GACtCO,EAAW3L,KAAMoL,GAG1B/C,QACI,OAAOrI,KAAKiL,MAAQjL,KAAKmL,WAAWnL,KAAKiL,MAG7CnL,MACI,OAAOE,KAAKkL,MAAQlL,KAAKmL,WAAWnL,KAAKkL,MAG7CU,UACI,MAAO,IAAI5L,MAGf,EAAE2B,OAAO6D,YAEL,IADA,IAAIqG,EAAM7L,KAAKiL,KACRY,SACGA,EAAIC,KACVD,EAAMA,EAAItH,KAIlBwH,OAAQC,GAEJ,IADA,IAAIC,EAAOjM,KAAKiL,KACVgB,GAAM,CACR,IAAI,KAAC1H,GAAQ0H,EACTD,EAAOC,IACPjM,KAAKmL,WAAWc,GAEpBA,EAAO1H,EAEX,OAAOvE,MAIf,SAAS2L,EAAWO,EAAKd,GACrBc,EAAIjK,OAAS,EACbiK,EAAIjB,KAAOiB,EAAIhB,KAAOE,EAG1B,SAASe,EAAMC,EAAQlF,EAAamF,GAChC,GAAmB,MAAfnF,EACAA,EAAc,OAEb,GAAmB,IAAhBA,EACJ,MAAM,IAAIpC,WAAW,gCAGzB,IAAIwH,EAAUzK,EAAUuK,GACpBG,EAAa,EACbC,EAAc,GAClB,MAAMC,EAAS,CACX/K,MAAO,GACPgL,MAAO,GACPC,UAAW,GACXC,YAAa,GACbtB,MAAO,IAeX,SAASuB,EAAKC,EAAOC,GACjB,OAAKD,EACAC,OACLN,EAAOK,GAASL,EAAOK,GAAOE,QAAOC,GAAMA,IAAOF,KAD7BN,EAAOK,GAAS,GADlBnJ,OAAOiC,KAAK6G,GAAQzE,SAAQiF,GAAMR,EAAOQ,GAAM,KAKtE,SAASC,EAASJ,KAAUpN,GACxB+M,EAAOK,GAAO9E,SAAQ+E,GAAWA,KAAWrN,KAGhD,IAAIyN,GAAsB,EAC1B,SAASC,EAAQtB,EAAMuB,EAAeC,EAAezN,GACjD,GAAgB,MAAZA,GAAwC,mBAAbA,EAC3B,MAAM,IAAI4B,MAAM,oCAIpB,IAAIqF,EAAKC,EACT,SAASF,EAAiBtF,KAAQ7B,GAG9B,OAAI6B,EAAY+L,EAAgBvG,EAAIxF,GAAOuF,IACvCpH,EAAKuC,QAAU,EAAU6E,EAAIpH,EAAK,SACtCoH,EAAIpH,GARR6N,EAAEC,SAAU,EAWZ,IAAI9H,EAAO,CACPoG,OACAjM,SAAUyN,EACNzG,EACChH,GAAYgH,GAiBrB,GAdIwG,EACAE,EAAEE,OAAO/B,QAAQhG,GAEjB6H,EAAEE,OAAO5F,KAAKnC,GAGbyH,IACDA,GAAsB,EACtBvM,GAAe,KACXuM,GAAsB,EACtBI,EAAEjN,cAINgN,IAAkBzN,EAClB,OAAO,IAAIqC,SAAQ,CAACC,EAASC,KACzB0E,EAAM3E,EACN4E,EAAM3E,KAKlB,SAASsL,EAAUzG,GACf,OAAO,SAAU1F,KAAQ7B,GACrB6M,GAAc,EAEd,IAAK,IAAIpH,EAAI,EAAGwI,EAAI1G,EAAMhF,OAAQkD,EAAIwI,EAAGxI,IAAK,CAC1C,IAAIyC,EAAOX,EAAM9B,GAEb/B,EAAQoJ,EAAY7D,QAAQf,GAClB,IAAVxE,EACAoJ,EAAYnE,QACLjF,EAAQ,GACfoJ,EAAYoB,OAAOxK,EAAO,GAG9BwE,EAAK/H,SAAS0B,KAAQ7B,GAEX,MAAP6B,GACA2L,EAAQ,QAAS3L,EAAKqG,EAAKkE,MAI/BS,GAAegB,EAAErG,YAAcqG,EAAEM,QACjCX,EAAQ,eAGRK,EAAEO,QACFZ,EAAQ,SAEZK,EAAEjN,WAIV,SAASyN,EAAYjC,GACjB,QAAoB,IAAhBA,EAAK7J,SAAgBsL,EAAEO,SAEvBlN,GAAe,IAAMsM,EAAQ,WACtB,IAKf,MAAMc,EAAelD,GAAUiC,IAC3B,IAAKA,EACD,OAAO,IAAI7K,SAAQ,CAACC,EAASC,MA1GrC,SAAe0K,EAAOC,GAClB,MAAMkB,EAAkB,IAAIvO,KACxBmN,EAAIC,EAAOmB,GAyGI,EAAC1M,EAAKuK,KACb,GAAIvK,EAAK,OAAOa,EAAOb,GACvBY,EAAQ2J,IA1GhBiB,IAAWrN,IAEf+M,EAAOK,GAAOjF,KAAKoG,GAsGXzK,CAAKsH,MAMb+B,EAAI/B,GArHR,SAAagC,EAAOC,GAChBN,EAAOK,GAAOjF,KAAKkF,GAqHnBmB,CAAGpD,EAAMiC,IAIb,IAAIoB,GAAe,EACfZ,EAAI,CACJE,OAAQ,IAAI1C,EACZ,EAAEpJ,OAAO6D,kBACE+H,EAAEE,OAAO9L,OAAO6D,aAE3B0B,cACAmF,UACAwB,OAAQ3G,EAAc,EACtBsG,SAAS,EACTY,QAAQ,EACRvG,KAAMiE,EAAMjM,GACR,GAAI4I,MAAMC,QAAQoD,GAAO,CACrB,GAAIiC,EAAYjC,GAAO,OACvB,OAAOA,EAAKtB,KAAI6D,GAASjB,EAAQiB,GAAO,GAAO,EAAOxO,KAE1D,OAAOuN,EAAQtB,GAAM,GAAO,EAAOjM,IAEvCyO,UAAWxC,EAAMjM,GACb,GAAI4I,MAAMC,QAAQoD,GAAO,CACrB,GAAIiC,EAAYjC,GAAO,OACvB,OAAOA,EAAKtB,KAAI6D,GAASjB,EAAQiB,GAAO,GAAO,EAAMxO,KAEzD,OAAOuN,EAAQtB,GAAM,GAAO,EAAMjM,IAEtC0O,OACI1B,IACAU,EAAEE,OAAOnC,SAEbI,QAASI,EAAMjM,GACX,GAAI4I,MAAMC,QAAQoD,GAAO,CACrB,GAAIiC,EAAYjC,GAAO,OACvB,OAAOA,EAAKtB,KAAI6D,GAASjB,EAAQiB,GAAO,GAAM,EAAOxO,KAEzD,OAAOuN,EAAQtB,GAAM,GAAM,EAAOjM,IAEtC2O,aAAc1C,EAAMjM,GAChB,GAAI4I,MAAMC,QAAQoD,GAAO,CACrB,GAAIiC,EAAYjC,GAAO,OACvB,OAAOA,EAAKtB,KAAI6D,GAASjB,EAAQiB,GAAO,GAAM,EAAMxO,KAExD,OAAOuN,EAAQtB,GAAM,GAAM,EAAMjM,IAErCkM,OAAQC,GACJuB,EAAEE,OAAO1B,OAAOC,IAEpB1L,UAGI,IAAI6N,EAAJ,CAIA,IADAA,GAAe,GACRZ,EAAEa,QAAU7B,EAAagB,EAAErG,aAAeqG,EAAEE,OAAOxL,QAAO,CAC7D,IAAIgF,EAAQ,GAAI6E,EAAO,GACnB6B,EAAIJ,EAAEE,OAAOxL,OACbsL,EAAElB,UAASsB,EAAIc,KAAKC,IAAIf,EAAGJ,EAAElB,UACjC,IAAK,IAAIlH,EAAI,EAAGA,EAAIwI,EAAGxI,IAAK,CACxB,IAAIiG,EAAOmC,EAAEE,OAAOpF,QACpBpB,EAAMY,KAAKuD,GACXoB,EAAY3E,KAAKuD,GACjBU,EAAKjE,KAAKuD,EAAKU,MAGnBS,GAAc,EAEU,IAApBgB,EAAEE,OAAOxL,QACTiL,EAAQ,SAGRX,IAAegB,EAAErG,aACjBgG,EAAQ,aAGZ,IAAIxK,EAAKmB,EAAS6J,EAAUzG,IAC5BqF,EAAQR,EAAMpJ,GAElByL,GAAe,IAEnBlM,OAAO,IACIsL,EAAEE,OAAOxL,OAEpBmC,QAAQ,IACGmI,EAEXC,YAAY,IACDA,EAEXsB,KAAI,IACOP,EAAEE,OAAOxL,OAASsK,IAAe,EAE5CoC,QACIpB,EAAEa,QAAS,GAEfQ,UACqB,IAAbrB,EAAEa,SACNb,EAAEa,QAAS,EACXxN,EAAe2M,EAAEjN,YA0BzB,OAtBAqD,OAAOkL,iBAAiBtB,EAAG,CACvBZ,UAAW,CACPmC,UAAU,EACVzN,MAAO2M,EAAY,cAEvBpB,YAAa,CACTkC,UAAU,EACVzN,MAAO2M,EAAY,gBAEvB1C,MAAO,CACHwD,UAAU,EACVzN,MAAO2M,EAAY,UAEvBtB,MAAO,CACHoC,UAAU,EACVzN,MAAO2M,EAAY,UAEvBtM,MAAO,CACHoN,UAAU,EACVzN,MAAO2M,EAAY,YAGpBT,EAiDX,SAASwB,EAAM3C,EAAQC,GACnB,OAAOF,EAAMC,EAAQ,EAAGC,GAyD5B,SAAS2C,EAAQ5C,EAAQlF,EAAamF,GAClC,OAAOF,EAAMC,EAAQlF,EAAamF,GAkItC,IAAI4C,EAAWlN,GAVf,SAAgBmD,EAAMgK,EAAMpM,EAAUjD,GAClCA,EAAW2D,EAAK3D,GAChB,IAAIoD,EAAYpB,EAAUiB,GAC1B,OAAO2D,EAAevB,GAAM,CAACiK,EAAGhK,EAAGhC,KAC/BF,EAAUiM,EAAMC,GAAG,CAAC5N,EAAK8B,KACrB6L,EAAO7L,EACPF,EAAO5B,SAEZA,GAAO1B,EAAS0B,EAAK2N,OAEI,GAwChC,SAASE,KAAOC,GACZ,IAAIC,EAAaD,EAAU7E,IAAI3I,GAC/B,OAAO,YAAanC,GAChB,IAAI+C,EAAOzC,KAEP0C,EAAKhD,EAAKA,EAAKuC,OAAS,GAc5B,MAbiB,mBAANS,EACPhD,EAAKI,MAEL4C,EAAKmE,IAGToI,EAASK,EAAY5P,GAAM,CAAC6P,EAAS9P,EAAI0D,KACrC1D,EAAGD,MAAMiD,EAAM8M,EAAQ5M,QAAO,CAACpB,KAAQiO,KACnCrM,EAAO5B,EAAKiO,UAGpB,CAACjO,EAAKwB,IAAYL,EAAGnB,KAAQwB,KAEtBL,EAAGkE,IA0ClB,SAAS6I,KAAW/P,GAChB,OAAO0P,KAAO1P,EAAKgQ,WA0BvB,IAAIC,EAAa5N,GAHjB,SAAmBmD,EAAMlB,EAAOlB,EAAUjD,GACtC,OAAO+C,EAAUgC,EAAYZ,GAAQkB,EAAMpC,EAAUjD,KAErB,GAwChC+P,EAAgB7N,GAlBpB,SAAqBmD,EAAMlB,EAAOlB,EAAUjD,GACxC,IAAIoD,EAAYpB,EAAUiB,GAC1B,OAAO6M,EAAWzK,EAAMlB,GAAO,CAAC6L,EAAK1M,KACjCF,EAAU4M,GAAK,CAACtO,KAAQ7B,IAChB6B,EAAY4B,EAAO5B,GAChB4B,EAAO5B,EAAK7B,QAExB,CAAC6B,EAAKuO,KAEL,IADA,IAAI7O,EAAS,GACJkE,EAAI,EAAGA,EAAI2K,EAAW7N,OAAQkD,IAC/B2K,EAAW3K,KACXlE,EAASA,EAAO0B,UAAUmN,EAAW3K,KAI7C,OAAOtF,EAAS0B,EAAKN,QAGa,GAmGtC8O,EAAWhO,GAHf,SAAgBmD,EAAMpC,EAAUjD,GAC5B,OAAO+P,EAAc1K,EAAMmB,IAAUvD,EAAUjD,KAEnB,GAyB5BmQ,EAAiBjO,GAHrB,SAAsBmD,EAAMpC,EAAUjD,GAClC,OAAO+P,EAAc1K,EAAM,EAAGpC,EAAUjD,KAEA,GA4C5C,SAASoQ,MAAYvQ,GACjB,OAAO,YAAawQ,GAEhB,OADeA,EAAYpQ,KACpBD,CAAS,QAASH,IAIjC,SAASyQ,GAAcC,EAAOC,GAC1B,MAAO,CAAC9N,EAAQM,EAAKI,EAAWP,KAC5B,IACI4N,EADAC,GAAa,EAEjB,MAAMzN,EAAWjB,EAAUoB,GAC3BV,EAAOM,GAAK,CAACxB,EAAO6B,EAAGrD,KACnBiD,EAASzB,GAAO,CAACE,EAAKN,IACdM,IAAe,IAARA,EAAsB1B,EAAS0B,GAEtC6O,EAAMnP,KAAYqP,GAClBC,GAAa,EACbD,EAAaD,GAAU,EAAMhP,GACtBxB,EAAS,KAAM0D,SAE1B1D,SAEL0B,IACC,GAAIA,EAAK,OAAOmB,EAAGnB,GACnBmB,EAAG,KAAM6N,EAAaD,EAAaD,GAAU,QA+EzD,IAAIG,GAAWzO,GAHf,SAAgBmD,EAAMpC,EAAUjD,GAC5B,OAAOsQ,IAAcM,GAAQA,IAAM,CAAC3J,EAAKpB,IAASA,GAA3CyK,CAAiD7J,EAAUpB,EAAMpC,EAAUjD,KAEtD,GA4B5B6Q,GAAgB3O,GAHpB,SAAqBmD,EAAMlB,EAAOlB,EAAUjD,GACxC,OAAOsQ,IAAcM,GAAQA,IAAM,CAAC3J,EAAKpB,IAASA,GAA3CyK,CAAiDvL,EAAYZ,GAAQkB,EAAMpC,EAAUjD,KAEtD,GA2BtC8Q,GAAiB5O,GAJrB,SAAsBmD,EAAMpC,EAAUjD,GAClC,OAAOsQ,IAAcM,GAAQA,IAAM,CAAC3J,EAAKpB,IAASA,GAA3CyK,CAAiDvL,EAAY,GAAIM,EAAMpC,EAAUjD,KAGhD,GAE5C,SAAS+Q,GAAY9F,GACjB,MAAO,CAACrL,KAAOC,IAASmC,EAAUpC,EAAVoC,IAAiBnC,GAAM,CAAC6B,KAAQsP,KAE7B,iBAAZC,UAEHvP,EAEIuP,QAAQpP,OACRoP,QAAQpP,MAAMH,GAEXuP,QAAQhG,IACf+F,EAAW7I,SAAQmH,GAAK2B,QAAQhG,GAAMqE,SAmCtD,IAAI4B,GAAMH,GAAY,OAgDlBI,GAAajP,GAvBjB,SAAkBe,EAAUmO,EAAMpR,GAC9BA,EAAWgE,EAAShE,GACpB,IAEIkD,EAFAmO,EAAMrP,EAAUiB,GAChBqO,EAAQtP,EAAUoP,GAGtB,SAAS1M,EAAKhD,KAAQ7B,GAClB,GAAI6B,EAAK,OAAO1B,EAAS0B,IACb,IAARA,IACJwB,EAAUrD,EACVyR,KAASzR,EAAM0Q,IAGnB,SAASA,EAAM7O,EAAK6P,GAChB,OAAI7P,EAAY1B,EAAS0B,IACb,IAARA,EACC6P,OACLF,EAAI3M,GADe1E,EAAS,QAASkD,QADrC,EAKJ,OAAOqN,EAAM,MAAM,KAGa,GAuBpC,SAASiB,GAAQvO,EAAUmO,EAAMpR,GAC7B,MAAMsR,EAAQtP,EAAUoP,GACxB,OAAOD,GAAWlO,GAAU,IAAIpD,KAC5B,MAAMgD,EAAKhD,EAAKI,MAChBqR,KAASzR,GAAM,CAAC6B,EAAK6P,IAAU1O,EAAInB,GAAM6P,OAC1CvR,GAGP,SAASyR,GAAcxO,GACnB,MAAO,CAACzB,EAAO+B,EAAOvD,IAAaiD,EAASzB,EAAOxB,GA0GvD,IAAI0R,GAAOxP,GAJX,SAAmBmD,EAAMpC,EAAUjD,GAC/B,OAAOyG,EAASpB,EAAMoM,GAAczP,EAAUiB,IAAYjD,KAG/B,GA0B3B2R,GAAczP,GAHlB,SAAqBmD,EAAMlB,EAAOlB,EAAUjD,GACxC,OAAO+E,EAAYZ,EAAZY,CAAmBM,EAAMoM,GAAczP,EAAUiB,IAAYjD,KAEhC,GA4BpC4R,GAAe1P,GAHnB,SAAoBmD,EAAMpC,EAAUjD,GAChC,OAAO2R,GAAYtM,EAAM,EAAGpC,EAAUjD,KAEF,GAqCxC,SAAS6R,GAAYjS,GACjB,OAAIsB,EAAQtB,GAAYA,EACjB,YAAaC,GAChB,IAAIG,EAAWH,EAAKI,MAChB6R,GAAO,EACXjS,EAAKmI,MAAK,IAAI+J,KACND,EACA/Q,GAAe,IAAMf,KAAY+R,KAEjC/R,KAAY+R,MAGpBnS,EAAGD,MAAMQ,KAAMN,GACfiS,GAAO,GAqGf,IAAIE,GAAU9P,GAHd,SAAemD,EAAMpC,EAAUjD,GAC3B,OAAOsQ,IAAcM,IAASA,IAAM3J,IAAQA,GAArCqJ,CAA0C7J,EAAUpB,EAAMpC,EAAUjD,KAEjD,GA0B1BiS,GAAe/P,GAHnB,SAAoBmD,EAAMlB,EAAOlB,EAAUjD,GACvC,OAAOsQ,IAAcM,IAASA,IAAM3J,IAAQA,GAArCqJ,CAA0CvL,EAAYZ,GAAQkB,EAAMpC,EAAUjD,KAEjD,GAyBpCkS,GAAgBhQ,GAHpB,SAAqBmD,EAAMpC,EAAUjD,GACjC,OAAOsQ,IAAcM,IAASA,IAAM3J,IAAQA,GAArCqJ,CAA0C1J,EAAgBvB,EAAMpC,EAAUjD,KAE3C,GAE1C,SAASmS,GAAYzP,EAAQM,EAAKC,EAAUjD,GACxC,IAAIoS,EAAc,IAAIxJ,MAAM5F,EAAIZ,QAChCM,EAAOM,GAAK,CAACsM,EAAG/L,EAAOD,KACnBL,EAASqM,GAAG,CAAC5N,EAAK8B,KACd4O,EAAY7O,KAAWC,EACvBF,EAAO5B,SAEZA,IACC,GAAIA,EAAK,OAAO1B,EAAS0B,GAEzB,IADA,IAAIwB,EAAU,GACLoC,EAAI,EAAGA,EAAItC,EAAIZ,OAAQkD,IACxB8M,EAAY9M,IAAIpC,EAAQ8E,KAAKhF,EAAIsC,IAEzCtF,EAAS,KAAMkD,MAIvB,SAASmP,GAAc3P,EAAQ2C,EAAMpC,EAAUjD,GAC3C,IAAIkD,EAAU,GACdR,EAAO2C,GAAM,CAACiK,EAAG/L,EAAOD,KACpBL,EAASqM,GAAG,CAAC5N,EAAK8B,KACd,GAAI9B,EAAK,OAAO4B,EAAO5B,GACnB8B,GACAN,EAAQ8E,KAAK,CAACzE,QAAO/B,MAAO8N,IAEhChM,EAAO5B,SAEZA,IACC,GAAIA,EAAK,OAAO1B,EAAS0B,GACzB1B,EAAS,KAAMkD,EACVoP,MAAK,CAACC,EAAGC,IAAMD,EAAEhP,MAAQiP,EAAEjP,QAC3BoH,KAAInH,GAAKA,EAAEhC,YAIxB,SAASiR,GAAQ/P,EAAQ2C,EAAMpC,EAAUjD,GAErC,OADayD,EAAY4B,GAAQ8M,GAAcE,IACjC3P,EAAQ2C,EAAMrD,EAAUiB,GAAWjD,GA0ErD,IAAI0S,GAAWxQ,GAHf,SAAiBmD,EAAMpC,EAAUjD,GAC7B,OAAOyS,GAAQhM,EAAUpB,EAAMpC,EAAUjD,KAEb,GAyB5B2S,GAAgBzQ,GAHpB,SAAsBmD,EAAMlB,EAAOlB,EAAUjD,GACzC,OAAOyS,GAAQ1N,EAAYZ,GAAQkB,EAAMpC,EAAUjD,KAEb,GAuBtC4S,GAAiB1Q,GAHrB,SAAuBmD,EAAMpC,EAAUjD,GACnC,OAAOyS,GAAQ7L,EAAgBvB,EAAMpC,EAAUjD,KAEP,GA4CxC6S,GAAY3Q,GAXhB,SAAiBtC,EAAIkT,GACjB,IAAI1O,EAAOJ,EAAS8O,GAChB/K,EAAO/F,EAAU6P,GAAYjS,IAOjC,OALA,SAAS8E,EAAKhD,GACV,GAAIA,EAAK,OAAO0C,EAAK1C,IACT,IAARA,GACJqG,EAAKrD,GAEFA,KAEuB,GAmD9BqO,GAAiB7Q,GA7BrB,SAAsBmD,EAAMlB,EAAOlB,EAAUjD,GACzC,IAAIoD,EAAYpB,EAAUiB,GAC1B,OAAO6M,EAAWzK,EAAMlB,GAAO,CAAC6L,EAAK1M,KACjCF,EAAU4M,GAAK,CAACtO,EAAK8D,IACb9D,EAAY4B,EAAO5B,GAChB4B,EAAO5B,EAAK,CAAC8D,MAAKwK,aAE9B,CAACtO,EAAKuO,KAKL,IAJA,IAAI7O,EAAS,IAET,eAAC4R,GAAkBlP,OAAOmP,UAErB3N,EAAI,EAAGA,EAAI2K,EAAW7N,OAAQkD,IACnC,GAAI2K,EAAW3K,GAAI,CACf,IAAI,IAACE,GAAOyK,EAAW3K,IACnB,IAAC0K,GAAOC,EAAW3K,GAEnB0N,EAAe9S,KAAKkB,EAAQoE,GAC5BpE,EAAOoE,GAAKwC,KAAKgI,GAEjB5O,EAAOoE,GAAO,CAACwK,GAK3B,OAAOhQ,EAAS0B,EAAKN,QAIe,GA6F5C,SAAS8R,GAAS7N,EAAMpC,EAAUjD,GAC9B,OAAO+S,GAAe1N,EAAMmB,IAAUvD,EAAUjD,GAsBpD,SAASmT,GAAe9N,EAAMpC,EAAUjD,GACpC,OAAO+S,GAAe1N,EAAM,EAAGpC,EAAUjD,GA8B7C,IAAIoT,GAAMrC,GAAY,OAqClBsC,GAAmBnR,GAbvB,SAAwB8C,EAAKb,EAAOlB,EAAUjD,GAC1CA,EAAW2D,EAAK3D,GAChB,IAAIsT,EAAS,GACTlQ,EAAYpB,EAAUiB,GAC1B,OAAO8B,EAAYZ,EAAZY,CAAmBC,GAAK,CAACgL,EAAKxK,EAAKd,KACtCtB,EAAU4M,EAAKxK,GAAK,CAAC9D,EAAKN,KACtB,GAAIM,EAAK,OAAOgD,EAAKhD,GACrB4R,EAAO9N,GAAOpE,EACdsD,EAAKhD,SAEVA,GAAO1B,EAAS0B,EAAK4R,OAGoB,GAyIhD,SAASC,GAAUvO,EAAK/B,EAAUjD,GAC9B,OAAOqT,GAAiBrO,EAAKwB,IAAUvD,EAAUjD,GAuBrD,SAASwT,GAAgBxO,EAAK/B,EAAUjD,GACpC,OAAOqT,GAAiBrO,EAAK,EAAG/B,EAAUjD,GA2C9C,SAASyT,GAAQ7T,EAAI8T,EAASlQ,IAAKA,IAC/B,IAAI6L,EAAOvL,OAAO4D,OAAO,MACrBiM,EAAS7P,OAAO4D,OAAO,MACvB2J,EAAMrP,EAAUpC,GAChBgU,EAAW7T,GAAc,CAACF,EAAMG,KAChC,IAAIwF,EAAMkO,KAAU7T,GAChB2F,KAAO6J,EACPtO,GAAe,IAAMf,EAAS,QAASqP,EAAK7J,MACrCA,KAAOmO,EACdA,EAAOnO,GAAKwC,KAAKhI,IAEjB2T,EAAOnO,GAAO,CAACxF,GACfqR,KAAOxR,GAAM,CAAC6B,KAAQsP,KAEbtP,IACD2N,EAAK7J,GAAOwL,GAEhB,IAAItD,EAAIiG,EAAOnO,UACRmO,EAAOnO,GACd,IAAK,IAAIF,EAAI,EAAGwI,EAAIJ,EAAEtL,OAAQkD,EAAIwI,EAAGxI,IACjCoI,EAAEpI,GAAG5D,KAAQsP,UAO7B,OAFA4C,EAASvE,KAAOA,EAChBuE,EAASC,WAAajU,EACfgU,EA8CX,IAAIlT,GAAWG,EARXL,EACWC,QAAQC,SACZJ,EACIC,aAEAI,GAKXmT,GAAY5R,GAAS,CAACQ,EAAQ0E,EAAOpH,KACrC,IAAIkD,EAAUO,EAAY2D,GAAS,GAAK,GAExC1E,EAAO0E,GAAO,CAACW,EAAMvC,EAAKuF,KACtB/I,EAAU+F,EAAV/F,EAAgB,CAACN,KAAQN,KACjBA,EAAOgB,OAAS,KACfhB,GAAUA,GAEf8B,EAAQsC,GAAOpE,EACf2J,EAAOrJ,SAEZA,GAAO1B,EAAS0B,EAAKwB,OACzB,GAiKH,SAAS6Q,GAAS3M,EAAOpH,GACrB,OAAO8T,GAAUrN,EAAUW,EAAOpH,GAuBtC,SAASgU,GAAc5M,EAAOjD,EAAOnE,GACjC,OAAO8T,GAAU/O,EAAYZ,GAAQiD,EAAOpH,GAiJhD,SAASiU,GAAS1H,EAAQlF,GACtB,IAAIoF,EAAUzK,EAAUuK,GACxB,OAAOD,GAAM,CAAC4H,EAAOrR,KACjB4J,EAAQyH,EAAM,GAAIrR,KACnBwE,EAAa,GAKpB,MAAM8M,GACFhJ,cACIhL,KAAKiU,KAAO,GACZjU,KAAKkU,UAAYC,OAAOC,iBAGxBnS,aACA,OAAOjC,KAAKiU,KAAKhS,OAGrBqJ,QAEI,OADAtL,KAAKiU,KAAO,GACLjU,KAGXqU,OAAOjR,GACH,IAAIkR,EAEJ,KAAOlR,EAAQ,GAAKmR,GAAQvU,KAAKiU,KAAK7Q,GAAQpD,KAAKiU,KAAKK,EAAEE,GAAOpR,MAAU,CACvE,IAAIqR,EAAIzU,KAAKiU,KAAK7Q,GAClBpD,KAAKiU,KAAK7Q,GAASpD,KAAKiU,KAAKK,GAC7BtU,KAAKiU,KAAKK,GAAKG,EAEfrR,EAAQkR,GAIhBI,SAAStR,GACL,IAAIuK,EAEJ,MAAQA,EAmEE,GAnEQvK,GAmEX,IAnEqBpD,KAAKiU,KAAKhS,SAC9B0L,EAAE,EAAI3N,KAAKiU,KAAKhS,QAAUsS,GAAQvU,KAAKiU,KAAKtG,EAAE,GAAI3N,KAAKiU,KAAKtG,MAC5DA,GAAM,IAGN4G,GAAQvU,KAAKiU,KAAK7Q,GAAQpD,KAAKiU,KAAKtG,MALE,CAS1C,IAAI8G,EAAIzU,KAAKiU,KAAK7Q,GAClBpD,KAAKiU,KAAK7Q,GAASpD,KAAKiU,KAAKtG,GAC7B3N,KAAKiU,KAAKtG,GAAK8G,EAEfrR,EAAQuK,GAIhB9F,KAAKuD,GACDA,EAAK8I,YAAclU,KAAKkU,UACxBlU,KAAKiU,KAAKpM,KAAKuD,GACfpL,KAAKqU,OAAOrU,KAAKiU,KAAKhS,OAAO,GAGjCyJ,QAAQN,GACJ,OAAOpL,KAAKiU,KAAKpM,KAAKuD,GAG1B/C,QACI,IAAKsM,GAAO3U,KAAKiU,KAMjB,OAJAjU,KAAKiU,KAAK,GAAKjU,KAAKiU,KAAKjU,KAAKiU,KAAKhS,OAAO,GAC1CjC,KAAKiU,KAAKnU,MACVE,KAAK0U,SAAS,GAEPC,EAGX/I,UACI,MAAO,IAAI5L,MAGf,EAAE2B,OAAO6D,YACL,IAAK,IAAIL,EAAI,EAAGA,EAAInF,KAAKiU,KAAKhS,OAAQkD,UAC5BnF,KAAKiU,KAAK9O,GAAG2G,KAI3BC,OAAQC,GACJ,IAAI4I,EAAI,EACR,IAAK,IAAIzP,EAAI,EAAGA,EAAInF,KAAKiU,KAAKhS,OAAQkD,IAC7B6G,EAAOhM,KAAKiU,KAAK9O,MAClBnF,KAAKiU,KAAKW,GAAK5U,KAAKiU,KAAK9O,GACzByP,KAIR5U,KAAKiU,KAAKrG,OAAOgH,GAEjB,IAAK,IAAIzP,EAAIqP,GAAOxU,KAAKiU,KAAKhS,OAAO,GAAIkD,GAAK,EAAGA,IAC7CnF,KAAK0U,SAASvP,GAGlB,OAAOnF,MAQf,SAASwU,GAAOrP,GACZ,OAASA,EAAE,GAAI,GAAG,EAGtB,SAASoP,GAAQpF,EAAG0F,GAChB,OAAI1F,EAAE2F,WAAaD,EAAEC,SACV3F,EAAE2F,SAAWD,EAAEC,SAGf3F,EAAE+E,UAAYW,EAAEX,UA2B/B,SAASa,GAAc3I,EAAQlF,GAE3B,IAAIqG,EAAIuG,GAAQ1H,EAAQlF,GACpBiG,GAAsB,EAwC1B,OAtCAI,EAAEE,OAAS,IAAIuG,GAGfzG,EAAE1F,KAAO,SAASiE,EAAMgJ,EAAW,EAAGjV,EAAW,UAC7C,GAAwB,mBAAbA,EACP,MAAM,IAAI4B,MAAM,oCAMpB,GAJA8L,EAAEC,SAAU,EACP/E,MAAMC,QAAQoD,KACfA,EAAO,CAACA,IAEQ,IAAhBA,EAAK7J,QAAgBsL,EAAEO,OAEvB,OAAOlN,GAAe,IAAM2M,EAAEb,UAGlC,IAAK,IAAIvH,EAAI,EAAGwI,EAAI7B,EAAK7J,OAAQkD,EAAIwI,EAAGxI,IAAK,CACzC,IAAIO,EAAO,CACPoG,KAAMA,EAAK3G,GACX2P,WACAjV,YAGJ0N,EAAEE,OAAO5F,KAAKnC,GAGbyH,IACDA,GAAsB,EACtBvM,GAAe,KACXuM,GAAsB,EACtBI,EAAEjN,sBAMPiN,EAAE7B,QAEF6B,EAgDX,IAAIyH,GAASjT,GATb,SAAckF,EAAOpH,GAEjB,GADAA,EAAW2D,EAAK3D,IACX4I,MAAMC,QAAQzB,GAAQ,OAAOpH,EAAS,IAAIoV,UAAU,yDACzD,IAAKhO,EAAMhF,OAAQ,OAAOpC,IAC1B,IAAK,IAAIsF,EAAI,EAAGwI,EAAI1G,EAAMhF,OAAQkD,EAAIwI,EAAGxI,IACrCtD,EAAUoF,EAAM9B,GAAhBtD,CAAoBhC,KAIA,GAyB5B,SAASqV,GAAaC,EAAOjG,EAAMpM,EAAUjD,GACzC,IAAIuV,EAAW,IAAID,GAAOzF,UAC1B,OAAOT,EAASmG,EAAUlG,EAAMpM,EAAUjD,GA0C9C,SAASwV,GAAQ5V,GACb,IAAIyR,EAAMrP,EAAUpC,GACpB,OAAOG,GAAc,SAAmBF,EAAM4V,GAgB1C,OAfA5V,EAAKmI,MAAK,CAACnG,KAAUW,KACjB,IAAIkT,EAAS,GAIb,GAHI7T,IACA6T,EAAO7T,MAAQA,GAEfW,EAAOJ,OAAS,EAAE,CAClB,IAAIZ,EAAQgB,EACRA,EAAOJ,QAAU,KAChBZ,GAASgB,GAEdkT,EAAOlU,MAAQA,EAEnBiU,EAAgB,KAAMC,MAGnBrE,EAAI1R,MAAMQ,KAAMN,MAuE/B,SAAS8V,GAAWvO,GAChB,IAAIlE,EASJ,OARI0F,MAAMC,QAAQzB,GACdlE,EAAUkE,EAAMuD,IAAI6K,KAEpBtS,EAAU,GACVY,OAAOiC,KAAKqB,GAAOe,SAAQ3C,IACvBtC,EAAQsC,GAAOgQ,GAAQtV,KAAKC,KAAMiH,EAAM5B,QAGzCtC,EAGX,SAASX,GAAOG,EAAQM,EAAKI,EAAWpD,GACpC,MAAMiD,EAAWjB,EAAUoB,GAC3B,OAAOqP,GAAQ/P,EAAQM,GAAK,CAACxB,EAAOqB,KAChCI,EAASzB,GAAO,CAACE,EAAK8B,KAClBX,EAAGnB,GAAM8B,QAEdxD,GAoEP,IAAI4V,GAAW1T,GAHf,SAAmBmD,EAAMpC,EAAUjD,GAC/B,OAAOuC,GAAOkE,EAAUpB,EAAMpC,EAAUjD,KAEV,GAyB9B6V,GAAgB3T,GAHpB,SAAsBmD,EAAMlB,EAAOlB,EAAUjD,GACzC,OAAOuC,GAAOwC,EAAYZ,GAAQkB,EAAMpC,EAAUjD,KAEZ,GAuBtC8V,GAAiB5T,GAHrB,SAAuBmD,EAAMpC,EAAUjD,GACnC,OAAOuC,GAAOqE,EAAgBvB,EAAMpC,EAAUjD,KAEN,GAE5C,SAAS+V,GAAWvU,GAChB,OAAO,WACH,OAAOA,GA4Ff,SAASwU,GAAMC,EAAMlO,EAAM/H,GACvB,IAAIkW,EAAU,CACVC,MALc,EAMdC,aAAcL,GALG,IAgBrB,GARIM,UAAUjU,OAAS,GAAqB,mBAAT6T,GAC/BjW,EAAW+H,GAAQf,IACnBe,EAAOkO,IAEPK,GAAWJ,EAASD,GACpBjW,EAAWA,GAAYgH,KAGP,mBAATe,EACP,MAAM,IAAInG,MAAM,qCAGpB,IAAI2U,EAAQvU,EAAU+F,GAElByO,EAAU,EACd,SAASC,IACLF,GAAM,CAAC7U,KAAQ7B,MACC,IAAR6B,IACAA,GAAO8U,IAAYN,EAAQC,QACI,mBAAvBD,EAAQQ,aACZR,EAAQQ,YAAYhV,IACxBd,WAAW6V,EAAcP,EAAQE,aAAaI,EAAU,IAExDxW,EAAS0B,KAAQ7B,OAM7B,OADA4W,IACOzW,EAAS+G,GAGpB,SAASuP,GAAWK,EAAK/B,GACrB,GAAiB,iBAANA,EACP+B,EAAIR,OAASvB,EAAEuB,OA3CD,EA6CdQ,EAAIP,aAAqC,mBAAfxB,EAAEgC,SACxBhC,EAAEgC,SACFb,IAAYnB,EAAEgC,UA9CD,GAgDjBD,EAAID,YAAc9B,EAAE8B,gBACjB,IAAiB,iBAAN9B,GAA+B,iBAANA,EAGvC,MAAM,IAAIhT,MAAM,qCAFhB+U,EAAIR,OAASvB,GAnDC,GAsFtB,SAASiC,GAAWZ,EAAMlO,GACjBA,IACDA,EAAOkO,EACPA,EAAO,MAEX,IAAI9T,EAAS8T,GAAQA,EAAK9T,OAAU4F,EAAK3F,OACrClB,EAAQ6G,KACR5F,GAAS,GAEb,IAAIoU,EAAQvU,EAAU+F,GACtB,OAAOhI,GAAc,CAACF,EAAMG,KAKxB,SAASsI,EAAOzF,GACZ0T,KAAS1W,EAAMgD,GAMnB,OAXIhD,EAAKuC,OAASD,EAAQ,GAAiB,MAAZnC,KAC3BH,EAAKmI,KAAKhI,GACVA,EAAWgH,KAMXiP,EAAMD,GAAMC,EAAM3N,EAAQtI,GACzBgW,GAAM1N,EAAQtI,GAEZA,EAAS+G,MAyKxB,SAAS+P,GAAO1P,EAAOpH,GACnB,OAAO8T,GAAUlN,EAAgBQ,EAAOpH,GAuG5C,IAAI+W,GAAS7U,GAHb,SAAcmD,EAAMpC,EAAUjD,GAC1B,OAAOsQ,GAAc0G,SAAS/P,GAAOA,GAA9BqJ,CAAmC7J,EAAUpB,EAAMpC,EAAUjD,KAE5C,GA2BxBiX,GAAc/U,GAHlB,SAAmBmD,EAAMlB,EAAOlB,EAAUjD,GACtC,OAAOsQ,GAAc0G,SAAS/P,GAAOA,GAA9BqJ,CAAmCvL,EAAYZ,GAAQkB,EAAMpC,EAAUjD,KAE5C,GA0BlCkX,GAAehV,GAHnB,SAAoBmD,EAAMpC,EAAUjD,GAChC,OAAOsQ,GAAc0G,SAAS/P,GAAOA,GAA9BqJ,CAAmC1J,EAAgBvB,EAAMpC,EAAUjD,KAEtC,GAyKpCmX,GAAWjV,GAjBf,SAAiBmD,EAAMpC,EAAUjD,GAC7B,IAAIoD,EAAYpB,EAAUiB,GAC1B,OAAOyD,EAAMrB,GAAM,CAACiK,EAAGhM,KACnBF,EAAUkM,GAAG,CAAC5N,EAAK0V,KACf,GAAI1V,EAAK,OAAO4B,EAAO5B,GACvB4B,EAAO5B,EAAK,CAACF,MAAO8N,EAAG8H,mBAE5B,CAAC1V,EAAKwB,KACL,GAAIxB,EAAK,OAAO1B,EAAS0B,GACzB1B,EAAS,KAAMkD,EAAQoP,KAAK+E,GAAY1M,KAAInH,GAAKA,EAAEhC,YAGvD,SAAS6V,EAAWC,EAAMC,GACtB,IAAIhF,EAAI+E,EAAKF,SAAU5E,EAAI+E,EAAMH,SACjC,OAAO7E,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,KAGR,GA2ChC,SAASgF,GAAQvV,EAASwV,EAAcC,GACpC,IAAI9X,EAAKoC,EAAUC,GAEnB,OAAOlC,GAAc,CAACF,EAAMG,KACxB,IACI2X,EADAC,GAAW,EAcf/X,EAAKmI,MAAK,IAAIxF,KACLoV,IACD5X,KAAYwC,GACZqV,aAAaF,OAKrBA,EAAQ/W,YAnBR,WACI,IAAIqK,EAAOhJ,EAAQgJ,MAAQ,YACvBpJ,EAAS,IAAID,MAAM,sBAAwBqJ,EAAO,gBACtDpJ,EAAMiW,KAAO,YACTJ,IACA7V,EAAM6V,KAAOA,GAEjBE,GAAW,EACX5X,EAAS6B,KAWuB4V,GACpC7X,KAAMC,MA6Bd,SAASkY,GAAWC,EAAO7T,EAAOlB,EAAUjD,GACxC,IAAIoD,EAAYpB,EAAUiB,GAC1B,OAAO6M,EA3BX,SAAemI,GAEX,IADA,IAAI7W,EAASwH,MAAMqP,GACZA,KACH7W,EAAO6W,GAAQA,EAEnB,OAAO7W,EAsBW8W,CAAMF,GAAQ7T,EAAOf,EAAWpD,GAoCtD,SAASmW,GAAOgC,EAAGlV,EAAUjD,GACzB,OAAO+X,GAAWI,EAAG3R,IAAUvD,EAAUjD,GAkB7C,SAASoY,GAAaD,EAAGlV,EAAUjD,GAC/B,OAAO+X,GAAWI,EAAG,EAAGlV,EAAUjD,GA0ItC,SAASqY,GAAWhT,EAAMiT,EAAarV,EAAUjD,GACzCqW,UAAUjU,QAAU,GAA4B,mBAAhBkW,IAChCtY,EAAWiD,EACXA,EAAWqV,EACXA,EAAc1P,MAAMC,QAAQxD,GAAQ,GAAK,IAE7CrF,EAAW2D,EAAK3D,GAAYgH,KAC5B,IAAI5D,EAAYpB,EAAUiB,GAK1B,OAHAwD,EAASpB,GAAM,CAAC7B,EAAG+U,EAAG1V,KAClBO,EAAUkV,EAAa9U,EAAG+U,EAAG1V,MAC9BnB,GAAO1B,EAAS0B,EAAK4W,KACjBtY,EAAS+G,GA2DpB,IAAIyR,GAAYtW,GAlBhB,SAAiBkF,EAAOpH,GACpB,IACIoB,EADAS,EAAQ,KAEZ,OAAO+P,GAAaxK,GAAO,CAACW,EAAMgD,KAC9B/I,EAAU+F,EAAV/F,EAAgB,CAACN,KAAQ7B,KACrB,IAAY,IAAR6B,EAAe,OAAOqJ,EAAOrJ,GAE7B7B,EAAKuC,OAAS,GACbhB,GAAUvB,EAEXuB,EAASvB,EAEbgC,EAAQH,EACRqJ,EAAOrJ,EAAM,KAAO,UAEzB,IAAM1B,EAAS6B,EAAOT,QAkB7B,SAASqX,GAAU7Y,GACf,MAAO,IAAIC,KACCD,EAAGiU,YAAcjU,MAAOC,GA4DxC,IAAI6Y,GAAWxW,GAtBf,SAAgBkP,EAAMnO,EAAUjD,GAC5BA,EAAWgE,EAAShE,GACpB,IAAIqR,EAAMrP,EAAUiB,GAChBqO,EAAQtP,EAAUoP,GAClBlO,EAAU,GAEd,SAASwB,EAAKhD,KAAQiX,GAClB,GAAIjX,EAAK,OAAO1B,EAAS0B,GACzBwB,EAAUyV,GACE,IAARjX,GACJ4P,EAAMf,GAGV,SAASA,EAAM7O,EAAK6P,GAChB,OAAI7P,EAAY1B,EAAS0B,IACb,IAARA,EACC6P,OACLF,EAAI3M,GADe1E,EAAS,QAASkD,QADrC,EAKJ,OAAOoO,EAAMf,KAEe,GAyChC,SAASqI,GAAMxH,EAAMnO,EAAUjD,GAC3B,MAAMsR,EAAQtP,EAAUoP,GACxB,OAAOsH,IAAU7V,GAAOyO,GAAM,CAAC5P,EAAK6P,IAAU1O,EAAInB,GAAM6P,MAAStO,EAAUjD,GAkF/E,IAAI6Y,GAAc3W,GAtBlB,SAAoBkF,EAAOpH,GAEvB,GADAA,EAAW2D,EAAK3D,IACX4I,MAAMC,QAAQzB,GAAQ,OAAOpH,EAAS,IAAI4B,MAAM,8DACrD,IAAKwF,EAAMhF,OAAQ,OAAOpC,IAC1B,IAAI8Y,EAAY,EAEhB,SAASC,EAASlZ,GACHmC,EAAUoF,EAAM0R,KAC3B/Q,IAAQlI,EAAMmE,EAASU,IAG3B,SAASA,EAAKhD,KAAQ7B,GAClB,IAAY,IAAR6B,EACJ,OAAIA,GAAOoX,IAAc1R,EAAMhF,OACpBpC,EAAS0B,KAAQ7B,QAE5BkZ,EAASlZ,GAGbkZ,EAAS,OAwJb,SA5GY,CACRpZ,QACA8C,UAAWkE,EACXG,kBACA9F,WACAmG,OACAwC,aACAuF,QACA8J,WAAY7J,EACZS,UACA9M,OAAQoN,EACR+I,YAAalJ,EACbmJ,aAAc/I,EACdC,YACA+I,OAAQxI,GACRyI,YAAavI,GACbwI,aAAcvI,GACdI,OACAM,WACA8H,SAAUnI,GACVO,QACA6H,UAAW5H,GACX6H,OAAQ/S,EACR1B,YAAaoB,EACbsT,aAAc7S,EACd8S,WAAY9H,GACZC,eACA8H,MAAO3H,GACP4H,WAAY3H,GACZ4H,YAAa3H,GACb/E,OAAQuF,GACRoH,YAAanH,GACboH,aAAcnH,GACdoH,QAASnH,GACTK,WACA+G,aAAclH,GACdI,iBACAC,OACAzI,IAAKjE,EACLwT,SAAUpK,EACVqK,UAAWtT,EACX0M,aACA6G,eAAgB/G,GAChBG,mBACAC,WACA/S,YACAqT,YACAC,iBACAkB,iBACA5I,MAAO2H,GACPoG,KAAMlF,GACNmF,OAAQlL,EACRiG,eACAG,WACAG,cACApT,OAAQqT,GACR2E,YAAa1E,GACb2E,aAAc1E,GACdE,SACAa,aACAtH,MACAuH,UACAvW,aAAcQ,EACd0Z,KAAM1D,GACN2D,UAAWzD,GACX0D,WAAYzD,GACZ0D,OAAQzD,GACRK,WACArB,SACA4B,cACAK,eACAC,aACAwC,QAASrC,GACTC,aACAG,SACAkC,UAAWjC,GACXkC,OAAQrC,GAGRsC,IAAKhJ,GACLiJ,SAAUhJ,GACViJ,UAAWhJ,GACXiJ,IAAKpE,GACLqE,SAAUnE,GACVoE,UAAWnE,GACXoE,KAAM3K,GACN4K,UAAW1K,GACX2K,WAAY1K,GACZ2K,QAASvL,EACTwL,aAAc3L,EACd4L,cAAexL,EACfhI,QAASuJ,GACTkK,cAAehK,GACfiK,aAAclK,GACdmK,UAAWrV,EACXsV,gBAAiBnV,EACjBoV,eAAgB7V,EAChB8V,OAAQ7M,EACR8M,MAAO9M,EACP+M,MAAO9G,GACP+G,OAAQ1J,GACR2J,YAAa1J,GACb2J,aAAc1J,GACd2J,SAAUvb,EACVwb,OAAQ9D,GACR+D,SAAUtL,K,6BClzLd,IAAIuL,EAAkB,EAAQ,OAC1BC,EAAkB,EAAQ,OAC1B5Y,EAAkB,EAAQ,OAC1B6Y,EAAkB,EAAQ,MAC1BC,EAAkB,EAAQ,QAErBC,EAAOC,QAAU,SAAUC,EAAMxb,GACzC,IAAIyb,EAAG5b,EAAG6b,EAAGhH,EAASiH,EAkBtB,OAjBI9G,UAAUjU,OAAS,GAAqB,iBAAT4a,GAClC9G,EAAU1U,EACVA,EAAQwb,EACRA,EAAO,MAEP9G,EAAUG,UAAU,GAEjBqG,EAAQM,IACXC,EAAIJ,EAAS3c,KAAK8c,EAAM,KACxB3b,EAAIwb,EAAS3c,KAAK8c,EAAM,KACxBE,EAAIL,EAAS3c,KAAK8c,EAAM,OAExBC,EAAIC,GAAI,EACR7b,GAAI,GAGL8b,EAAO,CAAE3b,MAAOA,EAAO4b,aAAcH,EAAGI,WAAYhc,EAAG4N,SAAUiO,GACzDhH,EAAiBnS,EAAO6Y,EAAc1G,GAAUiH,GAAtCA,IAGjBG,GAAK,SAAUN,EAAMO,EAAKC,GAC3B,IAAIP,EAAG5b,EAAG6U,EAASiH,EA6BnB,MA5BoB,iBAATH,GACV9G,EAAUsH,EACVA,EAAMD,EACNA,EAAMP,EACNA,EAAO,MAEP9G,EAAUG,UAAU,GAEhBqG,EAAQa,GAEDZ,EAAgBY,GAGhBb,EAAQc,GAERb,EAAgBa,KAC3BtH,EAAUsH,EACVA,OAAMC,GAHND,OAAMC,GAHNvH,EAAUqH,EACVA,EAAMC,OAAMC,GAHZF,OAAME,EAUHf,EAAQM,IACXC,EAAIJ,EAAS3c,KAAK8c,EAAM,KACxB3b,EAAIwb,EAAS3c,KAAK8c,EAAM,OAExBC,GAAI,EACJ5b,GAAI,GAGL8b,EAAO,CAAEI,IAAKA,EAAKC,IAAKA,EAAKJ,aAAcH,EAAGI,WAAYhc,GAClD6U,EAAiBnS,EAAO6Y,EAAc1G,GAAUiH,GAAtCA,I,6BC1DnB,IAOoEO,EAAUpb,EAASC,EAPnFob,EAAa,EAAQ,OACrBC,EAAa,EAAQ,OACrBlB,EAAa,EAAQ,OACrBmB,EAAa,EAAQ,OACrBC,EAAa,EAAQ,OACrBC,EAAa,EAAQ,OAErBrW,EAAS5D,OAAO4D,OAAQsW,EAAiBla,OAAOka,eAEpDlB,EAAOC,QAAUA,EAAU,SAAU9R,EAAMgT,EAAOC,EAAOjX,GACxDgE,EAAOkT,OAAOlT,GACd0S,EAAS1W,GACLyV,EAAQwB,IAAQP,EAASO,GAC7BP,EAASM,GACTD,EAAejB,EAAQqB,YAAanT,EAAM4S,EAAEI,IAC5ClB,EAAQsB,WAAWpT,GAAQiT,EAC3BF,EAAejB,EAAQuB,UAAWrT,EAAM4S,EAAE5W,IAC1C8V,EAAQwB,OAAOvW,KAAKiD,IAGrB8R,EAAQwB,OAAS,CAAC,OAAQ,OAAQ,WAElCxB,EAAQqB,YAAcN,EACrBpW,EAAO8W,SAASvL,UAAW,CAC1B3R,KAAMuc,GAAE,SAAUY,EAAKC,GACtB,IAAIC,EAIJ,OAHKxe,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAK,OAAQ,CAACyW,EAAKC,EAAMC,EAAIrc,QAASqc,EAAIpc,SAChDoc,EAAIpd,WAEZ6C,KAAMyZ,GAAE,SAAUY,EAAKC,GAClBhC,EAAQ+B,IAAMd,EAASc,GACvB/B,EAAQgC,IAAOf,EAASe,GACvBve,KAAKye,UAASze,KAAKye,QAAU,IAClCze,KAAKye,QAAQ5W,KAAK,OAAQqO,cAE3BwI,SAAUhB,GAAE,GACZiB,eAAgBjB,GAAE,GAClBkB,QAASlB,GAAE,WAAc,OAAO1d,WAIlC4c,EAAQsB,WAAa,CACpB/c,KAAM,SAAUmd,EAAKC,EAAMM,EAAgBC,GAC1C,IAAIzd,EAAO0d,EAAO/e,KAAKgf,OAAST,EAAOD,EACvC,GAAK/B,EAAQwC,GAKb,GAAItB,EAAWsB,GAAf,CACC,GAAInB,EAAUmB,GACb,OAAIA,EAAKL,cACJK,EAAKC,OAAQF,EAAcC,EAAK1d,OAC/Bwd,EAAeE,EAAK1d,aAG1B0d,EAAK9a,KAAK4a,EAAgBC,GAG3B,IACCzd,EAAQ0d,EAAK/e,KAAKqB,OACjB,MAAOH,GAER,YADA4d,EAAc5d,GAGf2d,EAAexd,QAGhBwd,EAAeE,QAvBV/e,KAAKgf,OAAQF,EAAc9e,KAAKqB,OAC/Bwd,EAAe7e,KAAKqB,QAwB3B4C,KAAM,SAAUqa,EAAKC,GACpB,GAAIve,KAAKgf,OAAQ,CAChB,GAAIT,EAEH,YADAA,EAAKve,KAAKqB,OAGX,MAAMrB,KAAKqB,MAERid,GAAKA,EAAIte,KAAKqB,SAIpBub,EAAQuB,UAAYR,EACnBpW,EAAO8W,SAASvL,UAAW,CAC1B3R,KAAMuc,GAAE,SAAUY,EAAKC,GACtB,IAAIld,EAAO0d,EAAO/e,KAAKgf,OAAST,EAAOD,EACvC,IAAK/B,EAAQwC,GAAO,OAAO/e,KAC3B,GAAIyd,EAAWsB,GAAO,CACrB,GAAInB,EAAUmB,GAAO,OAAOA,EAC5B,IAAM1d,EAAQ0d,EAAK/e,KAAKqB,OACxB,MAAOH,GAAK,OAAOkB,EAAOlB,GAC1B,OAAOiB,EAAQd,GAEhB,OAAOc,EAAQ4c,MAEhB9a,KAAMyZ,GAAE,SAAUY,EAAKC,GAGtB,GAFIhC,EAAQ+B,IAAMd,EAASc,GACvB/B,EAAQgC,IAAOf,EAASe,GACxBve,KAAKgf,OAAQ,CAChB,GAAIT,EAEH,YADAA,EAAKve,KAAKqB,OAGX,MAAMrB,KAAKqB,MAERid,GAAKA,EAAIte,KAAKqB,UAEnBqd,SAAUhB,GAAE,GACZiB,eAAgBjB,GAAE,GAClBkB,QAASlB,GAAE,WAAc,OAAO1d,KAAKqB,YAIvCkc,EAAW,EAAQ,OACnBpb,EAAUob,EAASpb,QACnBC,EAASmb,EAASnb,OAClBmb,EAAS0B,OAASrC,G,6BCpHlB,IAAIsC,EAAY,EAAQ,OACpBtB,EAAY,EAAQ,OACpBL,EAAY,EAAQ,OACpBhd,EAAY,EAAQ,OAEpB4e,EAAiBxb,OAAOwb,eAE5BxC,EAAOC,QAAU,SAASwC,EAAK/d,GAC9B,IAAIF,EAAM8C,EAAMua,EAAKrc,EAASC,EAC9B,IAAKf,EAAO,OAAOA,EACnB,IAAMF,EAAOE,EAAMF,KACnB,MAAOD,GAAK,OAAOG,EACnB,GAAoB,mBAATF,EAAqB,OAAOE,EACvC,GAAIuc,EAAUvc,GAAQ,OAAOA,EAC7B,IAAK6d,EAAS7d,GAAQ,OAAOA,EAC7B,IAAK8d,EAAe9d,GAAQ,OAAOA,EACnC,IAAM4C,EAAO5C,EAAM4C,KACnB,MAAOob,IAIP,GAHAb,EAAMjB,IACNpb,EAAU,SAAUmd,GAAiBd,EAAIrc,QAAQid,EAAKE,KACtDld,EAAS,SAAUmd,GAAkBf,EAAIpc,OAAOmd,IAC5B,mBAATtb,EAAqB,CAC/B,IAAMA,EAAKlE,KAAKsB,EAAOc,EAASC,GAChC,MAAOlB,GAAK,OAAOsd,EAAIpc,OAAOlB,GAC9B,OAAOsd,EAAIpd,QAEZ,IACCD,EAAKpB,KACJsB,GACA,SAAUie,GACT/e,GAAS,WAAc4B,EAAQmd,SAEhC,SAAUC,GACThf,GAAS,WAAc6B,EAAOmd,SAG/B,MAAOre,GACR,OAAOsd,EAAIpc,OAAOlB,GAEnB,OAAOsd,EAAIpd,U,6BC5BZ,IAQIoe,EACAC,EAEApI,EACAqI,EACAC,EACAxd,EACAyd,EAfAC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBnC,EAAiB,EAAQ,OAEzBpE,EAAQ/Q,MAAMqK,UAAU0G,MACxB3R,EAAOY,MAAMqK,UAAUjL,KACvBsX,EAAiBxb,OAAOwb,eAGxBtH,EAAQ,EAOZ6H,EAAa,SAAUte,GACtBue,EAAIvB,OAAOpW,SAAQ,SAAU8C,GAC5B1J,EAAQ0J,GAAQ,WACf,OAAOqU,EAAe/d,GAAS0J,GAAMtL,MAAM4B,EAAS8U,eAGtD9U,EAAQud,gBAAiB,EACzBvd,EAAQsd,SAAWS,EAAe/d,GAASsd,UAG5Cvc,EAAU,SAAUd,EAAO2d,GAC1B,IAAI5d,EAAU,SAAUkd,EAAKC,GAAQ,OAAOnd,EAAQD,KAAKmd,EAAKC,IAM9D,OALAnd,EAAQC,MAAQA,EAChBD,EAAQ4d,OAASA,EACbe,EAAgBA,EAAe3e,EAASue,EAAIxB,WAC3CuB,EAAWte,GACZqe,EAAeO,UAAUP,EAAeO,UAAS,GAC9C5e,IAGRoe,EAAW,WACV,IAAIpe,EAAU,SAAUkd,EAAKC,GAAQ,OAAOnd,EAAQD,KAAKmd,EAAKC,IACzD1G,IAAOR,EAAU5W,WAAWqf,EAAM,QACrCjI,EACE4H,EAAeQ,WAAU7e,EAAQ8e,QAAUT,EAAeQ,YAC1DF,EAAgBA,EAAe3e,EAASue,EAAI1B,aAC3CyB,EAAWte,GACZqe,EAAeO,UAAUP,EAAeO,WAC5ChgB,KAAKoB,QAAUA,EACfpB,KAAKmC,QAAUnC,KAAKmC,QAAQge,KAAKngB,MACjCA,KAAKoC,OAASpC,KAAKoC,OAAO+d,KAAKngB,QAGvB8S,UAAY,CACpB4L,UAAU,EACV0B,QAAS,SAAU/e,GAClB,IAAI8D,EAAG2F,EAAMgB,EAAMuU,EAAMC,EAAUC,EAMnC,IALAvgB,KAAKoB,QAAQC,MAAQA,EACjB0e,EAAgBA,EAAe/f,KAAKoB,QAASue,EAAIxB,WAChDne,KAAKoB,QAAQsd,UAAW,EAC7B2B,EAAOrgB,KAAKoB,QAAQwH,oBACb5I,KAAKoB,QAAQwH,aACbyX,GAAM,CACZ,IAAKlb,EAAI,EAAImb,EAAWD,EAAKlb,KAAOA,EACnCmb,EAASjf,MAAQA,EACjBif,EAAStB,OAAShf,KAAKgf,OACnBe,EAAgBA,EAAeO,EAAUX,EAAIxB,WAC5CmC,EAAS5B,UAAW,SAClB4B,EAAS7B,QACZ6B,EAAS1X,eACR2X,EAAQ1Y,EAAKrI,MAAM+gB,EAAQD,EAAS1X,cACnC2X,EAASD,EAAS1X,oBAChB0X,EAAS1X,cAGlByX,EAAOE,EACPA,EAAS,KAEV,GAAKzU,EAAO9L,KAAKoB,QAAQqd,QAAU,CAClC,IAAKtZ,EAAI,EAAI2F,EAAOgB,EAAK3G,KAAOA,EAC/Bwa,EAAIzB,WAAWpT,GAAMtL,MAAMQ,KAAKoB,QAAS0K,IAAO3G,WAE1CnF,KAAKoB,QAAQqd,QAErB,OAAOze,KAAKoB,SAEbe,QAAS,SAAUd,GAClB,GAAIrB,KAAK0e,SAAU,OAAO1e,KAAKoB,QAK/B,GAJApB,KAAK0e,UAAW,IACT7G,GAAOH,aAAaL,GACvBrX,KAAKoB,QAAQ8e,SAASxI,aAAa1X,KAAKoB,QAAQ8e,SACpD7e,EAAQue,EAAWve,GACfuc,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SA2BV,OA1BKrd,EAAMuH,eACVvH,EAAMuH,aAAe,IAEtBvH,EAAMuH,aAAaf,KAAK7H,KAAKoB,SACzBpB,KAAKoB,QAAQqd,QACZpd,EAAMod,SACTze,KAAKoB,QAAQqd,QAAQzW,SAAQ,SAAU5G,GACtCC,EAAMod,QAAQ5W,KAAKzG,MAEpBpB,KAAKoB,QAAQqd,QAAUpd,EAAMod,QACzBze,KAAKoB,QAAQwH,cAChB5I,KAAKoB,QAAQwH,aAAaZ,SAAQ,SAASoX,EAAKkB,GAC/CA,EAAS7B,QAAUpd,EAAMod,QACrB6B,EAAS1X,cACZ0X,EAAS1X,aAAaZ,QAAQoX,OAKjC/d,EAAMod,QAAUze,KAAKoB,QAAQqd,QAEpBpd,EAAMod,QAChBze,KAAKoB,QAAQqd,QAAUpd,EAAMod,QAE7Bze,KAAKoB,QAAQqd,QAAUpd,EAAMod,QAAU,GAEjCze,KAAKoB,QAEbpB,KAAKoB,QAAQ4d,OAAS3d,EAAM2d,OAC5B3d,EAAQA,EAAMA,MAEf,OAAOrB,KAAKogB,QAAQ/e,IAErBe,OAAQ,SAAUV,GACjB,OAAI1B,KAAK0e,SAAiB1e,KAAKoB,SAC/BpB,KAAK0e,UAAW,IACT7G,GAAOH,aAAaL,GACvBrX,KAAKoB,QAAQ8e,SAASxI,aAAa1X,KAAKoB,QAAQ8e,SACpDlgB,KAAKoB,QAAQ4d,QAAS,EACfhf,KAAKogB,QAAQ1e,MAItBib,EAAOC,QAAU6C,EAAiB,SAAUpe,GAC3C,IAA+Bqc,EAAG8C,EAASC,EAAaxf,EAApDgB,EAASiU,UAAUjU,OACvB,OAAKA,EACDA,EAAS,GACZyb,EAAI,IAAI8B,EACRgB,EAAU,EACVvf,EAAS,IAAIwH,MAAMxG,GACnBuX,EAAMzZ,KAAKmW,WAAW,SAAUwK,EAAWtd,GAE1C,OADAsd,EAAYd,EAAWc,GAClB9C,EAAU8C,GAIXA,EAAUhC,SACTgC,EAAU1B,QACbtB,EAAEtb,OAAOse,EAAUrf,QACZ,IAERJ,EAAOmC,GAASsd,EAAUrf,OACnB,MAENmf,EACFE,EAAUzc,MAAK,SAAUqb,GACxBre,EAAOmC,GAASkc,KACTkB,GAAWC,GAAa/C,EAAEvb,QAAQlB,KACvCyc,EAAEtb,SACE,IAhBNnB,EAAOmC,GAASsd,GACT,MAiBTD,GAAc,EACTD,GAAS9C,EAAEvb,QAAQlB,GACjByc,EAAEtc,UAEVC,EAAQue,EAAWve,GACfuc,EAAUvc,GAAeA,EACtBc,EAAQd,EAAOwe,EAAQxe,KAhCV,IAAIme,GAmCzBC,EAAeD,SAAWA,EAC1BC,EAAerd,OAAS,SAAUf,GAAS,OAAOc,EAAQd,GAAO,IACjEoe,EAAetd,QAAU,SAAUd,GAElC,OADAA,EAAQue,EAAWve,GACfuc,EAAUvc,GAAeA,EACtBc,EAAQd,GAAO,IAEvBse,EAAM,EAAQ,OACdC,EAAa,EAAQ,Q,6BC5LrB,IAOIe,EAPAC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBjd,EAAiB,EAAQ,OACzB2Z,EAAiB,EAAQ,OACzBK,EAAiB,EAAQ,OACzBgC,EAAiB,EAAQ,OAI7BjD,EAAOC,QAAU+D,EAAe,SAAUG,GACzC,OAAM9gB,gBAAgB2gB,GACtBG,EAAOF,EAAMC,EAAeC,IAE5Bld,EAAO5D,KAAMud,KACbuD,EAAKtH,MAAMxZ,KAAK+gB,IAAK/gB,MAChBA,KAAKwgB,SAIVxgB,KAAKygB,aAAc,EACZ,OAJNzgB,KAAKmC,UACE,OAPoC,IAAIwe,EAAaG,IAa9DH,EAAa7N,UAAY,CACxB0N,QAAS,EACTC,aAAa,EACbM,IAAK,SAAU1f,GACd,GAAIrB,KAAKoB,QAAQsd,SAAU,MAAM,IAAIjd,MAAM,8BAG3C,KAFEzB,KAAKwgB,QACPnf,EAAQue,EAAWve,GACfuc,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SAEV,OADArd,EAAM4C,KAAKjE,KAAKghB,cAAcb,KAAKngB,MAAOA,KAAKoC,SACxC,EAER,GAAIf,EAAM2d,OAET,OADAhf,KAAKoC,OAAOf,EAAMA,QACX,EAGT,OAAOrB,KAAKghB,iBAEbA,cAAe,WACd,OAAIhhB,KAAKoB,QAAQsd,SAAiB,SAC3B1e,KAAKwgB,SAAWxgB,KAAKygB,aAAazgB,KAAKmC,WACvC,M,6BCjDT,IAAI8e,EAAa,EAAQ,OACrB1E,EAAa,EAAQ,OACrBgB,EAAa,EAAQ,OACrBK,EAAa,EAAQ,OACrBgC,EAAa,EAAQ,OAErB/X,EAAOY,MAAMqK,UAAUjL,KAAMgB,EAAQJ,MAAMqK,UAAUjK,MAEzD8T,EAAOC,QAAU,SAAUld,EAAMuC,GAChC,IAAIkD,EAAGsF,EASP,IARI8R,EAAQta,IAAWvC,EAAKuC,SAAWA,GACtCvC,EAAOmJ,EAAM9I,KAAKL,EAAM,EAAGuC,IAClBA,OAASA,GACjB4F,EAAKrI,MAAME,EAAM,IAAI+I,MAAMxG,EAASvC,EAAKuC,SAG1CA,EAASvC,EAAKuC,OAEVkD,EAAI,EAAGA,EAAIlD,IAAUkD,EAEzB,GADAsF,EAAMmV,EAAWlgB,EAAKyF,IAClByY,EAAUnT,GAAM,CACnB,IAAKA,EAAIiU,SACR,OAAIzc,EAAS,EAAUsb,EAAS/d,MAAM,KAAME,GACrC+K,EAAIwW,GAEZ,GAAIxW,EAAIuU,OAAQ,OAAOvU,EACvB/K,EAAKyF,GAAKsF,EAAIpJ,MAGhB,OAAO3B,I,6BC3BRid,EAAOC,QAAU,EAAQ,MAAR,EAAgC,I,6BCCjD,IASgEsE,EAT5Dtd,EAAkB,EAAQ,OAC1B2Y,EAAkB,EAAQ,OAC1B4E,EAAkB,EAAQ,OAC1B3D,EAAkB,EAAQ,OAC1B4D,EAAkB,EAAQ,OAC1B7D,EAAkB,EAAQ,OAC1BK,EAAkB,EAAQ,OAC1BgC,EAAkB,EAAQ,OAE1B7f,EAAOse,SAASvL,UAAU/S,KAAMoC,EAAUob,EAASpb,SAEvD+e,EAAO,SAAUJ,EAAMpe,EAAI2e,GAM1B,IALArhB,KAAK8gB,KAAOA,EACZ9gB,KAAK0C,GAAKA,EACV1C,KAAKqhB,QAAUA,EACfrhB,KAAKiC,OAASmf,EAAgBN,EAAK7e,QAE5BjC,KAAKshB,QAAUthB,KAAKiC,QAAQ,CAClC,GAAIjC,KAAKshB,WAAWR,EAInB,OAHAld,EAAO5D,KAAMud,KACbvd,KAAKuhB,UAAYvhB,KAAKuhB,UAAUpB,KAAKngB,MACrCA,KAAKM,UACEN,KAAKoB,UAEXpB,KAAKshB,QAER,OAAOnf,OAAQmb,KAGXxK,UAAY,CAChBwO,QAAS,EACThhB,QAAS,WACR,IAAIe,EAAQue,EAAW5f,KAAK8gB,KAAK9gB,KAAKshB,UACtC,GAAI1D,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SAEV,YADArd,EAAM4C,KAAKjE,KAAKuhB,UAAWvhB,KAAKoC,QAGjC,GAAIf,EAAM2d,OAET,YADAhf,KAAKoC,OAAOf,EAAMA,OAGnBA,EAAQA,EAAMA,MAEfrB,KAAKuhB,UAAUlgB,IAEhBkgB,UAAW,SAAUC,GACpB,IAAIngB,EACJ,GAAIrB,KAAK0C,GAAI,CACZ,IACCrB,EAAQtB,EAAKA,KAAKC,KAAK0C,GAAI1C,KAAKqhB,QAASG,EAAWxhB,KAAKshB,QAASthB,KAAK8gB,MACtE,MAAO5f,GAER,YADAlB,KAAKoC,OAAOlB,GAIb,GADAG,EAAQue,EAAWve,GACfuc,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SAEV,YADArd,EAAM4C,KAAKjE,KAAKyhB,aAAatB,KAAKngB,KAAMwhB,GAAYxhB,KAAKoC,QAG1D,GAAIf,EAAM2d,OAET,YADAhf,KAAKoC,OAAOf,EAAMA,OAGnBA,EAAQA,EAAMA,YAGfA,EAAQmgB,EAETxhB,KAAKyhB,aAAaD,EAAWngB,IAE9BogB,aAAc,SAAUD,EAAWngB,GAClC,GAAIA,EACHrB,KAAKmC,QAAQqf,OADd,CAIA,OAASxhB,KAAKshB,QAAUthB,KAAKiC,QAC5B,GAAIjC,KAAKshB,WAAWthB,KAAK8gB,KAExB,YADA9gB,KAAKM,UAIPN,KAAKmC,aAAQmb,MAIfX,EAAOC,QAAU,SAAUla,GAI1B,OAHAye,EAAYnhB,MACRuc,EAAQ7Z,IAAK8a,EAAS9a,GAEnB,IAAIwe,EAAKlhB,KAAM0C,EAAIwT,UAAU,M,6BC5FrC,IASmEwL,EAT/D9d,EAAkB,EAAQ,OAC1B2Y,EAAkB,EAAQ,OAC1B4E,EAAkB,EAAQ,OAC1B3D,EAAkB,EAAQ,OAC1B4D,EAAkB,EAAQ,OAC1B7D,EAAkB,EAAQ,OAC1BK,EAAkB,EAAQ,OAC1BgC,EAAkB,EAAQ,OAE1BpG,EAAQ/Q,MAAMqK,UAAU0G,MAAOzZ,EAAOse,SAASvL,UAAU/S,MAE7D2hB,EAAO,SAAUZ,EAAMpe,EAAI2e,GAQ1B,OAPArhB,KAAK8gB,KAAOA,EACZ9gB,KAAK0C,GAAKA,EACV1C,KAAKqhB,QAAUA,EACfrhB,KAAKiB,OAAS,IAAIwH,MAAM2Y,EAAgBN,EAAK7e,SAE7C2B,EAAO5D,KAAMud,KACb/D,EAAMzZ,KAAK+gB,EAAM9gB,KAAKM,QAASN,MAC1BA,KAAKwgB,SACVxgB,KAAKygB,aAAc,EAEZzgB,KAAKoB,SAHcpB,KAAKmC,QAAQnC,KAAKiB,UAMxC6R,UAAY,CAChB0N,QAAS,EACTC,aAAa,EACbngB,QAAS,SAAUe,EAAO+B,GAGzB,KAFEpD,KAAKwgB,QACPnf,EAAQue,EAAWve,GACfuc,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SAEV,OADArd,EAAM4C,KAAKjE,KAAKuhB,UAAUpB,KAAKngB,KAAMoD,GAAQpD,KAAKoC,SAC3C,EAER,GAAIf,EAAM2d,OAET,OADAhf,KAAKoC,OAAOf,EAAMA,QACX,EAERA,EAAQA,EAAMA,MAEf,OAAOrB,KAAKuhB,UAAUne,EAAO/B,IAE9BkgB,UAAW,SAAUne,EAAO/B,GAC3B,GAAIrB,KAAKoB,QAAQsd,SAAU,OAAO,EAClC,GAAI1e,KAAK0C,GAAI,CACZ,IACCrB,EAAQtB,EAAKA,KAAKC,KAAK0C,GAAI1C,KAAKqhB,QAAShgB,EAAO+B,EAAOpD,KAAK8gB,MAC3D,MAAO5f,GAER,OADAlB,KAAKoC,OAAOlB,IACL,EAGR,GADAG,EAAQue,EAAWve,GACfuc,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SAEV,OADArd,EAAM4C,KAAKjE,KAAKyhB,aAAatB,KAAKngB,KAAMoD,GAAQpD,KAAKoC,SAC9C,EAER,GAAIf,EAAM2d,OAET,OADAhf,KAAKoC,OAAOf,EAAMA,QACX,EAERA,EAAQA,EAAMA,OAIhB,OADArB,KAAKyhB,aAAare,EAAO/B,IAClB,GAERogB,aAAc,SAAUre,EAAO/B,GAC1BrB,KAAKoB,QAAQsd,WACjB1e,KAAKiB,OAAOmC,GAAS/B,KACdrB,KAAKwgB,SAAWxgB,KAAKygB,aAAazgB,KAAKmC,QAAQnC,KAAKiB,WAI7D0b,EAAOC,QAAU,SAAUla,GAI1B,OAHAye,EAAYnhB,MACRuc,EAAQ7Z,IAAK8a,EAAS9a,GAEnB,IAAIgf,EAAK1hB,KAAM0C,EAAIwT,UAAU,M,6BChFrC,IASgEyL,EAT5D/d,EAAkB,EAAQ,OAC1B2Y,EAAkB,EAAQ,OAC1B4E,EAAkB,EAAQ,OAC1B3D,EAAkB,EAAQ,OAC1B4D,EAAkB,EAAQ,OAC1B7D,EAAkB,EAAQ,OAC1BK,EAAkB,EAAQ,OAC1BgC,EAAkB,EAAQ,OAE1B7f,EAAOse,SAASvL,UAAU/S,KAAMoC,EAAUob,EAASpb,SAEvDwf,EAAS,SAAUb,EAAMpe,EAAIkf,EAASnB,GAOrC,GANAzgB,KAAK8gB,KAAOA,EACZ9gB,KAAK0C,GAAKA,EACV1C,KAAKygB,YAAcA,EACnBzgB,KAAKiC,OAASmf,EAAgBN,EAAK7e,QAEnC2f,EAAUhC,EAAWgC,GACjBhE,EAAUgE,GAAU,CACvB,IAAKA,EAAQlD,SASZ,OARA9a,EAAO5D,KAAMud,KACbqE,EAAQ3d,KACP,SAAU4d,GACT7hB,KAAKqB,MAAQwgB,EACb7hB,KAAK8hB,QACJ3B,KAAKngB,MACPA,KAAKoC,QAECpC,KAAKoB,QAGb,GADApB,KAAKqB,MAAQugB,EAAQvgB,MACjBugB,EAAQ5C,OAAQ,OAAO4C,OAE3B5hB,KAAKqB,MAAQugB,EAGd,OAAO5hB,KAAK8hB,SAGNhP,UAAY,CAClBwO,QAAS,EACTS,OAAO,EACPD,KAAM,WACL,KAAO9hB,KAAKshB,QAAUthB,KAAKiC,SACtB4Q,eAAe9S,KAAKC,KAAK8gB,KAAM9gB,KAAKshB,YACtCthB,KAAKshB,QAER,GAAIthB,KAAKshB,UAAYthB,KAAKiC,OAAQ,CACjC,IAAKjC,KAAKygB,YACT,MAAM,IAAIhf,MAAM,+CAEjB,OAAOzB,KAAKmC,QAAUnC,KAAKmC,QAAQnC,KAAKqB,OAASc,EAAQnC,KAAKqB,OAM/D,OAJKrB,KAAKoB,SAASwC,EAAO5D,KAAMud,KAChCvd,KAAKuhB,UAAYvhB,KAAKuhB,UAAUpB,KAAKngB,MACrCA,KAAKyhB,aAAezhB,KAAKyhB,aAAatB,KAAKngB,MAC3CA,KAAKgiB,WACEhiB,KAAKoB,SAEb4gB,SAAU,WAET,IADA,IAAI/gB,GACIjB,KAAK+hB,QACZ9gB,EAASjB,KAAKM,UACK,OAAfN,KAAK+hB,SACT9gB,EAASjB,KAAKuhB,UAAUtgB,GACL,UAAfjB,KAAK+hB,QACT/hB,KAAKyhB,aAAaxgB,IAGpBX,QAAS,WACR,IAAIe,EAAQue,EAAW5f,KAAK8gB,KAAK9gB,KAAKshB,UACtC,GAAI1D,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SAUV,OATArd,EAAM4C,KACL,SAAUhD,GACTA,EAASjB,KAAKuhB,UAAUtgB,GACL,UAAfjB,KAAK+hB,QACT/hB,KAAKyhB,aAAaxgB,GACbjB,KAAK+hB,OAAO/hB,KAAKgiB,aACrB7B,KAAKngB,MACPA,KAAKoC,QAEC,KAER,GAAIf,EAAM2d,OAET,OADAhf,KAAKoC,OAAOf,EAAMA,OACX,KAERA,EAAQA,EAAMA,MAGf,OADArB,KAAK+hB,MAAQ,KACN1gB,GAERkgB,UAAW,SAAUlgB,GACpB,IAAKrB,KAAKygB,YAGT,OAFAzgB,KAAKygB,aAAc,EACnBzgB,KAAK+hB,MAAQ,QACN1gB,EAER,GAAIrB,KAAK0C,GAAI,CACZ,IACCrB,EAAQtB,EAAKA,KAAKC,KAAK0C,QAAI4a,EAAWtd,KAAKqB,MAAOA,EAAOrB,KAAKshB,QAASthB,KAAK8gB,MAC3E,MAAO5f,GAER,OADAlB,KAAKoC,OAAOlB,GACL,KAGR,GADAG,EAAQue,EAAWve,GACfuc,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SASV,OARArd,EAAM4C,KACL,SAAUhD,GACTjB,KAAK+hB,MAAQ,QACb/hB,KAAKyhB,aAAaxgB,GACbjB,KAAK+hB,OAAO/hB,KAAKgiB,YACrB7B,KAAKngB,MACPA,KAAKoC,QAEC,KAER,GAAIf,EAAM2d,OAET,OADAhf,KAAKoC,OAAOf,EAAMA,OACX,KAERA,EAAQA,EAAMA,OAIhB,OADArB,KAAK+hB,MAAQ,QACN1gB,GAERogB,aAAc,SAAUpgB,GAEvB,IADArB,KAAKqB,MAAQA,IACJrB,KAAKshB,QAAUthB,KAAKiC,QAC5B,GAAI4Q,eAAe9S,KAAKC,KAAK8gB,KAAM9gB,KAAKshB,SAEvC,YADAthB,KAAK+hB,OAAQ,GAIf/hB,KAAKmC,QAAQnC,KAAKqB,SAIpBsb,EAAOC,QAAU,SAAUla,GAI1B,OAHAye,EAAYnhB,MACRuc,EAAQ7Z,IAAK8a,EAAS9a,GAEnB,IAAIif,EAAO3hB,KAAM0C,EAAIwT,UAAU,GAAIA,UAAUjU,OAAS,K,6BCjJ9D0a,EAAOC,QAAU,EAAQ,MAAR,EAAgC,I,6BCAjD,IAOqEqF,EAASC,EAP1EtW,EAAmB,EAAQ,OAC3B2Q,EAAmB,EAAQ,OAC3BiB,EAAmB,EAAQ,OAC3BD,EAAmB,EAAQ,OAC3BK,EAAmB,EAAQ,OAC3BuE,EAAmB,EAAQ,OAE3BtZ,EAAQJ,MAAMqK,UAAUjK,MAAOrJ,EAAQ6e,SAASvL,UAAUtT,MAE9DyiB,EAAU,SAAUxiB,EAAIC,EAAM8e,GAC7B9e,EAAOkM,EAAQlM,GACfF,EAAMO,KACLN,EACAO,KACAN,EAAKiD,QAAO,SAAUjB,EAAOT,GACxBsb,EAAQ7a,GAAQ8c,EAAIpc,OAAOV,GAC1B8c,EAAIrc,QAAQ+T,UAAUjU,OAAS,EAAI4G,EAAM9I,KAAKmW,UAAW,GAAKjV,QAKtEihB,EAAY,SAAUziB,EAAIwC,EAAQof,EAAS3hB,GAC1C,IAAI8e,EAEJ,GADA9e,EAAOyiB,EAAiBziB,EAAMuC,GAC1B2b,EAAUle,GACb,OAAIA,EAAKsf,OAAetf,GACxB8e,EAAMjB,IACN7d,EAAKuE,MAAK,SAAUme,GACnB,GAAI3iB,EAAGkf,eACNnf,EAAMO,KAAKN,EAAI4hB,EAASe,QAGzB,IAAMH,EAAQliB,KAAKshB,EAAS5hB,EAAI2iB,EAAc5D,GAAQ,MAAOtd,GAAKsd,EAAIpc,OAAOlB,MAC3Esd,EAAIpc,QACAoc,EAAIpd,SAEZ,GAAI3B,EAAGkf,eAAgB,OAAOnf,EAAMO,KAAKN,EAAI4hB,EAAS3hB,GACtD8e,EAAMjB,IACN,IACC0E,EAAQliB,KAAKshB,EAAS5hB,EAAIC,EAAM8e,GAC/B,MAAOtd,GAER,MADAsd,EAAIpc,OAAOlB,GACLA,EAEP,OAAOsd,EAAIpd,SAGZub,EAAOC,QAAUA,EAAU,SAAUyE,GACpC,OAAOa,EAAU1E,EAASxd,MAAO,KAAMqhB,EAASxY,EAAM9I,KAAKmW,UAAW,KAGvEvS,OAAOka,eAAejB,EAAS,QAAS,CACvCK,cAAc,EACdC,YAAY,EACZpO,UAAU,EACVzN,MAAO6gB,K,6BCvDR,IAMsCG,EANlC9F,EAAgB,EAAQ,OACxBiB,EAAgB,EAAQ,OACxBjd,EAAgB,EAAQ,OACxB+hB,EAAgB,EAAQ,OACxB/E,EAAgB,EAAQ,OAExB/d,EAAQ6e,SAASvL,UAAUtT,MAE/B6iB,EAAU,SAAU5iB,EAAIC,EAAMyC,EAASC,GACtC,IAAIf,EACJ,IACCA,EAAQ7B,EAAMO,KAAKN,EAAIO,KAAMN,GAC5B,MAAOwB,GAER,YADAkB,EAAOlB,GAGRiB,EAAQd,IAGTsb,EAAOC,QAAU,SAAUvF,GAC1B,IAAI5X,EAAIwB,EAAQshB,EAchB,OAbA9iB,EAAK+d,EAASxd,MACVuc,EAAQlF,IACXA,EAAUiL,EAAcjL,GACxBkL,EAAQ9hB,YAER8hB,EAAQhiB,EAETU,EAAS,WACR,IAAIud,EAAMjB,IAEV,OADAgF,EAAMF,EAAQlC,KAAKngB,KAAMP,EAAIyW,UAAWsI,EAAIrc,QAASqc,EAAIpc,QAASiV,GAC3DmH,EAAIpd,SAEZH,EAAO0d,gBAAiB,EACjB1d,I,6BC7BR,IAYIuhB,EAZAC,EAAa,EAAQ,OACrBjF,EAAa,EAAQ,OACrBjB,EAAa,EAAQ,OACrBmG,EAAa,EAAQ,OACrBnF,EAAa,EAAQ,OACrBK,EAAa,EAAQ,OACrBgC,EAAa,EAAQ,OAErBzd,EAAUob,EAASpb,QACnBC,EAASmb,EAASnb,OAClB5C,EAAQ6e,SAASvL,UAAUtT,MAC3BmjB,EAAMlU,KAAKkU,IAGf,EAAQ,OAERH,EAAa,WACZ,IAAIthB,EAAI,IAAIO,MAAM,8BAGlB,OAFAP,EAAEyW,KAAO,4BACTzW,EAAE0hB,KAAO,yBACFxgB,EAAOlB,IAGfyb,EAAOC,QAAU,SAAUiG,EAAQC,GAClC,IAAIrjB,EAAIoY,EAAOkL,EAAWC,EAAQ7W,EAAO7D,EAAKrH,EAsD9C,OArDAxB,EAAK+d,EAASxd,MACd6iB,EAASF,EAAIF,EAASI,GAAS,GAC/BC,GAAUvG,EAAQuG,IAAWG,MAAMH,GAAUzc,IAAWoc,EAASK,GACjEjL,EAAQ,EACR1L,EAAQ,GAER7D,EAAM,SAAU4a,EAASxjB,EAAM8e,GAC9B,IAAI2E,EACJ,IACCA,EAAc3jB,EAAMO,KAAKN,EAAIyjB,EAASxjB,GACrC,MAAOwB,GACR,OAAKsd,GACLA,EAAIpc,OAAOlB,GACJ8hB,KAFU5gB,EAAOlB,GAKzB,GADAiiB,EAAcvD,EAAWuD,GACrBvF,EAAUuF,GAAc,CAE3B,GADI3E,GAAKkE,EAAQlE,EAAIpd,QAAS+hB,IACzBA,EAAYzE,SAGhB,QAFE7G,EACE2G,GAAKA,EAAIrc,QAAQghB,GACdA,EAAYC,QAAQL,GAEvBI,EAAYnE,SAAQmE,EAAcA,EAAY9hB,OAEpD,OAAKmd,GACLA,EAAIrc,QAAQghB,GACLH,KAFU7gB,EAAQghB,IAK1BJ,EAAY,aACTlL,EACFmL,KAGDA,EAAS,WACR,IAAIlX,GACCA,EAAOK,EAAM9D,UAAUC,EAAI9I,MAAM,KAAMsM,IAG7C7K,EAAS,WACR,IAAIud,EACJ,OAAI3G,GAASgL,EACR1W,EAAMlK,OAAS6gB,GAClBtE,EAAMjB,IACNpR,EAAMtE,KAAK,CAAC7H,KAAMkW,UAAWsI,IACtBA,EAAIpd,SAELohB,IAEDla,EAAItI,KAAMkW,YAElBjV,EAAO0d,gBAAiB,EACjB1d,I,6BCnFR,IAOsCghB,EAPlC1F,EAAmB,EAAQ,OAC3BiB,EAAmB,EAAQ,OAC3B4D,EAAmB,EAAQ,OAC3B7D,EAAmB,EAAQ,OAC3BK,EAAmB,EAAQ,OAC3BuE,EAAmB,EAAQ,OAE3B3iB,EAAQ6e,SAASvL,UAAUtT,MAE/ByiB,EAAU,SAAUxiB,EAAIC,EAAMyC,EAASC,GACtC,IAAIf,EACJ,IACCA,EAAQ7B,EAAMO,KAAKN,EAAIO,KAAMN,GAC5B,MAAOwB,GAER,YADAkB,EAAOlB,GAGRiB,EAAQd,IAGTsb,EAAOC,QAAU,SAAU3a,GAC1B,IAAIxC,EAAIwB,EAER,OADAxB,EAAK+d,EAASxd,OACP2e,eAAuBlf,GAC1B8c,EAAQta,KAASA,EAASmf,EAAgBnf,IAC9ChB,EAAS,WACR,IAAIvB,EAAM8e,EAGV,GAFA9e,EAAOyiB,EAAiBjM,UAAWjU,GAE/B2b,EAAUle,GAAO,CACpB,GAAIA,EAAKsf,OAAQ,OAAOtf,EACxB8e,EAAMjB,IACN7d,EAAKuE,KACJ,SAAUme,GACTH,EAAQliB,KAAKC,KAAMP,EAAI2iB,EAAc5D,EAAIrc,QAASqc,EAAIpc,SACrD+d,KAAKngB,MACPwe,EAAIpc,aAGLoc,EAAMjB,IACN0E,EAAQliB,KAAKC,KAAMP,EAAIC,EAAM8e,EAAIrc,QAASqc,EAAIpc,QAG/C,OAAOoc,EAAIpd,SAEZH,EAAO0d,gBAAiB,EACjB1d,K,6BC9CR,IAAIsb,EAAkB,EAAQ,OAC1BiB,EAAkB,EAAQ,OAC1B4D,EAAkB,EAAQ,OAC1Bc,EAAkB,eAEtBvF,EAAOC,QAAU,SAAU3a,GAC1B,IAAIxC,EAAIwB,EAER,OADAxB,EAAK+d,EAASxd,OACP2e,eAAuBlf,GAC1B8c,EAAQta,KAASA,EAASmf,EAAgBnf,IAC9ChB,EAAS,WAAc,OAAOihB,EAAUziB,EAAIwC,EAAQjC,KAAMkW,YAC1DjV,EAAO0d,gBAAiB,EACjB1d,K,6BCZR,IAAIsb,EAAW,EAAQ,OACnBiB,EAAW,EAAQ,OACnBD,EAAW,EAAQ,OAEnB8F,EAAiB9F,EAASnb,OAE9Bua,EAAOC,QAAU,SAAU9R,EAAM6U,GAChCpC,EAAS0B,OACRnU,GACA,SAAUpI,GACT,IAAI8b,EAKJ,OAJIjC,EAAQ7Z,IAAK8a,EAAS9a,GACrB1C,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAKiD,EAAM,CAACoL,UAAWsI,EAAIrc,QAASqc,EAAIpc,SAC9Coc,EAAIpd,WAEZ,SAAU1B,EAAMyC,EAASC,GACxB,IAAInB,EACJ,GAAIjB,KAAKgf,OACR5c,EAAOpC,KAAKqB,WADb,CAIA,IACCJ,EAAS0e,EAAIngB,MAAMQ,KAAKqB,MAAO3B,GAC9B,MAAOwB,GAER,YADAkB,EAAOlB,GAGRiB,EAAQlB,OAET,SAAUyB,GAET,GADI6Z,EAAQ7Z,IAAK8a,EAAS9a,GACtB1C,KAAKgf,OAAQ,OAAOhf,KACxB,IAAM,OAAO2f,EAAIngB,MAAMQ,KAAKqB,MAAO6U,WACnC,MAAOhV,GAAK,OAAOmiB,EAAeniB,S,6BC7BrC,IAAIqb,EAAW,EAAQ,OACnBiB,EAAW,EAAQ,OACR,EAAQ,OAEdyB,OACR,SACA,SAAUX,EAAKC,GASd,OARIhC,EAAQ+B,IAAMd,EAASc,GACvB/B,EAAQgC,IAAOf,EAASe,IACxBD,GAAOC,KACLve,KAAKye,UACTze,KAAKye,QAAU,IAEhBze,KAAKye,QAAQ5W,KAAK,QAASqO,YAErBlW,QAER,SAAUse,EAAKC,GACd,IAAI7b,EAAK1C,KAAKgf,OAAST,EAAOD,EAC1B5b,GACHA,EAAG1C,KAAKqB,UAGV,SAAUid,EAAKC,GACd,IAAI7b,EAOJ,OANI6Z,EAAQ+B,IAAMd,EAASc,GACvB/B,EAAQgC,IAAOf,EAASe,IAC5B7b,EAAK1C,KAAKgf,OAAST,EAAOD,IAEzB5b,EAAG1C,KAAKqB,OAEFrB,S,6BCjCT,IAAIyd,EAAa,EAAQ,OACrB6F,EAAa,EAAQ,OACrB/F,EAAa,EAAQ,OACrBK,EAAa,EAAQ,OACrBzb,EAAaob,EAASpb,QACtBC,EAAamb,EAASnb,OAE1Bmb,EAAS0B,OACR,SACA,SAAUvc,GACT,IAAI8b,EAKJ,OAJA8E,EAAW5gB,GACN1C,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAK,QAAS,CAACnF,EAAI8b,EAAIrc,QAASqc,EAAIpc,SAC1Coc,EAAIpd,WAEZ,SAAUsB,EAAI6gB,EAAcC,GAC3B,IAAIniB,EACJ,GAAKrB,KAAKgf,OAIV,GAAIvB,EAAW/a,GAAf,CACC,GAAIkb,EAAUlb,GAOb,YANIA,EAAGgc,SACFhc,EAAGsc,OAAQwE,EAAY9gB,EAAGrB,OACzBkiB,EAAa7gB,EAAGrB,OAErBqB,EAAGuB,KAAKsf,EAAcC,IAIxB,IACCniB,EAAQqB,EAAG1C,KAAKqB,OACf,MAAOH,GAER,YADAsiB,EAAYtiB,GAGbqiB,EAAaliB,QAGdkiB,EAAa7gB,QAtBZ6gB,EAAavjB,KAAKqB,UAwBpB,SAAUqB,GACT,IAAIrB,EAEJ,GADAiiB,EAAW5gB,IACN1C,KAAKgf,OAAQ,OAAOhf,KACzB,GAAIyd,EAAW/a,GAAK,CACnB,GAAIkb,EAAUlb,GAAK,OAAOA,EAC1B,IAAMrB,EAAQqB,EAAG1C,KAAKqB,OACtB,MAAOH,GAAK,OAAOkB,EAAOlB,GAC1B,OAAOiB,EAAQd,GAEhB,OAAOc,EAAQO,O,6BCxCjB,IAAI6Z,EAAW,EAAQ,OACnBiB,EAAW,EAAQ,OACnBjd,EAAW,EAAQ,OACR,EAAQ,OAEd0e,OACR,MACA,SAAUvc,GACT,OAAK6Z,EAAQ7Z,IACb8a,EAAS9a,GACTnC,EACC,WACKP,KAAK0e,SACJ1e,KAAKgf,OAAQtc,EAAG1C,KAAKqB,OACpBqB,EAAG,KAAM1C,KAAKqB,QAEdrB,KAAKye,UAASze,KAAKye,QAAU,IAClCze,KAAKye,QAAQ5W,KAAK,KAAM,CAACnF,MAEzByd,KAAKngB,OAEDA,MAbkBA,QAe1B,SAAU0C,GACL1C,KAAKgf,OAAQtc,EAAG1C,KAAKqB,OACpBqB,EAAG,KAAM1C,KAAKqB,UAEpB,SAAUqB,GACT,OAAK6Z,EAAQ7Z,IACb8a,EAAS9a,GACTnC,EACC,WACKP,KAAKgf,OAAQtc,EAAG1C,KAAKqB,OACpBqB,EAAG,KAAM1C,KAAKqB,QAClB8e,KAAKngB,OAEDA,MARkBA,S,6BCzC3B,IAAIwd,EAAW,EAAQ,OACR,EAAQ,OAEdyB,OACR,WACA,SAAUvc,GAIT,OAHA8a,EAAS9a,GACJ1C,KAAKye,UAASze,KAAKye,QAAU,IAClCze,KAAKye,QAAQ5W,KAAK,UAAWqO,WACtBlW,QAER,SAAU0C,GAAMA,OAChB,SAAUA,GAET,OADA8a,EAAS9a,EAAT8a,GACOxd,S,6BCfT,IAAIqB,EAAW,EAAQ,OACnBkc,EAAW,EAAQ,OAEnBpD,EAAS1R,MAAMqK,UAAUqH,OAAQhY,EAAUob,EAASpb,QAASC,EAASmb,EAASnb,OAEnFmb,EAAS0B,OACR,OACA,WACC,IAAIT,EAIJ,OAHKxe,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAK,MAAO,CAACqO,UAAWsI,EAAIrc,QAASqc,EAAIpc,SAC/Coc,EAAIpd,WAEZ,SAAU1B,EAAM6jB,EAAcC,GAC7B,IAAIviB,EACAjB,KAAKgf,QAAQwE,EAAYxjB,KAAKqB,OAClC,IACCJ,EAASkZ,EAAOpa,KACfL,GAAM,SAAUmF,EAAKQ,GAAO,OAAOhE,EAAMwD,GAAKmZ,OAAO3Y,MAAUrF,KAAKqB,OAEpE,MAAOH,GAER,YADAsiB,EAAYtiB,GAGbqiB,EAAatiB,MAEd,WACC,IAAIA,EACJ,GAAIjB,KAAKgf,OAAQ,OAAOhf,KACxB,IACCiB,EAASkZ,EAAOpa,KACfmW,WAAW,SAAUrR,EAAKQ,GAAO,OAAOhE,EAAMwD,GAAKmZ,OAAO3Y,MAAUrF,KAAKqB,OAG3E,MAAOH,GAAK,OAAOkB,EAAOlB,GAC1B,OAAOiB,EAAQlB,O,6BC/BjB,IAUIghB,EAVArW,EAAmB,EAAQ,OAC3B2Q,EAAmB,EAAQ,OAC3BkB,EAAmB,EAAQ,OAC3BF,EAAmB,EAAQ,OAC3BK,EAAmB,EAAQ,OAC3BuE,EAAmB,EAAQ,OAE3BtZ,EAAQJ,MAAMqK,UAAUjK,MACxBrJ,EAAQ6e,SAASvL,UAAUtT,MAC3B4C,EAASmb,EAASnb,OAGtB6f,EAAU,SAAUxiB,EAAIC,EAAM6jB,EAAcC,GAC3C,IAAIviB,EACJ,GAAIxB,EAAGkf,eAAP,CACC,IACC1d,EAASzB,EAAMO,KAAKN,EAAIO,KAAMN,GAC7B,MAAOwB,GAER,YADAsiB,EAAYtiB,GAGbqiB,EAAatiB,OAPd,CAUAvB,EAAOkM,EAAQlM,GAAMiD,QAAO,SAAUjB,EAAOyhB,GACxC5G,EAAQ7a,GACX8hB,EAAY9hB,GAEZ6hB,EAAarN,UAAUjU,OAAS,EAAI4G,EAAM9I,KAAKmW,UAAW,GAAKiN,MAGjE,IAAM3jB,EAAMO,KAAKN,EAAIO,KAAMN,GAC3B,MAAO+jB,GAAMD,EAAYC,MAG1BlG,EAAS0B,OACR,eACA,SAAUyE,GACT,IAAIlF,EAIJ,OAHKxe,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAK,cAAe,CAACqO,UAAWsI,EAAIrc,QAASqc,EAAIpc,SACvDoc,EAAIpd,WAEZ,SAAU1B,EAAM6jB,EAAcC,GAC7B,IAAI/jB,EACJ,GAAIO,KAAKgf,OACRwE,EAAYxjB,KAAKqB,YAIlB,GAAKkb,EAAQvc,KAAKqB,OAAlB,CAMA,GADA5B,EAAKC,EAAK,IACL+d,EAAWhe,GAAK,CAEpB,GADAA,EAAKue,OAAOve,IACPge,EAAWzd,KAAKqB,MAAM5B,IAE1B,YADA+jB,EAAY,IAAIvO,UAAUxV,EAAK,uBAGhCA,EAAKO,KAAKqB,MAAM5B,GAIjB,GADAC,EAAOyiB,EAAiBtZ,EAAM9I,KAAKL,EAAM,IACrCke,EAAUle,GAAO,CACpB,GAAIA,EAAKsf,OAER,YADAwE,EAAY9jB,EAAK2B,OAGlB3B,EAAKuE,KACJ,SAAU0f,GACT1B,EAAQliB,KAAKC,KAAMP,EAAIkkB,EAAcJ,EAAcC,IAClDrD,KAAKngB,KAAKqB,OACZmiB,QAGDvB,EAAQliB,KAAKC,KAAKqB,MAAO5B,EAAIC,EAAM6jB,EAAcC,QA3BjDA,EAAY,IAAIvO,UAAU,oCA8B5B,SAAU2O,GACT,IAAIlkB,EAAM8e,EACV,GAAIxe,KAAKgf,OAAQ,OAAOhf,KAExB,IAAKuc,EAAQvc,KAAKqB,OACjB,OAAOe,EAAO,IAAI6S,UAAU,iCAG7B,IAAKwI,EAAWmG,GAAS,CAExB,GADAA,EAAS5F,OAAO4F,IACXnG,EAAWzd,KAAKqB,MAAMuiB,IAC1B,OAAOxhB,EAAO,IAAI6S,UAAU2O,EAAS,uBAEtCA,EAAS5jB,KAAKqB,MAAMuiB,GAIrB,GADAlkB,EAAOyiB,EAAiBtZ,EAAM9I,KAAKmW,UAAW,IAC1C0H,EAAUle,GAAO,CACpB,GAAIA,EAAKsf,OAAQ,OAAOtf,EACxB8e,EAAMjB,IACN7d,EAAKuE,KACJ,SAAU0f,GACT1B,EAAQliB,KAAKC,KAAM4jB,EAAQD,EAAcnF,EAAIrc,QAASqc,EAAIpc,SACzD+d,KAAKngB,KAAKqB,OACZmd,EAAIpc,YAEC,IAAIwhB,EAAOjF,eACjB,OAAOsD,EAAQliB,KAAKC,KAAKqB,MAAOuiB,EAAQlkB,EAAM6d,EAAUnb,GAExDoc,EAAMjB,IACN0E,EAAQliB,KAAKC,KAAKqB,MAAOuiB,EAAQlkB,EAAM8e,EAAIrc,QAASqc,EAAIpc,QAEzD,OAAOoc,EAAIpd,Y,6BCpHb,IASI6gB,EATA1F,EAAmB,EAAQ,OAC3BkB,EAAmB,EAAQ,OAC3BF,EAAmB,EAAQ,OAC3BK,EAAmB,EAAQ,OAC3BuE,EAAmB,EAAQ,OAE3BtZ,EAAQJ,MAAMqK,UAAUjK,MACxBrJ,EAAQ6e,SAASvL,UAAUtT,MAC3B4C,EAASmb,EAASnb,OAGtB6f,EAAU,SAAUxiB,EAAIC,EAAM6jB,EAAcC,GAC3C,IAAIniB,EACJ,IAAMA,EAAQ7B,EAAMO,KAAKN,EAAIO,KAAMN,GACnC,MAAOwB,GAAK,OAAOsiB,EAAYtiB,GAC/B,OAAOqiB,EAAaliB,IAGrBkc,EAAS0B,OACR,UACA,SAAUyE,GACT,IAAIlF,EAIJ,OAHKxe,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAK,SAAU,CAACqO,UAAWsI,EAAIrc,QAASqc,EAAIpc,SAClDoc,EAAIpd,WAEZ,SAAU1B,EAAM6jB,EAAcC,GAC7B,IAAI/jB,EACJ,GAAIO,KAAKgf,OACRwE,EAAYxjB,KAAKqB,YAIlB,GAAKkb,EAAQvc,KAAKqB,OAAlB,CAMA,GADA5B,EAAKC,EAAK,IACL+d,EAAWhe,GAAK,CAEpB,GADAA,EAAKue,OAAOve,IACPge,EAAWzd,KAAKqB,MAAM5B,IAE1B,YADA+jB,EAAY,IAAIvO,UAAUxV,EAAK,uBAGhCA,EAAKO,KAAKqB,MAAM5B,GAIjB,GADAC,EAAOyiB,EAAiBtZ,EAAM9I,KAAKL,EAAM,IACrCke,EAAUle,GAAO,CACpB,GAAIA,EAAKsf,OAER,YADAwE,EAAY9jB,EAAK2B,OAGlB3B,EAAKuE,KACJ,SAAU0f,GACT1B,EAAQliB,KAAKC,KAAMP,EAAIkkB,EAAcJ,EAAcC,IAClDrD,KAAKngB,KAAKqB,OACZmiB,QAGDvB,EAAQliB,KAAKC,KAAKqB,MAAO5B,EAAIC,EAAM6jB,EAAcC,QA3BjDA,EAAY,IAAIvO,UAAU,oCA8B5B,SAAU2O,GACT,IAAIlkB,EAAM8e,EACV,GAAIxe,KAAKgf,OAAQ,OAAOhf,KAExB,IAAKuc,EAAQvc,KAAKqB,OACjB,OAAOe,EAAO,IAAI6S,UAAU,iCAG7B,IAAKwI,EAAWmG,GAAS,CAExB,GADAA,EAAS5F,OAAO4F,IACXnG,EAAWzd,KAAKqB,MAAMuiB,IAC1B,OAAOxhB,EAAO,IAAI6S,UAAU2O,EAAS,uBAEtCA,EAAS5jB,KAAKqB,MAAMuiB,GAIrB,OADAlkB,EAAOyiB,EAAiBtZ,EAAM9I,KAAKmW,UAAW,IAC1C0H,EAAUle,GACTA,EAAKsf,OAAetf,GACxB8e,EAAMjB,IACN7d,EAAKuE,KACJ,SAAU0f,GACT1B,EAAQliB,KAAKC,KAAM4jB,EAAQD,EAAcnF,EAAIrc,QAASqc,EAAIpc,SACzD+d,KAAKngB,KAAKqB,OACZmd,EAAIpc,QAEEoc,EAAIpd,SAEL6gB,EAAQliB,KAAKC,KAAKqB,MAAOuiB,EAAQlkB,EAAM6d,EAAUnb,O,6BChG1D,EAAQ,MAAR,CAAoB,MAAO,EAAQ,S,6BCAnC,EAAQ,MAAR,CAAoB,SAAU,EAAQ,S,6BCAtC,EAAQ,MAAR,CAAoB,OAAQ,EAAQ,S,6BCCpC,IAAIyhB,EAAa,EAAQ,OACrBtH,EAAa,EAAQ,OACrBiB,EAAa,EAAQ,OACrBC,EAAa,EAAQ,OACrBG,EAAa,EAAQ,OACrBL,EAAa,EAAQ,OAErBpb,EAAUob,EAASpb,QAASC,EAASmb,EAASnb,OAElDmb,EAAS0B,OACR,UACA,SAAUX,EAAKC,GACd,IAAIC,EAEJ,OADIjC,EAAQ+B,IAAMd,EAASc,GACtBA,GAAQ/B,EAAQgC,IAChBve,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAK,SAAU,CAACyW,EAAKC,EAAMC,EAAIrc,QAASqc,EAAIpc,SAClDoc,EAAIpd,SAJwBpB,QAMpC,SAAUse,EAAKC,EAAMgF,EAAcC,GAClC,IAAI9gB,EAAIrB,EAMR,GALAqB,EAAK1C,KAAKgf,OAAST,EAAOD,EACrB/B,EAAQ7Z,KACR1C,KAAKgf,OAAQwE,EAAYxjB,KAAKqB,OAC7BkiB,EAAavjB,KAAKqB,QAEpBoc,EAAW/a,GAAK,CACnB,GAAIkb,EAAUlb,GAOb,YANIA,EAAGgc,SACFhc,EAAGsc,OAAQwE,EAAY9gB,EAAGrB,OACzBkiB,EAAa7gB,EAAGrB,OAErBqB,EAAGuB,KAAKsf,EAAcC,IAInBxjB,KAAKgf,SAAQtc,EAAKmhB,EAAO9jB,KAAK2C,IACnC,IACCrB,EAAQqB,EAAG1C,KAAKqB,OACf,MAAOH,GAER,YADAsiB,EAAYtiB,GAGbqiB,EAAaliB,QAEbkiB,EAAa7gB,MAGf,SAAU4b,EAAKC,GACd,IAAI7b,EAAIrB,EAER,GADAqB,EAAK1C,KAAKgf,OAAST,EAAOD,GACrB/B,EAAQ7Z,GAAK,OAAO1C,KACzB,GAAIyd,EAAW/a,GAAK,CACnB,GAAIkb,EAAUlb,GAAK,OAAOA,EACrB1C,KAAKgf,SAAQtc,EAAKmhB,EAAO9jB,KAAK2C,IACnC,IAAMrB,EAAQqB,EAAG1C,KAAKqB,OACtB,MAAOH,GAAK,OAAOkB,EAAOlB,GAC1B,OAAOiB,EAAQd,GAEhB,OAAOc,EAAQO,O,6BC5DjB,IAAIohB,EAAgB,EAAQ,MACxBvH,EAAgB,EAAQ,OACxBhc,EAAgB,EAAQ,OACxB+hB,EAAgB,EAAQ,OACxB/E,EAAgB,EAAQ,OAE5BA,EAAS0B,OACR,WACA,SAAU5H,GACT,IAAImH,EACA3e,EAAW,WACVG,KAAK0e,UACTF,EAAIpc,OAAO0hB,EAAY,oBAAqB,sBAC3C3D,KAAKngB,MAMP,OALIuc,EAAQlF,GAAU5W,WAAWZ,EAAUyiB,EAAcjL,IACpD9W,EAASV,GACTG,KAAKye,UAASze,KAAKye,QAAU,IAClCD,EAAMjB,IACNvd,KAAKye,QAAQ5W,KAAK,UAAW,CAAC2W,EAAIpd,QAASod,EAAIrc,UACxCqc,EAAIpd,WAEZ,SAAUA,EAASe,GAAgBf,EAAQsd,UAAUvc,EAAQnC,SAC7D,SAAUqX,GAET,OADIkF,EAAQlF,IAAUiL,EAAcjL,GAC7BrX,S,6BC3BT,IAAID,EAASse,SAASvL,UAAU/S,KAC5B6D,EAAS,EAAQ,OAErB+Y,EAAOC,QAAUhZ,EAChB,EAAQ,OACR,CACCmgB,YAAa,EAAQ,OACrBnG,UAAW,EAAQ,OACnBoG,aAAc,EAAQ,OACtBC,aAAc,EAAQ,OACtB/B,UAAWniB,EAAKogB,KAAK,EAAQ,QAC7BoC,MAAOxiB,EAAKogB,KAAK,EAAQ,QACzB+D,KAAMnkB,EAAKogB,KAAK,EAAQ,QACxBD,QAAS,EAAQ,OACjBiE,UAAWpkB,EAAKogB,KAAK,EAAQ,QAC7BiE,cAAerkB,EAAKogB,KAAK,EAAQ,QACjC3G,MAAOzZ,EAAKogB,KAAK,EAAQ,QACzBhF,KAAMpb,EAAKogB,KAAK,EAAQ,QACxB3V,IAAKzK,EAAKogB,KAAK,EAAQ,QACvBhG,OAAQpa,EAAKogB,KAAK,EAAQ,QAC1B7F,KAAMva,EAAKogB,KAAK,EAAQ,SAEzB,EAAQ,QAGT,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,OACR,EAAQ,Q,6BCtCR,IAAI1C,EAAa,EAAQ,OACrBD,EAAa,EAAQ,OACrBnc,EAAa,EAAQ,OACrB6gB,EAAa,eACbrZ,EAAaJ,MAAMqK,UAAUjK,MAEjC8T,EAAOC,QAAU,SAAU/X,EAAKpF,GAG/B,OAFA4B,EAAMwD,GACD4Y,EAAWhe,KAAKA,EAAK+d,EAAS3Y,EAAIpF,KAChCyiB,EAAUziB,EAAI,KAAMoF,EAAKgE,EAAM9I,KAAKmW,UAAW,M,uBCTvDyG,EAAOC,QAAU,SAAUvb,GAC1B,MACkB,mBAAVA,GAA8C,mBAAfA,EAAMF,MAAuBE,EAAMgjB,MAAQhjB,EAAM4C,O,6BCFzF,IAAIL,EAAkB,EAAQ,OAC1B2Y,EAAkB,EAAQ,OAC1B4E,EAAkB,EAAQ,OAC1B3D,EAAkB,EAAQ,OAC1B4D,EAAkB,EAAQ,OAC1B7D,EAAkB,EAAQ,OAC1BK,EAAkB,EAAQ,OAC1BgC,EAAkB,EAAQ,OAE1B7f,EAAOse,SAASvL,UAAU/S,KAAMoC,EAAUob,EAASpb,QAEvDwa,EAAOC,QAAU,SAAU0H,GAC1B,IAAIC,EAAW,SAAUzD,EAAMpe,EAAI2e,GAMlC,IALArhB,KAAK8gB,KAAOA,EACZ9gB,KAAK0C,GAAKA,EACV1C,KAAKqhB,QAAUA,EACfrhB,KAAKiC,OAASmf,EAAgBN,EAAK7e,QAE5BjC,KAAKshB,QAAUthB,KAAKiC,QAAQ,CAClC,GAAIjC,KAAKshB,WAAWR,EAKnB,OAJAld,EAAO5D,KAAMud,KACbvd,KAAKuhB,UAAYvhB,KAAKuhB,UAAUpB,KAAKngB,MACrCA,KAAKyhB,aAAezhB,KAAKyhB,aAAatB,KAAKngB,MAC3CA,KAAKgiB,WACEhiB,KAAKoB,UAEXpB,KAAKshB,QAER,OAAOnf,GAASmiB,IAsFjB,OAnFAC,EAASzR,UAAY,CACpBwO,QAAS,EACTS,OAAO,EACPC,SAAU,WAET,IADA,IAAI/gB,GACIjB,KAAK+hB,QACZ9gB,EAASjB,KAAKM,UACK,OAAfN,KAAK+hB,SACT9gB,EAASjB,KAAKuhB,UAAUtgB,GACL,UAAfjB,KAAK+hB,QACT/hB,KAAKyhB,aAAaxgB,IAGpBX,QAAS,WACR,IAAIe,EAAQue,EAAW5f,KAAK8gB,KAAK9gB,KAAKshB,UACtC,GAAI1D,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SAUV,OATArd,EAAM4C,KACL,SAAUhD,GACTA,EAASjB,KAAKuhB,UAAUtgB,GACL,UAAfjB,KAAK+hB,QACT/hB,KAAKyhB,aAAaxgB,GACbjB,KAAK+hB,OAAO/hB,KAAKgiB,aACrB7B,KAAKngB,MACPA,KAAKoC,QAEC,KAER,GAAIf,EAAM2d,OAET,OADAhf,KAAKoC,OAAOf,EAAMA,OACX,KAERA,EAAQA,EAAMA,MAGf,OADArB,KAAK+hB,MAAQ,KACN1gB,GAERkgB,UAAW,SAAUlgB,GACpB,GAAIrB,KAAK0C,GAAI,CACZ,IACCrB,EAAQtB,EAAKA,KAAKC,KAAK0C,GAAI1C,KAAKqhB,QAAShgB,EAAOrB,KAAKshB,QAASthB,KAAK8gB,MAClE,MAAO5f,GAER,OADAlB,KAAKoC,OAAOlB,GACL,KAGR,GADAG,EAAQue,EAAWve,GACfuc,EAAUvc,GAAQ,CACrB,IAAKA,EAAMqd,SASV,OARArd,EAAM4C,KACL,SAAUhD,GACTjB,KAAK+hB,MAAQ,QACb/hB,KAAKyhB,aAAaxgB,GACbjB,KAAK+hB,OAAO/hB,KAAKgiB,YACrB7B,KAAKngB,MACPA,KAAKoC,QAEC,KAER,GAAIf,EAAM2d,OAET,OADAhf,KAAKoC,OAAOf,EAAMA,OACX,KAERA,EAAQA,EAAMA,OAIhB,OADArB,KAAK+hB,MAAQ,QACN1gB,GAERogB,aAAc,SAAUpgB,GACvB,GAAIwV,QAAQxV,KAAWijB,EAAvB,CAIA,OAAStkB,KAAKshB,QAAUthB,KAAKiC,QAC5B,GAAIjC,KAAKshB,WAAWthB,KAAK8gB,KAExB,YADA9gB,KAAK+hB,OAAQ,GAIf/hB,KAAKmC,SAASmiB,QATbtkB,KAAKmC,QAAQmiB,KAaT,SAAU5hB,GAIhB,OAHAye,EAAYnhB,MACRuc,EAAQ7Z,IAAK8a,EAAS9a,GAEnB,IAAI6hB,EAASvkB,KAAM0C,EAAIwT,UAAU,O,6BCnH1C,IAAIyM,EAAalU,KAAKkU,IAClBpG,EAAa,EAAQ,OACrBiB,EAAa,EAAQ,OACrBC,EAAa,EAAQ,OACrBgF,EAAa,EAAQ,OACrBlF,EAAa,EAAQ,OAEzBX,EAAUD,EAAOC,QAAU,SAAUvF,EAAS3U,GAC7C,IAAgB,IAAZ2U,EAKH,cAHOkG,EAAS0C,gBACTrD,EAAQvF,oBACRuF,EAAQ/c,SAGhB+c,EAAQvF,QAAUA,EAAUsL,EAAIF,EAASpL,IAAY,IAAM,IACvDkF,EAAQ7Z,GACX8a,EAAS9a,GACoB,oBAAZoO,SAA2BA,SAAW2M,EAAW3M,QAAQpP,SAC1EgB,EAAK,SAAUxB,GACd4P,QAAQpP,MACNR,EAAEsjB,OAAStjB,EAAEsjB,MAAMpa,YAAe,4CAItCwS,EAAQ/c,SAAW6C,EAEnB6a,EAAS0C,SAAW,WACnB,IAAI/e,EAAI,IAAIO,MAAM,sBAClB,OAAOhB,YAAW,WAAkBiC,GAAIA,EAAGxB,KAAOmW,M,6BClCpD,IAKIqH,EAAU+F,EAAQC,EAAYC,EAAQC,EALtCC,EAAW,EAAQ,OACnB7c,EAAW,EAAQ,OACnB8c,EAAW,EAAQ,OACnBvH,EAAW,EAAQ,OAIvBX,EAAQgI,QAAU,WACjBlG,EAAW,EACX+F,EAAS,GACTC,EAAa,EACbC,EAAS,GACTpH,EAASyC,SAAW4E,GAGrBA,EAAU,SAAUG,GACnB,IAAIP,EAAO1Y,EAEPiZ,KACDrG,EACF5S,EAAO2Y,MAELC,EACF5Y,EAAO6Y,IAGRH,GAAQ,IAAI/iB,OAAQ+iB,OAEZja,MAAM,MAAM1B,MAAM,GAAGyR,MAAK,SAAU0K,GAC1C,OACwC,IAAvCA,EAAKC,OAAO,wBAC0B,IAAtCD,EAAKC,OAAO,uBACmB,IAA/BD,EAAKrc,QAAQ,eAEbqc,EAAOA,EAAK1a,QAAQ,MAAO,OAAOI,OAC7BoB,EAAKkZ,KACTlZ,EAAKkZ,GAAQ,CAAEnN,MAAO,MAErB/L,EAAKkZ,GAAMnN,OACN,QAKJ/L,EAAKoZ,UACTpZ,EAAKoZ,QAAU,CAAErN,MAAO,EAAG2M,MAAOA,MAEjC1Y,EAAKoZ,QAAQrN,QAIjB+E,EAAQuI,WAAa,WACpB,IAAIC,EAAOC,EAAMpS,EAAM,GAEvB,IAAKsK,EAASyC,SACb,MAAM,IAAIve,MAAM,yCAkCjB,cAhCO8b,EAASyC,SAEhB/M,GAAO,iEACPA,GAAO,iCAEPmS,EAAQpH,OAAOU,EAAWgG,GAC1BW,EAAOR,EAAQ9kB,KAAK+kB,EAAK,IAAKM,EAAMnjB,QACpCgR,GAAOmS,EAAQ,gCACfnS,GAAOoS,EAAKtlB,KAAK2kB,GAAc,+BAC/BzR,GAAOoS,EAAKtlB,KAAK2e,GAAY,6BAEzBgG,IACHzR,GAAO,+CACPjL,EACC2c,GACA,SAAU7Y,EAAMhB,GAAQmI,GAAOoS,EAAKtlB,KAAK+L,EAAK+L,OAAS,IAAM/M,EAAO,OACpE,MACA,SAAUwa,EAAOC,GAAS,OAAOvlB,KAAKulB,GAAO1N,MAAQ7X,KAAKslB,GAAOzN,UAI/D6G,IACHzL,GAAO,6CACPjL,EACCyc,GACA,SAAU3Y,EAAMhB,GAAQmI,GAAOoS,EAAKtlB,KAAK+L,EAAK+L,OAAS,IAAM/M,EAAO,OACpE,MACA,SAAUwa,EAAOC,GAAS,OAAOvlB,KAAKulB,GAAO1N,MAAQ7X,KAAKslB,GAAOzN,UAK5D,CACN5E,IAHDA,GAAO,iEAINyL,SAAU,CAAE7G,MAAO6G,EAAU8G,MAAOf,GACpCC,WAAY,CAAE7M,MAAO6M,EAAYc,MAAOb,M,6BC5F1C,IAAI/G,EAAY,EAAQ,OAExBjB,EAAOC,QAAU,SAAUvb,GAC1B,IAAKuc,EAAUvc,GACd,MAAM,IAAI4T,UAAU5T,EAAQ,4BAE7B,OAAOA,I,6BCNRsb,EAAOC,QAAU,EAAQ,MAAR,GAAgCnU,MAAMgd,KAAO,EAAQ,Q,uBCAtE9I,EAAOC,QAAU,WAChB,IAAuB/Z,EAAK5B,EAAxBwkB,EAAOhd,MAAMgd,KACjB,MAAoB,mBAATA,IAEXxkB,EAASwkB,EADT5iB,EAAM,CAAC,MAAO,QAEPgU,QAAQ5V,GAAUA,IAAW4B,GAAqB,QAAd5B,EAAO,O,6BCLnD,IAAIykB,EAAiB,kBACjBC,EAAiB,EAAQ,OACzBC,EAAiB,EAAQ,OACzBnD,EAAiB,EAAQ,OACzBjF,EAAiB,EAAQ,OACzB8F,EAAiB,EAAQ,OACzB/G,EAAiB,EAAQ,OACzBsJ,EAAiB,EAAQ,OACzBnd,EAAiBD,MAAMC,QACvB3I,EAAiBse,SAASvL,UAAU/S,KACpCid,EAAiB,CAAEC,cAAc,EAAMC,YAAY,EAAMpO,UAAU,EAAMzN,MAAO,MAChFwc,EAAiBla,OAAOka,eAG5BlB,EAAOC,QAAU,SAAUkJ,GAC1B,IAEIC,EACA5gB,EACAyP,EACA/R,EACAZ,EACA0V,EACAnS,EACAvE,EACAwE,EACApE,EAXA2kB,EAAQ9P,UAAU,GAClBgN,EAAUhN,UAAU,GAexB,GAHA4P,EAAYniB,OAAO2f,EAAWwC,IAE1BvJ,EAAQyJ,IAAQxI,EAASwI,GACxBhmB,MAAQA,OAASyI,OAAUmd,EAAW5lB,MAqB1C+lB,EAAU/lB,SArBuC,CAEjD,IAAKgmB,EAAO,CACX,GAAIL,EAAYG,GAGf,OAAe,KADf7jB,EAAS6jB,EAAU7jB,QACMwG,MAAMjJ,MAAM,KAAMsmB,KAC3CjjB,EAAM,IAAI4F,MAAM,IACZ,GAAKqd,EAAU,GACZjjB,GAER,GAAI6F,EAAQod,GAAY,CAGvB,IADAjjB,EAAM,IAAI4F,MAAOxG,EAAS6jB,EAAU7jB,QAC/BkD,EAAI,EAAGA,EAAIlD,IAAUkD,EAAGtC,EAAIsC,GAAK2gB,EAAU3gB,GAChD,OAAOtC,GAGTA,EAAM,GAMP,IAAK6F,EAAQod,GACZ,QAAkDxI,KAA7C7X,EAAcqgB,EAAUJ,IAAgC,CAM5D,IAJAlgB,EAAWgY,EAAS/X,GAAa1F,KAAK+lB,GAClCC,IAASljB,EAAM,IAAIkjB,GACvB9kB,EAASuE,EAASjB,OAClBY,EAAI,GACIlE,EAAOgD,MACd5C,EAAQ2kB,EAAQjmB,EAAKA,KAAKimB,EAAO9C,EAASjiB,EAAOI,MAAO8D,GAAKlE,EAAOI,MAChE0kB,GACH/I,EAAK3b,MAAQA,EACbwc,EAAehb,EAAKsC,EAAG6X,IAEvBna,EAAIsC,GAAK9D,EAEVJ,EAASuE,EAASjB,SAChBY,EAEHlD,EAASkD,OACH,GAAI0gB,EAASC,GAAY,CAI/B,IAFA7jB,EAAS6jB,EAAU7jB,OACf8jB,IAASljB,EAAM,IAAIkjB,GAClB5gB,EAAI,EAAGyP,EAAI,EAAGzP,EAAIlD,IAAUkD,EAChC9D,EAAQykB,EAAU3gB,GACdA,EAAI,EAAIlD,IACX0V,EAAOtW,EAAM4kB,WAAW,KAEZ,OAAUtO,GAAQ,QAAQtW,GAASykB,IAAY3gB,IAE5D9D,EAAQ2kB,EAAQjmB,EAAKA,KAAKimB,EAAO9C,EAAS7hB,EAAOuT,GAAKvT,EAClD0kB,GACH/I,EAAK3b,MAAQA,EACbwc,EAAehb,EAAK+R,EAAGoI,IAEvBna,EAAI+R,GAAKvT,IAERuT,EAEH3S,EAAS2S,EAGX,QAAe0I,IAAXrb,EAIH,IAFAA,EAASwgB,EAASqD,EAAU7jB,QACxB8jB,IAASljB,EAAM,IAAIkjB,EAAQ9jB,IAC1BkD,EAAI,EAAGA,EAAIlD,IAAUkD,EACzB9D,EAAQ2kB,EAAQjmB,EAAKA,KAAKimB,EAAO9C,EAAS4C,EAAU3gB,GAAIA,GAAK2gB,EAAU3gB,GACnE4gB,GACH/I,EAAK3b,MAAQA,EACbwc,EAAehb,EAAKsC,EAAG6X,IAEvBna,EAAIsC,GAAK9D,EAQZ,OAJI0kB,IACH/I,EAAK3b,MAAQ,KACbwB,EAAIZ,OAASA,GAEPY,I,6BCnHR8Z,EAAOC,QAAU,EAAQ,MAAR,GAAgCnU,MAAMyd,GAAK,EAAQ,Q,uBCApEvJ,EAAOC,QAAU,WAChB,IAAmB3b,EAAfilB,EAAKzd,MAAMyd,GACf,MAAkB,mBAAPA,IACXjlB,EAASilB,EAAG,MAAO,OACZrP,QAAQ5V,GAAwB,QAAdA,EAAO,O,6BCJjC,IAAI2kB,EAAiB,EAAQ,OACzB/c,EAAiBJ,MAAMqK,UAAUjK,MACjCgV,EAAiBla,OAAOka,eACxBb,EAAiB,CAAEC,cAAc,EAAMC,YAAY,EAAMpO,UAAU,EAAMzN,MAAO,MAEpFsb,EAAOC,QAAU,WAChB,IAAI3b,EAAQkE,EAAGlD,EACf,IAAKjC,MAAQA,OAASyI,QAAUmd,EAAW5lB,MAAO,OAAO6I,EAAM9I,KAAKmW,WAEpE,IADAjV,EAAS,IAAIjB,KAAMiC,EAASiU,UAAUjU,QACjCkD,EAAI,EAAGA,EAAIlD,IAAUkD,EACzB6X,EAAK3b,MAAQ6U,UAAU/Q,GACvB0Y,EAAe5c,EAAQkE,EAAG6X,GAI3B,OAFAA,EAAK3b,MAAQ,KACbJ,EAAOgB,OAASA,EACThB,I,6BCfR,IAAIwkB,EAAU,EAAQ,OAClB/c,EAAUD,MAAMC,QAEpBiU,EAAOC,QAAU,SAAUkJ,GAAa,OAAOpd,EAAQod,GAAaA,EAAYL,EAAKK,K,4BCHrF,IAAIliB,EAAoB,EAAQ,OAC5Bsb,EAAoB,EAAQ,OAC5B3C,EAAoB,EAAQ,OAC5B4J,EAAoB1kB,MAAM0kB,kBAE9BxJ,EAAOC,QAAU,SAAUpb,GAC1B,IAAID,EAAM,IAAIE,MAAMD,GAAUmW,EAAOzB,UAAU,GAAIyJ,EAAMzJ,UAAU,GAUnE,OATKqG,EAAQoD,IACRT,EAASvH,KACZgI,EAAMhI,EACNA,EAAO,MAGL4E,EAAQoD,IAAM/b,EAAOrC,EAAKoe,GAC1BpD,EAAQ5E,KAAOpW,EAAIoW,KAAOA,GAC1BwO,GAAmBA,EAAkB5kB,EAAKob,EAAOC,SAC9Crb,I,uBChBR,IAAI6kB,EAAcziB,OAAOmP,UAAU1I,SAAUic,EAAKD,EAAYrmB,KAAK,IAAI0B,OAEvEkb,EAAOC,QAAU,SAAUvb,GAC1B,OAAQA,IAAUA,aAAiBI,OAAS2kB,EAAYrmB,KAAKsB,KAAWglB,KAAQ,I,6BCHjF,IAAI7I,EAAe,EAAQ,OACvBoD,EAAe,EAAQ,OACvB0F,EAAe,EAAQ,OACvB9mB,EAAe6e,SAASvL,UAAUtT,MAEtCmd,EAAOC,QAAU,WAChB,IAAInd,EAAK+d,EAASxd,MAAON,EAAOkhB,EAAM1K,WAEtC,OAAOoQ,GAAa,WACnB,OAAO9mB,EAAMO,KAAKN,EAAIO,KAAMN,EAAKiD,OAAOie,EAAM1K,eAC5CzW,EAAGwC,OAASvC,EAAKuC,U,6BCVrB,IAAIub,EAAW,EAAQ,OACnBhe,EAAW6e,SAASvL,UAAUtT,MAElCmd,EAAOC,QAAU,WAChB,IAAInd,EAAK+d,EAASxd,MAClB,OAAO,SAAUN,GAAQ,OAAOF,EAAMO,KAAKN,EAAIO,KAAMN,M,6BCLtD,IAIIsd,EAAMa,EAAgB0I,EAAUC,EAyB9BC,EA7BFhE,EAAW,EAAQ,OAEnBxR,EAAO,SAAUyV,EAAMC,GAAQ,OAAOA,GAI1C,IACChjB,OAAOka,eAAe5M,EAAM,SAAU,CACrCgM,cAAc,EACdnO,UAAU,EACVoO,YAAY,EACZ7b,MAAO,IAGT,MAAOge,IAEa,IAAhBpO,EAAKhP,QAER+a,EAAO,CAAEC,cAAc,EAAMnO,UAAU,EAAOoO,YAAY,GAC1DW,EAAiBla,OAAOka,eACxBlB,EAAOC,QAAU,SAAUnd,EAAIwC,GAE9B,OADAA,EAASwgB,EAASxgB,GACdxC,EAAGwC,SAAWA,EAAexC,GACjCud,EAAK3b,MAAQY,EACN4b,EAAepe,EAAI,SAAUud,OAGrCwJ,EAAQ,EAAQ,OAEXC,EAAQ,GADbF,EAEQ,SAAUtkB,GAChB,IAAIvC,EAAMyF,EAAI,EACd,GAAIshB,EAAMxkB,GAAS,OAAOwkB,EAAMxkB,GAEhC,IADAvC,EAAO,GACAuC,KAAUvC,EAAKmI,KAAK,OAAS1C,GAAGiF,SAAS,KAEhD,OAAO,IAAIiU,SACV,KACA,oBAAsB3e,EAAKsJ,KAAK,MAAQ,6CAI3C2T,EAAOC,QAAU,SAAU9S,EAAK7H,GAC/B,IAAI2kB,EAEJ,GADA3kB,EAASwgB,EAASxgB,GACd6H,EAAI7H,SAAWA,EAAQ,OAAO6H,EAClC8c,EAASL,EAAStkB,EAATskB,CAAiBzc,GAC1B,IAAM0c,EAAMI,EAAQ9c,GACpB,MAAOuV,IACP,OAAOuH,K,uBCjDT,IAAIR,EAAcziB,OAAOmP,UAAU1I,SAC/Bic,EAAKD,EAAYrmB,KAAK,WAAe,OAAOmW,UAAtB,IAE1ByG,EAAOC,QAAU,SAAUvb,GAAS,OAAO+kB,EAAYrmB,KAAKsB,KAAWglB,I,uBCHvE,IAAID,EAAcziB,OAAOmP,UAAU1I,SAC/Byc,EAAsBC,OAAOhU,UAAU7B,KAAKkP,KAAK,mCAErDxD,EAAOC,QAAU,SAAUvb,GAC1B,MAAwB,mBAAVA,GAAwBwlB,EAAoBT,EAAYrmB,KAAKsB,M,uBCH5Esb,EAAOC,QAAU,c,6BCDjB,IAAI8I,EAAiB,kBACjBnJ,EAAiB,EAAQ,OACzBjZ,EAAiB,EAAQ,OAE7BqZ,EAAOC,QAAU,SAAUvb,GAC1B,QAAKkb,EAAQlb,KACwB,mBAA1BA,EAAMqkB,IACVpiB,EAAYjC,M,6BCPpB,IAAI6d,EAAW,EAAQ,OACnB6H,EAAW,EAAQ,OAEvBpK,EAAOC,QAAU,SAAUvb,GAC1B,GAAI0lB,EAAG1lB,IAAU6d,EAAS7d,GAAQ,OAAOA,EACzC,MAAM,IAAI4T,UAAU5T,EAAQ,8C,6BCL7Bsb,EAAOC,QAAU,EAAQ,MAAR,GAAgCnO,KAAKuY,KAAO,EAAQ,Q,uBCArErK,EAAOC,QAAU,WAChB,IAAIoK,EAAOvY,KAAKuY,KAChB,MAAoB,mBAATA,GACS,IAAbA,EAAK,MAA4B,IAAfA,GAAM,M,uBCHhCrK,EAAOC,QAAU,SAAUvb,GAE1B,OADAA,EAAQ8S,OAAO9S,GACX4hB,MAAM5hB,IAAoB,IAAVA,EAAoBA,EACjCA,EAAQ,EAAI,GAAK,I,6BCHzB,IAAI2lB,EAAQ,EAAQ,OAChBC,EAAQxY,KAAKwY,IACbC,EAAQzY,KAAKyY,MAEjBvK,EAAOC,QAAU,SAAUvb,GAC1B,OAAI4hB,MAAM5hB,GAAe,EAEX,KADdA,EAAQ8S,OAAO9S,KACK8lB,SAAS9lB,GACtB2lB,EAAK3lB,GAAS6lB,EAAMD,EAAI5lB,IADaA,I,6BCP7C,IAAI+lB,EAAY,EAAQ,OACpBzE,EAAYlU,KAAKkU,IAErBhG,EAAOC,QAAU,SAAUvb,GAAS,OAAOshB,EAAI,EAAGyE,EAAU/lB,M,6BCC5D,IAAImc,EAA0B,EAAQ,OAClCnc,EAA0B,EAAQ,OAClC8e,EAA0B9B,SAASvL,UAAUqN,KAC7CpgB,EAA0Bse,SAASvL,UAAU/S,KAC7C6F,EAA0BjC,OAAOiC,KACjCyhB,EAA0B1jB,OAAOmP,UAAUwU,qBAE/C3K,EAAOC,QAAU,SAAUgH,EAAQ2D,GAClC,OAAO,SAAU1iB,EAAKnC,GACrB,IAAIoe,EAAMoC,EAAUhN,UAAU,GAAIsR,EAAYtR,UAAU,GASxD,OARArR,EAAMlB,OAAOtC,EAAMwD,IACnB2Y,EAAS9a,GAEToe,EAAOlb,EAAKf,GACR2iB,GACH1G,EAAK3O,KAA0B,mBAAdqV,EAA2BrH,EAAKpgB,KAAKynB,EAAW3iB,QAAOyY,GAEnD,mBAAXsG,IAAuBA,EAAS9C,EAAK8C,IACzC7jB,EAAKA,KAAK6jB,EAAQ9C,GAAM,SAAUzb,EAAKjC,GAC7C,OAAKikB,EAAwBtnB,KAAK8E,EAAKQ,GAChCtF,EAAKA,KAAK2C,EAAIwgB,EAASre,EAAIQ,GAAMA,EAAKR,EAAKzB,GADEmkB,Q,6BCvBvD5K,EAAOC,QAAU,EAAQ,MAAR,GAAgCjZ,OAAOC,OAAS,EAAQ,Q,uBCAzE+Y,EAAOC,QAAU,WAChB,IAA4B/X,EAAxBjB,EAASD,OAAOC,OACpB,MAAsB,mBAAXA,IAEXA,EADAiB,EAAM,CAAE4iB,IAAK,OACD,CAAEC,IAAK,OAAS,CAAEC,KAAM,SAC7B9iB,EAAI4iB,IAAM5iB,EAAI6iB,IAAM7iB,EAAI8iB,OAAS,gB,6BCLzC,IAAI/hB,EAAQ,EAAQ,OAChBvE,EAAQ,EAAQ,OAChBshB,EAAQlU,KAAKkU,IAEjBhG,EAAOC,QAAU,SAAUgL,EAAM9d,GAChC,IAAIpI,EAAOyD,EAAsCvB,EAAnC3B,EAAS0gB,EAAIzM,UAAUjU,OAAQ,GAS7C,IARA2lB,EAAOjkB,OAAOtC,EAAMumB,IACpBhkB,EAAS,SAAUyB,GAClB,IACCuiB,EAAKviB,GAAOyE,EAAIzE,GACf,MAAOnE,GACHQ,IAAOA,EAAQR,KAGjBiE,EAAI,EAAGA,EAAIlD,IAAUkD,EAEzBS,EADAkE,EAAMoM,UAAU/Q,IACN6C,QAAQpE,GAEnB,QAAc0Z,IAAV5b,EAAqB,MAAMA,EAC/B,OAAOkmB,I,6BCjBR,IAA4BC,EAOvBC,EAAYC,EAAW/K,EAPxBzV,EAAS5D,OAAO4D,OAEf,EAAQ,MAAR,KACJsgB,EAAO,EAAQ,OAGhBlL,EAAOC,QAEDiL,EACc,IAAfA,EAAKG,MAAoBzgB,GAE7BugB,EAAa,GACbC,EAAY,GACZ/K,EAAO,CAAEC,cAAc,EAAOC,YAAY,EAAOpO,UAAU,EAAMzN,WAAOic,GACxE3Z,OAAOskB,oBAAoBtkB,OAAOmP,WAAW9K,SAAQ,SAAU8C,GAU9Did,EAAUjd,GATG,cAATA,EASckS,EARC,CACjBC,cAAc,EACdC,YAAY,EACZpO,UAAU,EACVzN,WAAOic,MAMV3Z,OAAOkL,iBAAiBiZ,EAAYC,GAEpCpkB,OAAOka,eAAegK,EAAM,eAAgB,CAC3C5K,cAAc,EACdC,YAAY,EACZpO,UAAU,EACVzN,MAAOymB,IAGD,SAAUhV,EAAWoV,GAC3B,OAAO3gB,EAAqB,OAAduL,EAAqBgV,EAAahV,EAAWoV,KA5B1C3gB,G,6BCVnBoV,EAAOC,QAAU,EAAQ,MAAR,CAAsB,Y,6BCAvC,IAAIgJ,EAAa,EAAQ,OACrB1G,EAAa,EAAQ,OACrB3C,EAAa,EAAQ,OAEzBI,EAAOC,QAAU,SAAUvb,GAC1B,OACEkb,EAAQlb,IACgB,iBAAjBA,EAAMY,SAIXid,EAAS7d,KAAWukB,EAAWvkB,IAA4B,iBAAVA,KACpD,I,uBCVFsb,EAAOC,QAAU,SAAU/X,GAAO,MAAsB,mBAARA,I,6BCFhD,IAAI0X,EAAU,EAAQ,OAElB/R,EAAM,CAAE2d,UAAU,EAAMC,QAAQ,GAEpCzL,EAAOC,QAAU,SAAUvb,GAAS,OAAQkb,EAAQlb,IAAUmJ,SAAWnJ,KAAW,I,6BCJpF,IAAIgnB,EAAa,EAAQ,MAAR,GAEjB1L,EAAOC,QAAU,SAAU/M,GAAO,OAAOA,IAAQwY,GAAsB,OAARxY,I,6BCF/D8M,EAAOC,QAAU,EAAQ,MAAR,GAAgCjZ,OAAOiC,KAAO,EAAQ,Q,uBCAvE+W,EAAOC,QAAU,WAChB,IAEC,OADAjZ,OAAOiC,KAAK,cACL,EACN,MAAO1E,GACR,OAAO,K,6BCLT,IAAIqb,EAAU,EAAQ,OAElB3W,EAAOjC,OAAOiC,KAElB+W,EAAOC,QAAU,SAAUwL,GAAU,OAAOxiB,EAAK2W,EAAQ6L,GAAUzkB,OAAOykB,GAAUA,K,6BCJpF,IAAI/mB,EAA2B,EAAQ,OACnCwc,EAA2Bla,OAAOka,eAClCyK,EAA2B3kB,OAAO2kB,yBAClCL,EAA2BtkB,OAAOskB,oBAClCM,EAA2B5kB,OAAO4kB,sBAEtC5L,EAAOC,QAAU,SAAUgK,EAAQ4B,GAClC,IAAI9mB,EAAO+mB,EAAe9kB,OAAOtC,EAAMmnB,IAcvC,GAbA5B,EAASjjB,OAAOtC,EAAMulB,IACtBqB,EAAoBQ,GAAczgB,SAAQ,SAAU8C,GACnD,IACC+S,EAAe+I,EAAQ9b,EAAMwd,EAAyBE,EAAQ1d,IAC7D,MAAO5J,GAAKQ,EAAQR,MAEc,mBAA1BqnB,GACVA,EAAsBE,GAAczgB,SAAQ,SAAU0gB,GACrD,IACC7K,EAAe+I,EAAQ8B,EAAQJ,EAAyBE,EAAQE,IAC/D,MAAOxnB,GAAKQ,EAAQR,WAGVoc,IAAV5b,EAAqB,MAAMA,EAC/B,OAAOklB,I,4BCtBR,IAAIrK,EAAU,EAAQ,OAElBvU,EAAUS,MAAMqK,UAAU9K,QAAST,EAAS5D,OAAO4D,OAEnDjH,EAAU,SAAUwJ,EAAKjF,GAC5B,IAAIQ,EACJ,IAAKA,KAAOyE,EAAKjF,EAAIQ,GAAOyE,EAAIzE,IAIjCsX,EAAOC,QAAU,SAAU+L,GAC1B,IAAI1nB,EAASsG,EAAO,MAKpB,OAJAS,EAAQjI,KAAKmW,WAAW,SAAUH,GAC5BwG,EAAQxG,IACbzV,EAAQqD,OAAOoS,GAAU9U,MAEnBA,I,6BChBR0b,EAAOC,QAAU,EAAQ,MAAR,GAAgCjZ,OAAOoc,eAAiB,EAAQ,O,uBCAjF,IAAIxY,EAAS5D,OAAO4D,OAAQ4X,EAAiBxb,OAAOwb,eAAgByJ,EAAc,GAElFjM,EAAOC,QAAU,WAChB,IAAImD,EAAiBpc,OAAOoc,eAAgB8I,EAAe3S,UAAU,IAAM3O,EAC3E,MAA8B,mBAAnBwY,GACJZ,EAAeY,EAAe8I,EAAa,MAAOD,MAAkBA,I,4BCA5E,IAKIE,EAQwBC,EACvBtpB,EAAI4d,EAdL6B,EAAmB,EAAQ,OAC3B7d,EAAmB,EAAQ,OAC3B2nB,EAAmBrlB,OAAOmP,UAAUmW,cACpCpL,EAAmBla,OAAOka,eAC1BqL,EAAmB,CAAEjM,cAAc,EAAMC,YAAY,EAAOpO,UAAU,EAAMzN,WAAOic,GAGvFwL,EAAW,SAAUjkB,EAAKiO,GAEzB,GADAzR,EAAMwD,GACY,OAAdiO,GAAsBoM,EAASpM,GAAY,OAAOjO,EACtD,MAAM,IAAIoQ,UAAU,wCAGrB0H,EAAOC,SAAqBmM,EAmC3B,WACC,IAEI1L,EAFA8L,EAAUxlB,OAAO4D,OAAO,MACxB6hB,EAAU,GAEVpM,EAAOrZ,OAAO2kB,yBAAyB3kB,OAAOmP,UAAW,aAE7D,GAAIkK,EAAM,CACT,KACCK,EAAML,EAAKK,KACPtd,KAAKopB,EAASC,GACjB,MAAO/J,IACT,GAAI1b,OAAOwb,eAAegK,KAAaC,EAAS,MAAO,CAAE/L,IAAKA,EAAK2K,MAAO,GAI3E,OADAmB,EAAQE,UAAYD,EAChBzlB,OAAOwb,eAAegK,KAAaC,EAAgB,CAAEpB,MAAO,KAEhEmB,EAAU,IACFE,UAAYD,EAChBzlB,OAAOwb,eAAegK,KAAaC,GAAgB,CAAEpB,MAAO,IAnBjE,GAjCKe,GACgB,IAAjBA,EAAOf,MACNe,EAAO1L,KACVA,EAAM0L,EAAO1L,IACb5d,EAAK,SAAUoF,EAAKiO,GAEnB,OADAuK,EAAItd,KAAK+oB,EAASjkB,EAAKiO,GAAYA,GAC5BjO,IAGRpF,EAAK,SAAUoF,EAAKiO,GAEnB,OADAgW,EAASjkB,EAAKiO,GAAWuW,UAAYvW,EAC9BjO,GAITpF,EAAK,SAAS2f,EAAKva,EAAKiO,GACvB,IAAIwW,EAOJ,OANAR,EAASjkB,EAAKiO,IACdwW,EAAaN,EAAiBjpB,KAAKqf,EAAKmK,aAAc1kB,YAC/Bua,EAAKmK,aAAaF,UACvB,OAAdvW,IAAoBA,EAAYsM,EAAKmK,cACzC1kB,EAAIwkB,UAAYvW,EACZwW,GAAYzL,EAAeuB,EAAKmK,aAAc,YAAaL,GACxDrkB,GAGFlB,OAAOka,eAAepe,EAAI,QAAS,CACzCwd,cAAc,EACdC,YAAY,EACZpO,UAAU,EACVzN,MAAO0nB,EAAOf,SA9BK,MA0DrB,EAAQ,Q,uBC9ERrL,EAAOC,QAAU,SAAUnd,GAC1B,GAAkB,mBAAPA,EAAmB,MAAM,IAAIwV,UAAUxV,EAAK,sBACvD,OAAOA,I,4BCFR,IAAIyf,EAAW,EAAQ,OAEvBvC,EAAOC,QAAU,SAAUvb,GAC1B,IAAK6d,EAAS7d,GAAQ,MAAM,IAAI4T,UAAU5T,EAAQ,qBAClD,OAAOA,I,6BCJR,IAAIkb,EAAU,EAAQ,OAEtBI,EAAOC,QAAU,SAAUvb,GAC1B,IAAKkb,EAAQlb,GAAQ,MAAM,IAAI4T,UAAU,gCACzC,OAAO5T,I,6BCJRsb,EAAOC,QAAU,EAAQ,MAAR,GAAgCoB,OAAOlL,UAAU4J,SAAW,EAAQ,O,uBCArF,IAAI8M,EAAM,aAEV7M,EAAOC,QAAU,WAChB,MAA4B,mBAAjB4M,EAAI9M,WACgB,IAAxB8M,EAAI9M,SAAS,SAA2C,IAAxB8M,EAAI9M,SAAS,S,sBCJrD,IAAI/T,EAAUqV,OAAOlL,UAAUnK,QAE/BgU,EAAOC,QAAU,SAAU6M,GAC1B,OAAO9gB,EAAQ5I,KAAKC,KAAMypB,EAAcvT,UAAU,KAAO,I,6BCH1D,IAAIkR,EAAY,EAAQ,OACpB/lB,EAAY,EAAQ,OACpBqoB,EAAY,EAAQ,OACpBzC,EAAYxY,KAAKwY,IACjBtE,EAAYlU,KAAKkU,IAErBhG,EAAOC,QAAU,SAAU+M,GAC1B,IAAIvK,EAAOpB,OAAO3c,EAAMrB,OAAQ4pB,EAAUxK,EAAKnd,OAAQA,EAASiU,UAAU,GAI1E,OAFAjU,EAASghB,MAAMhhB,GAAU,EAAImlB,EAAUnlB,GACvC0nB,EAAOD,EAAO3pB,KAAKie,OAAO2L,GAAO1C,EAAIhlB,IACjCA,GAAU,EAAU0nB,EAAK9gB,MAAM,EAAG8Z,EAAI,EAAG1gB,EAAS2nB,IAAYxK,EAC3DA,GAAQwK,EAAU3nB,GAAU,EAAI,GAAK0nB,EAAK9gB,MAAM5G,EAAS2nB,M,6BCZjEjN,EAAOC,QAAU,EAAQ,KAAR,GAAgCoB,OAAOlL,UAAU4W,OAAS,EAAQ,Q,sBCEnF/M,EAAOC,QAAU,WAChB,MAA0B,kBAHjB,MAGM8M,QACU,WAJhB,MAIEA,OAAO,K,6BCAnB,IAAIroB,EAAY,EAAQ,OACpB+lB,EAAY,EAAQ,OAExBzK,EAAOC,QAAU,SAAU/E,GAC1B,IAA+B5W,EAA3BuoB,EAAMxL,OAAO3c,EAAMrB,OAEvB,IADA6X,EAAQuP,EAAUvP,IACN,EAAG,MAAM,IAAI/S,WAAW,sBACpC,IAAKqiB,SAAStP,GAAQ,MAAM,IAAI/S,WAAW,qBAG3C,IADA7D,EAAS,GACF4W,GACFA,EAAQ,IAAG5W,GAAUuoB,GACrB3R,EAAQ,IAAG2R,GAAOA,GAEtB3R,IAAU,EAEX,OAAO5W,I,uBCpBR,IAAImlB,EAAcziB,OAAOmP,UAAU1I,SAAUic,EAAKD,EAAYrmB,KAAK,IAEnE4c,EAAOC,QAAU,SAAUvb,GAC1B,MACkB,iBAAVA,GACNA,GACiB,iBAAVA,IACNA,aAAiB2c,QAAUoI,EAAYrmB,KAAKsB,KAAWglB,KACzD,I,6BCRF1J,EAAOC,QAAU,EAAQ,MAAR,GACd,gBACA,EAAQ,Q,6BCFX,IAAIiN,EAAa,EAAQ,OACrBC,EAAa,CAAE1B,QAAQ,EAAMM,QAAQ,GAEzC/L,EAAOC,QAAU,WAChB,IACI8L,EADA/mB,EAASkoB,EAAOloB,OAEpB,GAAsB,mBAAXA,EAAuB,OAAO,EACzC+mB,EAAS/mB,EAAO,eAChB,IAAMqc,OAAO0K,GACb,MAAOxnB,GAAK,OAAO,EAGnB,QAAK4oB,SAAkBnoB,EAAO6D,aACzBskB,SAAkBnoB,EAAOooB,gBACzBD,SAAkBnoB,EAAOC,e,uBCd/B+a,EAAOC,QAAU,SAAUvb,GAC1B,QAAKA,IACgB,iBAAVA,KACNA,EAAM2J,aACoB,WAA3B3J,EAAM2J,YAAYF,MAC0B,WAAzCzJ,EAAMA,EAAM2J,YAAYpJ,gB,6BCLhC,IAAI8b,EAAI,EAAQ,OAEZnW,EAAS5D,OAAO4D,OAAQsW,EAAiBla,OAAOka,eAAgBmM,EAAermB,OAAOmP,UAEtFmX,EAAU1iB,EAAO,MACrBoV,EAAOC,QAAU,SAAUI,GAE1B,IADA,IAAiBlS,EAAMof,EAAnBC,EAAU,EACPF,EAAQjN,GAAQmN,GAAW,QAAQA,EAkB1C,OAhBAF,EADAjN,GAAQmN,GAAW,KACH,EAEhBtM,EACCmM,EAFDlf,EAAO,KAAOkS,EAIbU,EAAEP,GAAG,MAAM,SAAU9b,GAKhB6oB,IACJA,GAAoB,EACpBrM,EAAe7d,KAAM8K,EAAM4S,EAAErc,IAC7B6oB,GAAoB,OAGfpf,I,6BCzBR,IAAI4S,EAAe,EAAQ,OACvB0M,EAAe,gBAEnBzN,EAAOC,QAAU,SAAUyN,GAC1B,OAAO1mB,OAAOkL,iBAAiBwb,EAAgB,CAG9CC,YAAa5M,EACZ,GAAK0M,GAAgBA,EAAaE,aAAgBD,EAAe,gBAElEE,mBAAoB7M,EACnB,GACC0M,GAAgBA,EAAaG,oBAC7BF,EAAe,uBAEjB7kB,SAAUkY,EAAE,GAAK0M,GAAgBA,EAAa5kB,UAAa6kB,EAAe,aAC1EhgB,MAAOqT,EAAE,GAAK0M,GAAgBA,EAAa/f,OAAUggB,EAAe,UACpE/f,QAASoT,EAAE,GAAK0M,GAAgBA,EAAa9f,SAAY+f,EAAe,YACxEpF,OAAQvH,EAAE,GAAK0M,GAAgBA,EAAanF,QAAWoF,EAAe,WACtEG,QAAS9M,EAAE,GAAK0M,GAAgBA,EAAaI,SAAYH,EAAe,YACxE9f,MAAOmT,EAAE,GAAK0M,GAAgBA,EAAa7f,OAAU8f,EAAe,UACpEN,YAAarM,EACZ,GAAK0M,GAAgBA,EAAaL,aAAgBM,EAAe,gBAElEzoB,YAAa8b,EACZ,GAAK0M,GAAgBA,EAAaxoB,aAAgByoB,EAAe,gBAElEI,YAAa/M,EACZ,GAAK0M,GAAgBA,EAAaK,aAAgBJ,EAAe,oB,6BC5BpE,IAAI3M,EAAiB,EAAQ,OACzBgN,EAAiB,EAAQ,OAEzBC,EAAWhnB,OAAO4D,OAAO,MAE7BoV,EAAOC,QAAU,SAAUyN,GAC1B,OAAO1mB,OAAOkL,iBAAiBwb,EAAgB,CAC9CO,IAAKlN,GAAE,SAAUrY,GAChB,OAAIslB,EAAStlB,GAAaslB,EAAStlB,GAC3BslB,EAAStlB,GAAOglB,EAAerM,OAAO3Y,OAE/CwlB,OAAQnN,GAAE,SAAUgL,GACnB,IAAIrjB,EAEJ,IAAKA,KADLqlB,EAAehC,GACHiC,EACX,GAAIA,EAAStlB,KAASqjB,EAAQ,OAAOrjB,S,6BCbzC,IAWIglB,EAAgBS,EAAcC,EAX9BrN,EAAuB,EAAQ,OAC/BgN,EAAuB,EAAQ,OAC/BN,EAAuB,gBACvBY,EAAuB,EAAQ,OAC/BC,EAAuB,EAAQ,OAC/BC,EAAuB,EAAQ,OAE/B3jB,EAAS5D,OAAO4D,OAChBsH,EAAmBlL,OAAOkL,iBAC1BgP,EAAiBla,OAAOka,eAI5B,GAA4B,mBAAjBuM,EACV,IACCpM,OAAOoM,KACPW,GAAe,EACd,MAAO1L,SAET+K,EAAe,KAKhBU,EAAe,SAAgBK,GAC9B,GAAInrB,gBAAgB8qB,EAAc,MAAM,IAAI7V,UAAU,+BACtD,OAAOoV,EAAec,IAKvBxO,EAAOC,QAAUyN,EAAiB,SAAS1oB,EAAOwpB,GACjD,IAAIzC,EACJ,GAAI1oB,gBAAgB2B,EAAQ,MAAM,IAAIsT,UAAU,+BAChD,OAAI8V,EAAqBX,EAAae,IACtCzC,EAASnhB,EAAOujB,EAAahY,WAC7BqY,OAA8B7N,IAAhB6N,EAA4B,GAAKnN,OAAOmN,GAC/Ctc,EAAiB6Z,EAAQ,CAC/B0C,gBAAiB1N,EAAE,GAAIyN,GACvBE,SAAU3N,EAAE,GAAIsN,EAAaG,QAI/BF,EAAqBZ,GACrBa,EAAoBb,GAGpBxb,EAAiBic,EAAahY,UAAW,CACxC9H,YAAa0S,EAAE2M,GACfjgB,SAAUsT,EAAE,IAAI,WAAc,OAAO1d,KAAKqrB,cAK3Cxc,EAAiBwb,EAAevX,UAAW,CAC1C1I,SAAUsT,GAAE,WAAc,MAAO,WAAagN,EAAe1qB,MAAMorB,gBAAkB,OACrFxM,QAASlB,GAAE,WAAc,OAAOgN,EAAe1qB,WAEhD6d,EACCwM,EAAevX,UACfuX,EAAeN,YACfrM,EAAE,IAAI,WACL,IAAIgL,EAASgC,EAAe1qB,MAC5B,MAAsB,iBAAX0oB,EAA4BA,EAChCA,EAAOte,eAGhByT,EAAewM,EAAevX,UAAWuX,EAAezoB,YAAa8b,EAAE,IAAK,WAG5EG,EACCiN,EAAahY,UAAWuX,EAAezoB,YACvC8b,EAAE,IAAK2M,EAAevX,UAAUuX,EAAezoB,eAOhDic,EACCiN,EAAahY,UAAWuX,EAAeN,YACvCrM,EAAE,IAAK2M,EAAevX,UAAUuX,EAAeN,gB,6BCnFhD,IAAIuB,EAAW,EAAQ,OAEvB3O,EAAOC,QAAU,SAAUvb,GAC1B,IAAKiqB,EAASjqB,GAAQ,MAAM,IAAI4T,UAAU5T,EAAQ,oBAClD,OAAOA,I,6BCJR,IASI6M,EAAI1K,EAAMqJ,EAAK0e,EAAMC,EAASC,EAAaC,EAT3ChO,EAAW,EAAQ,OACnBF,EAAW,EAAQ,OAEnBhe,EAAQ6e,SAASvL,UAAUtT,MAAOO,EAAOse,SAASvL,UAAU/S,KAC5DwH,EAAS5D,OAAO4D,OAAQsW,EAAiBla,OAAOka,eAChDhP,EAAmBlL,OAAOkL,iBAC1BgE,EAAiBlP,OAAOmP,UAAUD,eAClC8Y,EAAa,CAAE1O,cAAc,EAAMC,YAAY,EAAOpO,UAAU,GAuBpEtL,EAAO,SAAUof,EAAMgJ,GACtB,IAAIpoB,EAAM4b,EAUV,OARA5B,EAASoO,GACTxM,EAAOpf,KACPkO,EAAGnO,KAAKC,KAAM4iB,EAAMpf,EAAO,WAC1BqJ,EAAI9M,KAAKqf,EAAMwD,EAAMpf,GACrBhE,EAAMO,KAAK6rB,EAAU5rB,KAAMkW,aAG5B1S,EAAKqoB,mBAAqBD,EACnB5rB,MAqERwrB,EAAU,CACTtd,GApGDA,EAAK,SAAU0U,EAAMgJ,GACpB,IAAI9f,EAeJ,OAbA0R,EAASoO,GAEJ/Y,EAAe9S,KAAKC,KAAM,UAK9B8L,EAAO9L,KAAK8rB,QAJZhgB,EAAO6f,EAAWtqB,MAAQkG,EAAO,MACjCsW,EAAe7d,KAAM,SAAU2rB,GAC/BA,EAAWtqB,MAAQ,MAIfyK,EAAK8W,GACqB,iBAAf9W,EAAK8W,GAAoB9W,EAAK8W,GAAM/a,KAAK+jB,GACpD9f,EAAK8W,GAAQ,CAAC9W,EAAK8W,GAAOgJ,GAFd9f,EAAK8W,GAAQgJ,EAIvB5rB,MAqFPwD,KAAMA,EACNqJ,IArEDA,EAAM,SAAU+V,EAAMgJ,GACrB,IAAI9f,EAAMxE,EAAWykB,EAAW5mB,EAIhC,GAFAqY,EAASoO,IAEJ/Y,EAAe9S,KAAKC,KAAM,UAAW,OAAOA,KAEjD,KADA8L,EAAO9L,KAAK8rB,QACFlJ,GAAO,OAAO5iB,KAGxB,GAAyB,iBAFzBsH,EAAYwE,EAAK8W,IAGhB,IAAKzd,EAAI,EAAI4mB,EAAYzkB,EAAUnC,KAAOA,EACpC4mB,IAAcH,GAChBG,EAAUF,qBAAuBD,IACV,IAArBtkB,EAAUrF,OAAc6J,EAAK8W,GAAQtb,EAAUnC,EAAI,EAAI,GACtDmC,EAAUsG,OAAOzI,EAAG,SAItBmC,IAAcskB,GAChBtkB,EAAUukB,qBAAuBD,UAC5B9f,EAAK8W,GAId,OAAO5iB,MA6CPurB,KA1CDA,EAAO,SAAU3I,GAChB,IAAIzd,EAAGwI,EAAGie,EAAUtkB,EAAW5H,EAE/B,GAAKmT,EAAe9S,KAAKC,KAAM,YAC/BsH,EAAYtH,KAAK8rB,OAAOlJ,IAGxB,GAAyB,iBAAdtb,EAAwB,CAGlC,IAFAqG,EAAIuI,UAAUjU,OACdvC,EAAO,IAAI+I,MAAMkF,EAAI,GAChBxI,EAAI,EAAGA,EAAIwI,IAAKxI,EAAGzF,EAAKyF,EAAI,GAAK+Q,UAAU/Q,GAGhD,IADAmC,EAAYA,EAAUuB,QACjB1D,EAAI,EAAIymB,EAAWtkB,EAAUnC,KAAOA,EACxC3F,EAAMO,KAAK6rB,EAAU5rB,KAAMN,QAG5B,OAAQwW,UAAUjU,QAClB,KAAK,EACJlC,EAAKA,KAAKuH,EAAWtH,MACrB,MACD,KAAK,EACJD,EAAKA,KAAKuH,EAAWtH,KAAMkW,UAAU,IACrC,MACD,KAAK,EACJnW,EAAKA,KAAKuH,EAAWtH,KAAMkW,UAAU,GAAIA,UAAU,IACnD,MACD,QAGC,IAFAvI,EAAIuI,UAAUjU,OACdvC,EAAO,IAAI+I,MAAMkF,EAAI,GAChBxI,EAAI,EAAGA,EAAIwI,IAAKxI,EACpBzF,EAAKyF,EAAI,GAAK+Q,UAAU/Q,GAEzB3F,EAAMO,KAAKuH,EAAWtH,KAAMN,MAY/B+rB,EAAc,CACbvd,GAAIwP,EAAExP,GACN1K,KAAMka,EAAEla,GACRqJ,IAAK6Q,EAAE7Q,GACP0e,KAAM7N,EAAE6N,IAGTG,EAAO7c,EAAiB,GAAI4c,GAE5B9O,EAAOC,QAAUA,EAAU,SAAUoP,GACpC,OAAa,MAALA,EAAazkB,EAAOmkB,GAAQ7c,EAAiBlL,OAAOqoB,GAAIP,IAEjE7O,EAAQ4O,QAAUA,G,6BCjIlB,IAAIxjB,EAAa,EAAQ,OACrBsb,EAAa,EAAQ,MAErBzb,EAAOY,MAAMqK,UAAUtT,MAAOqe,EAAiBla,OAAOka,eACtDtW,EAAS5D,OAAO4D,OAAQsL,EAAiBlP,OAAOmP,UAAUD,eAC1D6K,EAAI,CAAET,cAAc,EAAMC,YAAY,EAAOpO,UAAU,GAE3D6N,EAAOC,QAAU,SAAUqP,EAAIxI,GAC9B,IAAI3X,EAEJ,OADCwX,EAAW2I,IAAO3I,EAAWG,GACzB5Q,EAAe9S,KAAKksB,EAAI,WAa7BngB,EAAO4R,EAAErc,MAAQ4qB,EAAGH,OACfjZ,EAAe9S,KAAK0jB,EAAI,eAKzB3X,IAAS2X,EAAGqI,SAChB9jB,EAAQyb,EAAGqI,QAAQ,SAAUF,EAAU9gB,GACjCgB,EAAKhB,GAIgB,iBAAfgB,EAAKhB,GACS,iBAAb8gB,EAAuB/jB,EAAKrI,MAAMsM,EAAKhB,GAAO8gB,GACpD9f,EAAKhB,GAAMjD,KAAK+jB,GACS,iBAAbA,GACjBA,EAASlgB,QAAQI,EAAKhB,IACtBgB,EAAKhB,GAAQ8gB,GAEb9f,EAAKhB,GAAQ,CAACgB,EAAKhB,GAAO8gB,GAV1B9f,EAAKhB,GAAQ8gB,KAaf/N,EAAe4F,EAAI,SAAU/F,GAC7BA,EAAErc,MAAQ,QArBTwc,EAAe4F,EAAI,SAAU/F,QAC7BA,EAAErc,MAAQ,QAfLwR,EAAe9S,KAAK0jB,EAAI,WAO7B/F,EAAErc,MAAQoiB,EAAGqI,OACbjO,EAAeoO,EAAI,SAAUvO,QAC7BA,EAAErc,MAAQ,QARTqc,EAAErc,MAAQkG,EAAO,MACjBsW,EAAeoO,EAAI,SAAUvO,GAC7BG,EAAe4F,EAAI,SAAU/F,QAC7BA,EAAErc,MAAQ,S,UCjBb,IAAI6qB,EAAgB,WACnB,GAAoB,iBAAT9M,MAAqBA,KAAM,OAAOA,KAC7C,GAAsB,iBAAX+M,QAAuBA,OAAQ,OAAOA,OACjD,MAAM,IAAI1qB,MAAM,oCAGjBkb,EAAOC,QAAU,WAChB,GAAI5c,KAAM,OAAOA,KAOjB,IACC2D,OAAOka,eAAela,OAAOmP,UAAW,aAAc,CACrDsK,IAAK,WAAc,OAAOpd,MAC1Bid,cAAc,IAEd,MAAOvb,GAER,OAAOwqB,IAER,IAEC,OAAKE,YAAmBF,IAEvB,eACMvoB,OAAOmP,UAAUsZ,YAtBT,I,6BCJjBzP,EAAOC,QAAU,EAAQ,MAAR,GAAgCyP,WAAa,EAAQ,Q,uBCAtE1P,EAAOC,QAAU,WAChB,MAA0B,iBAAfyP,cACNA,YACEA,WAAW5jB,QAAUA,Q,uBCH7B,IAAI6jB,EAAiB,SAAU7sB,GAC9B,GAAkB,mBAAPA,EAAmB,MAAM,IAAIwV,UAAUxV,EAAK,sBACvD,OAAOA,GAGJ8sB,EAAa,SAAUC,GAC1B,IAAwCrgB,EAAOsgB,EAA3CrhB,EAAOshB,SAASC,eAAe,IAA0BxnB,EAAI,EAwBjE,OAvBA,IAAIqnB,GAAS,WACZ,IAAI3sB,EACJ,GAAKsM,EAGMsgB,IACVtgB,EAAQsgB,EAAa9pB,OAAOwJ,QAJjB,CACX,IAAKsgB,EAAc,OACnBtgB,EAAQsgB,EAMT,GAFAA,EAAetgB,EACfA,EAAQ,KACoB,mBAAjBsgB,EAIV,OAHA5sB,EAAW4sB,EACXA,EAAe,UACf5sB,IAID,IADAuL,EAAKU,KAAQ3G,IAAMA,EAAI,EAChBsnB,GACN5sB,EAAW4sB,EAAapkB,QACnBokB,EAAaxqB,SAAQwqB,EAAe,MACzC5sB,OAEC+sB,QAAQxhB,EAAM,CAAEyhB,eAAe,IAC3B,SAAUptB,GAChB6sB,EAAe7sB,GACX0M,EACkB,mBAAVA,EAAsBA,EAAQ,CAACA,EAAO1M,GAC5C0M,EAAMtE,KAAKpI,IAGjB0M,EAAQ1M,EACR2L,EAAKU,KAAQ3G,IAAMA,EAAI,KAIzBwX,EAAOC,QAAW,WAEjB,GAAwB,iBAAZtc,SAAyBA,SAAwC,mBAArBA,QAAQC,SAC/D,OAAOD,QAAQC,SAIhB,GAA8B,mBAAnBL,eACV,OAAO,SAAUwC,GAAMxC,eAAeosB,EAAe5pB,KAItD,GAAyB,iBAAbgqB,UAA0BA,SAAU,CAC/C,GAAgC,mBAArBI,iBAAiC,OAAOP,EAAWO,kBAC9D,GAAsC,mBAA3BC,uBAAuC,OAAOR,EAAWQ,wBAKrE,MAA4B,mBAAjB3sB,aACH,SAAUsC,GAAMtC,aAAaksB,EAAe5pB,KAIzB,mBAAfjC,YAAqD,iBAAfA,WAC1C,SAAUiC,GAAMjC,WAAW6rB,EAAe5pB,GAAK,IAGhD,KA5BS,I,sBC1CjBia,EAAOC,QAAU,Y,6BCAjB,IAAI6F,EAAa,EAAQ,OACrBuK,EAAa,EAAQ,MAEzBrQ,EAAOC,QAAU,SAAUvb,GAE1B,IADAA,EAAQohB,EAASphB,IACL2rB,EAAY,MAAM,IAAI/X,UAAU5T,EAAQ,qCACpD,OAAOA,I,6BCNR,IAAI4rB,EAAc,EAAQ,OAE1BtQ,EAAOC,QAAU,SAAUvb,GAC1B,GAAqB,mBAAVA,EAAsB,OAAO,EAExC,IAAKwR,eAAe9S,KAAKsB,EAAO,UAAW,OAAO,EAElD,IACC,GAA4B,iBAAjBA,EAAMY,OAAqB,OAAO,EAC7C,GAA0B,mBAAfZ,EAAMtB,KAAqB,OAAO,EAC7C,GAA2B,mBAAhBsB,EAAM7B,MAAsB,OAAO,EAC7C,MAAOkC,GACR,OAAO,EAGR,OAAQurB,EAAY5rB,K,6BCfrB,IAAIkb,EAAU,EAAQ,OAGlB2Q,EAAgB,CAAE,QAAU,EAAM,UAAY,EAAM,WAAa,GAErEvQ,EAAOC,QAAU,SAAUvb,GAC1B,QAAKkb,EAAQlb,IACNwR,eAAe9S,KAAKmtB,SAAsB7rB,K,6BCPlD,IAAIukB,EAAa,EAAQ,OAErBuH,EAAU,mBAAoBC,EAAmB/O,SAASvL,UAAU1I,SAExEuS,EAAOC,QAAU,SAAUvb,GAC1B,QAAKukB,EAAWvkB,KACZ8rB,EAAQlc,KAAKmc,EAAiBrtB,KAAKsB,M,6BCNxC,IAAI6d,EAAW,EAAQ,OAEvBvC,EAAOC,QAAU,SAAUvb,GAC1B,IAAK6d,EAAS7d,GAAQ,OAAO,EAC7B,IACC,QAAKA,EAAM2J,aACJ3J,EAAM2J,YAAY8H,YAAczR,EACtC,MAAOK,GACR,OAAO,K,uBCLTib,EAAOC,QAAU,SAAUvb,GAAS,OAAOA,WCJvCgsB,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBjQ,IAAjBkQ,EACH,OAAOA,EAAa5Q,QAGrB,IAAID,EAAS0Q,EAAyBE,GAAY,CAGjD3Q,QAAS,IAOV,OAHA6Q,EAAoBF,GAAU5Q,EAAQA,EAAOC,QAAS0Q,GAG/C3Q,EAAOC,QCpBf0Q,EAAoB5P,EAAI,CAACd,EAAS8Q,KACjC,IAAI,IAAIroB,KAAOqoB,EACXJ,EAAoBtB,EAAE0B,EAAYroB,KAASioB,EAAoBtB,EAAEpP,EAASvX,IAC5E1B,OAAOka,eAAejB,EAASvX,EAAK,CAAE6X,YAAY,EAAME,IAAKsQ,EAAWroB,MCJ3EioB,EAAoBtB,EAAI,CAACnnB,EAAK8oB,IAAUhqB,OAAOmP,UAAUD,eAAe9S,KAAK8E,EAAK8oB,GCClFL,EAAoBM,EAAKhR,IACH,oBAAXjb,QAA0BA,OAAOC,aAC1C+B,OAAOka,eAAejB,EAASjb,OAAOC,YAAa,CAAEP,MAAO,WAE7DsC,OAAOka,eAAejB,EAAS,aAAc,CAAEvb,OAAO,K,mBCHvD,MAAMwsB,EAAU,EAAQ,OAElBrO,EAAW,EAAQ,OA8CpB2M,OAAO2B,SACR3B,OAAO2B,OAAS,IAEpB3B,OAAO2B,OAAOC,MAhDd,MACI/iB,cACIhL,KAAKguB,kBAAoB,GACzBhuB,KAAKuN,EAAIsgB,EAAQ9Y,eAAc,CAACkZ,EAAYpuB,IAAaG,KAAKkuB,aAAaD,EAAYpuB,IALrE,GAOtBquB,aAAaD,EAAYpuB,GACrB,MAAQsM,MAAOgiB,GAAgBnuB,KAAKguB,kBAAkBC,GAClDE,GACAA,EAAYtmB,KAAKomB,EAAYpuB,GAGrCuuB,gBAAe,WAAEH,EAAU,SAAEnZ,EAAQ,GAAErV,IACnCO,KAAKguB,kBAAkBC,GAAc,CACjCA,aACAnZ,WACA3I,MAAO0hB,EAAQ1hB,OAAMkiB,SAAY5uB,MACjCA,MAGR6uB,gBAAgBC,GACZA,EAAkBvmB,SAASwmB,GAAWxuB,KAAKouB,eAAeI,KAE9DH,qBAAqBI,GACjB,IAAIC,EAAoBD,EACnBhmB,MAAMC,QAAQgmB,KACfA,EAAoB,CAACA,IAEzB,MAAMC,EAAoB,GAC1B,IAAK,IAAIxpB,EAAI,EAAGA,EAAIupB,EAAkBzsB,OAAQkD,IAAK,CAC/C,MAAM8oB,EAAaS,EAAkBvpB,IAC/B,SAAE2P,GAAa9U,KAAKguB,kBAAkBC,GACtC1Q,EAAW,IAAIiC,EACrBmP,EAAkB9mB,KAAK0V,EAASnc,SAChCpB,KAAKuN,EAAE1F,KAAKomB,EAAYnZ,GAAWpT,IAC3BA,EACA6b,EAASnb,OAAOV,GAGhB6b,EAASpb,mBAIfD,QAAQ2Y,IAAI8T,M","file":"queue/index.js","sourcesContent":["/**\n * Creates a continuation function with some arguments already applied.\n *\n * Useful as a shorthand when combined with other control flow functions. Any\n * arguments passed to the returned function are added to the arguments\n * originally passed to apply.\n *\n * @name apply\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {Function} fn - The function you want to eventually apply all\n * arguments to. Invokes with (arguments...).\n * @param {...*} arguments... - Any number of arguments to automatically apply\n * when the continuation is called.\n * @returns {Function} the partially-applied function\n * @example\n *\n * // using apply\n * async.parallel([\n *     async.apply(fs.writeFile, 'testfile1', 'test1'),\n *     async.apply(fs.writeFile, 'testfile2', 'test2')\n * ]);\n *\n *\n * // the same process without using apply\n * async.parallel([\n *     function(callback) {\n *         fs.writeFile('testfile1', 'test1', callback);\n *     },\n *     function(callback) {\n *         fs.writeFile('testfile2', 'test2', callback);\n *     }\n * ]);\n *\n * // It's possible to pass any number of additional arguments when calling the\n * // continuation:\n *\n * node> var fn = async.apply(sys.puts, 'one');\n * node> fn('two', 'three');\n * one\n * two\n * three\n */\nfunction apply(fn, ...args) {\n    return (...callArgs) => fn(...args,...callArgs);\n}\n\nfunction initialParams (fn) {\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        return fn.call(this, args, callback);\n    };\n}\n\n/* istanbul ignore file */\n\nvar hasQueueMicrotask = typeof queueMicrotask === 'function' && queueMicrotask;\nvar hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nvar hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nfunction fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nfunction wrap(defer) {\n    return (fn, ...args) => defer(() => fn(...args));\n}\n\nvar _defer;\n\nif (hasQueueMicrotask) {\n    _defer = queueMicrotask;\n} else if (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nvar setImmediate$1 = wrap(_defer);\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nfunction asyncify(func) {\n    if (isAsync(func)) {\n        return function (...args/*, callback*/) {\n            const callback = args.pop();\n            const promise = func.apply(this, args);\n            return handlePromise(promise, callback)\n        }\n    }\n\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (result && typeof result.then === 'function') {\n            return handlePromise(result, callback)\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction handlePromise(promise, callback) {\n    return promise.then(value => {\n        invokeCallback(callback, null, value);\n    }, err => {\n        invokeCallback(callback, err && err.message ? err : new Error(err));\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (err) {\n        setImmediate$1(e => { throw e }, err);\n    }\n}\n\nfunction isAsync(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction isAsyncGenerator(fn) {\n    return fn[Symbol.toStringTag] === 'AsyncGenerator';\n}\n\nfunction isAsyncIterable(obj) {\n    return typeof obj[Symbol.asyncIterator] === 'function';\n}\n\nfunction wrapAsync(asyncFn) {\n    if (typeof asyncFn !== 'function') throw new Error('expected a function')\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\n// conditionally promisify a function.\n// only return a promise if a callback is omitted\nfunction awaitify (asyncFn, arity = asyncFn.length) {\n    if (!arity) throw new Error('arity is undefined')\n    function awaitable (...args) {\n        if (typeof args[arity - 1] === 'function') {\n            return asyncFn.apply(this, args)\n        }\n\n        return new Promise((resolve, reject) => {\n            args[arity - 1] = (err, ...cbArgs) => {\n                if (err) return reject(err)\n                resolve(cbArgs.length > 1 ? cbArgs : cbArgs[0]);\n            };\n            asyncFn.apply(this, args);\n        })\n    }\n\n    return awaitable\n}\n\nfunction applyEach (eachfn) {\n    return function applyEach(fns, ...callArgs) {\n        const go = awaitify(function (callback) {\n            var that = this;\n            return eachfn(fns, (fn, cb) => {\n                wrapAsync(fn).apply(that, callArgs.concat(cb));\n            }, callback);\n        });\n        return go;\n    };\n}\n\nfunction _asyncMap(eachfn, arr, iteratee, callback) {\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    return eachfn(arr, (value, _, iterCb) => {\n        var index = counter++;\n        _iteratee(value, (err, v) => {\n            results[index] = v;\n            iterCb(err);\n        });\n    }, err => {\n        callback(err, results);\n    });\n}\n\nfunction isArrayLike(value) {\n    return value &&\n        typeof value.length === 'number' &&\n        value.length >= 0 &&\n        value.length % 1 === 0;\n}\n\n// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nconst breakLoop = {};\n\nfunction once(fn) {\n    function wrapper (...args) {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    }\n    Object.assign(wrapper, fn);\n    return wrapper\n}\n\nfunction getIterator (coll) {\n    return coll[Symbol.iterator] && coll[Symbol.iterator]();\n}\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = obj ? Object.keys(obj) : [];\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        if (key === '__proto__') {\n            return next();\n        }\n        return i < len ? {value: obj[key], key} : null;\n    };\n}\n\nfunction createIterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n\nfunction onlyOnce(fn) {\n    return function (...args) {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, args);\n    };\n}\n\n// for async generators\nfunction asyncEachOfLimit(generator, limit, iteratee, callback) {\n    let done = false;\n    let canceled = false;\n    let awaiting = false;\n    let running = 0;\n    let idx = 0;\n\n    function replenish() {\n        //console.log('replenish')\n        if (running >= limit || awaiting || done) return\n        //console.log('replenish awaiting')\n        awaiting = true;\n        generator.next().then(({value, done: iterDone}) => {\n            //console.log('got value', value)\n            if (canceled || done) return\n            awaiting = false;\n            if (iterDone) {\n                done = true;\n                if (running <= 0) {\n                    //console.log('done nextCb')\n                    callback(null);\n                }\n                return;\n            }\n            running++;\n            iteratee(value, idx, iterateeCallback);\n            idx++;\n            replenish();\n        }).catch(handleError);\n    }\n\n    function iterateeCallback(err, result) {\n        //console.log('iterateeCallback')\n        running -= 1;\n        if (canceled) return\n        if (err) return handleError(err)\n\n        if (err === false) {\n            done = true;\n            canceled = true;\n            return\n        }\n\n        if (result === breakLoop || (done && running <= 0)) {\n            done = true;\n            //console.log('done iterCb')\n            return callback(null);\n        }\n        replenish();\n    }\n\n    function handleError(err) {\n        if (canceled) return\n        awaiting = false;\n        done = true;\n        callback(err);\n    }\n\n    replenish();\n}\n\nvar eachOfLimit = (limit) => {\n    return (obj, iteratee, callback) => {\n        callback = once(callback);\n        if (limit <= 0) {\n            throw new RangeError('concurrency limit cannot be less than 1')\n        }\n        if (!obj) {\n            return callback(null);\n        }\n        if (isAsyncGenerator(obj)) {\n            return asyncEachOfLimit(obj, limit, iteratee, callback)\n        }\n        if (isAsyncIterable(obj)) {\n            return asyncEachOfLimit(obj[Symbol.asyncIterator](), limit, iteratee, callback)\n        }\n        var nextElem = createIterator(obj);\n        var done = false;\n        var canceled = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            if (canceled) return\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (err === false) {\n                done = true;\n                canceled = true;\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n};\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOfLimit$2 = awaitify(eachOfLimit$1, 4);\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback);\n    var index = 0,\n        completed = 0,\n        {length} = coll,\n        canceled = false;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err === false) {\n            canceled = true;\n        }\n        if (canceled === true) return\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nfunction eachOfGeneric (coll, iteratee, callback) {\n    return eachOfLimit$2(coll, Infinity, iteratee, callback);\n}\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dev.json is a file containing a valid json object config for dev environment\n * // dev.json is a file containing a valid json object config for test environment\n * // prod.json is a file containing a valid json object config for prod environment\n * // invalid.json is a file with a malformed json object\n *\n * let configs = {}; //global variable\n * let validConfigFileMap = {dev: 'dev.json', test: 'test.json', prod: 'prod.json'};\n * let invalidConfigFileMap = {dev: 'dev.json', test: 'test.json', invalid: 'invalid.json'};\n *\n * // asynchronous function that reads a json file and parses the contents as json object\n * function parseFile(file, key, callback) {\n *     fs.readFile(file, \"utf8\", function(err, data) {\n *         if (err) return calback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }\n *\n * // Using callbacks\n * async.forEachOf(validConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *     } else {\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile, function (err) {\n *     if (err) {\n *         console.error(err);\n *         // JSON parse error exception\n *     } else {\n *         console.log(configs);\n *     }\n * });\n *\n * // Using Promises\n * async.forEachOf(validConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n *     // configs is now a map of JSON data, e.g.\n *     // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n * }).catch( err => {\n *     console.error(err);\n * });\n *\n * //Error handing\n * async.forEachOf(invalidConfigFileMap, parseFile)\n * .then( () => {\n *     console.log(configs);\n * }).catch( err => {\n *     console.error(err);\n *     // JSON parse error exception\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.forEachOf(validConfigFileMap, parseFile);\n *         console.log(configs);\n *         // configs is now a map of JSON data, e.g.\n *         // { dev: //parsed dev.json, test: //parsed test.json, prod: //parsed prod.json}\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * //Error handing\n * async () => {\n *     try {\n *         let result = await async.forEachOf(invalidConfigFileMap, parseFile);\n *         console.log(configs);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // JSON parse error exception\n *     }\n * }\n *\n */\nfunction eachOf(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    return eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n\nvar eachOf$1 = awaitify(eachOf, 3);\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callbacks\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.map(fileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes, function(err, results) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(results);\n *     }\n * });\n *\n * // Using Promises\n * async.map(fileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now an array of the file size in bytes for each file, e.g.\n *     // [ 1000, 2000, 3000]\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.map(withMissingFileList, getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.map(fileList, getFileSizeInBytes);\n *         console.log(results);\n *         // results is now an array of the file size in bytes for each file, e.g.\n *         // [ 1000, 2000, 3000]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.map(withMissingFileList, getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction map (coll, iteratee, callback) {\n    return _asyncMap(eachOf$1, coll, iteratee, callback)\n}\nvar map$1 = awaitify(map, 3);\n\n/**\n * Applies the provided arguments to each function in the array, calling\n * `callback` after all functions have completed. If you only provide the first\n * argument, `fns`, then it will return a function which lets you pass in the\n * arguments as if it were a single function call. If more arguments are\n * provided, `callback` is required while `args` is still optional. The results\n * for each of the applied async functions are passed to the final callback\n * as an array.\n *\n * @name applyEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s\n * to all call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - Returns a function that takes no args other than\n * an optional callback, that is the result of applying the `args` to each\n * of the functions.\n * @example\n *\n * const appliedFn = async.applyEach([enableSearch, updateSchema], 'bucket')\n *\n * appliedFn((err, results) => {\n *     // results[0] is the results for `enableSearch`\n *     // results[1] is the results for `updateSchema`\n * });\n *\n * // partial application example:\n * async.each(\n *     buckets,\n *     async (bucket) => async.applyEach([enableSearch, updateSchema], bucket)(),\n *     callback\n * );\n */\nvar applyEach$1 = applyEach(map$1);\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachOfSeries(coll, iteratee, callback) {\n    return eachOfLimit$2(coll, 1, iteratee, callback)\n}\nvar eachOfSeries$1 = awaitify(eachOfSeries, 3);\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs only a single async operation at a time.\n *\n * @name mapSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapSeries (coll, iteratee, callback) {\n    return _asyncMap(eachOfSeries$1, coll, iteratee, callback)\n}\nvar mapSeries$1 = awaitify(mapSeries, 3);\n\n/**\n * The same as [`applyEach`]{@link module:ControlFlow.applyEach} but runs only a single async operation at a time.\n *\n * @name applyEachSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.applyEach]{@link module:ControlFlow.applyEach}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} fns - A collection of {@link AsyncFunction}s to all\n * call with the same arguments\n * @param {...*} [args] - any number of separate arguments to pass to the\n * function.\n * @param {Function} [callback] - the final argument should be the callback,\n * called when all functions have completed processing.\n * @returns {AsyncFunction} - A function, that when called, is the result of\n * appling the `args` to the list of functions.  It takes no args, other than\n * a callback.\n */\nvar applyEachSeries = applyEach(mapSeries$1);\n\nconst PROMISE_SYMBOL = Symbol('promiseCallback');\n\nfunction promiseCallback () {\n    let resolve, reject;\n    function callback (err, ...args) {\n        if (err) return reject(err)\n        resolve(args.length > 1 ? args : args[0]);\n    }\n\n    callback[PROMISE_SYMBOL] = new Promise((res, rej) => {\n        resolve = res,\n        reject = rej;\n    });\n\n    return callback\n}\n\n/**\n * Determines the best order for running the {@link AsyncFunction}s in `tasks`, based on\n * their requirements. Each function can optionally depend on other functions\n * being completed first, and each function is run as soon as its requirements\n * are satisfied.\n *\n * If any of the {@link AsyncFunction}s pass an error to their callback, the `auto` sequence\n * will stop. Further tasks will not execute (so any other functions depending\n * on it will not run), and the main `callback` is immediately called with the\n * error.\n *\n * {@link AsyncFunction}s also receive an object containing the results of functions which\n * have completed so far as the first argument, if they have dependencies. If a\n * task function has no dependencies, it will only be passed a callback.\n *\n * @name auto\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Object} tasks - An object. Each of its properties is either a\n * function or an array of requirements, with the {@link AsyncFunction} itself the last item\n * in the array. The object's key of a property serves as the name of the task\n * defined by that property, i.e. can be used when specifying requirements for\n * other tasks. The function receives one or two arguments:\n * * a `results` object, containing the results of the previously executed\n *   functions, only passed if the task has any dependencies,\n * * a `callback(err, result)` function, which must be called when finished,\n *   passing an `error` (which can be `null`) and the result of the function's\n *   execution.\n * @param {number} [concurrency=Infinity] - An optional `integer` for\n * determining the maximum number of tasks that can be run in parallel. By\n * default, as many as possible.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback. Results are always returned; however, if an\n * error occurs, no further `tasks` will be performed, and the results object\n * will only contain partial results. Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n * @example\n *\n * //Using Callbacks\n * async.auto({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }, function(err, results) {\n *     if (err) {\n *         console.log('err = ', err);\n *     }\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * });\n *\n * //Using Promises\n * async.auto({\n *     get_data: function(callback) {\n *         console.log('in get_data');\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         console.log('in make_folder');\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: ['get_data', 'make_folder', function(results, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(results, callback) {\n *         // once the file is written let's email a link to it...\n *         callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *     }]\n * }).then(results => {\n *     console.log('results = ', results);\n *     // results = {\n *     //     get_data: ['data', 'converted to array']\n *     //     make_folder; 'folder',\n *     //     write_file: 'filename'\n *     //     email_link: { file: 'filename', email: 'user@example.com' }\n *     // }\n * }).catch(err => {\n *     console.log('err = ', err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.auto({\n *             get_data: function(callback) {\n *                 // async code to get some data\n *                 callback(null, 'data', 'converted to array');\n *             },\n *             make_folder: function(callback) {\n *                 // async code to create a directory to store a file in\n *                 // this is run at the same time as getting the data\n *                 callback(null, 'folder');\n *             },\n *             write_file: ['get_data', 'make_folder', function(results, callback) {\n *                 // once there is some data and the directory exists,\n *                 // write the data to a file in the directory\n *                 callback(null, 'filename');\n *             }],\n *             email_link: ['write_file', function(results, callback) {\n *                 // once the file is written let's email a link to it...\n *                 callback(null, {'file':results.write_file, 'email':'user@example.com'});\n *             }]\n *         });\n *         console.log('results = ', results);\n *         // results = {\n *         //     get_data: ['data', 'converted to array']\n *         //     make_folder; 'folder',\n *         //     write_file: 'filename'\n *         //     email_link: { file: 'filename', email: 'user@example.com' }\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction auto(tasks, concurrency, callback) {\n    if (typeof concurrency !== 'number') {\n        // concurrency is optional, shift the args.\n        callback = concurrency;\n        concurrency = null;\n    }\n    callback = once(callback || promiseCallback());\n    var numTasks = Object.keys(tasks).length;\n    if (!numTasks) {\n        return callback(null);\n    }\n    if (!concurrency) {\n        concurrency = numTasks;\n    }\n\n    var results = {};\n    var runningTasks = 0;\n    var canceled = false;\n    var hasError = false;\n\n    var listeners = Object.create(null);\n\n    var readyTasks = [];\n\n    // for cycle detection:\n    var readyToCheck = []; // tasks that have been identified as reachable\n    // without the possibility of returning to an ancestor task\n    var uncheckedDependencies = {};\n\n    Object.keys(tasks).forEach(key => {\n        var task = tasks[key];\n        if (!Array.isArray(task)) {\n            // no dependencies\n            enqueueTask(key, [task]);\n            readyToCheck.push(key);\n            return;\n        }\n\n        var dependencies = task.slice(0, task.length - 1);\n        var remainingDependencies = dependencies.length;\n        if (remainingDependencies === 0) {\n            enqueueTask(key, task);\n            readyToCheck.push(key);\n            return;\n        }\n        uncheckedDependencies[key] = remainingDependencies;\n\n        dependencies.forEach(dependencyName => {\n            if (!tasks[dependencyName]) {\n                throw new Error('async.auto task `' + key +\n                    '` has a non-existent dependency `' +\n                    dependencyName + '` in ' +\n                    dependencies.join(', '));\n            }\n            addListener(dependencyName, () => {\n                remainingDependencies--;\n                if (remainingDependencies === 0) {\n                    enqueueTask(key, task);\n                }\n            });\n        });\n    });\n\n    checkForDeadlocks();\n    processQueue();\n\n    function enqueueTask(key, task) {\n        readyTasks.push(() => runTask(key, task));\n    }\n\n    function processQueue() {\n        if (canceled) return\n        if (readyTasks.length === 0 && runningTasks === 0) {\n            return callback(null, results);\n        }\n        while(readyTasks.length && runningTasks < concurrency) {\n            var run = readyTasks.shift();\n            run();\n        }\n\n    }\n\n    function addListener(taskName, fn) {\n        var taskListeners = listeners[taskName];\n        if (!taskListeners) {\n            taskListeners = listeners[taskName] = [];\n        }\n\n        taskListeners.push(fn);\n    }\n\n    function taskComplete(taskName) {\n        var taskListeners = listeners[taskName] || [];\n        taskListeners.forEach(fn => fn());\n        processQueue();\n    }\n\n\n    function runTask(key, task) {\n        if (hasError) return;\n\n        var taskCallback = onlyOnce((err, ...result) => {\n            runningTasks--;\n            if (err === false) {\n                canceled = true;\n                return\n            }\n            if (result.length < 2) {\n                [result] = result;\n            }\n            if (err) {\n                var safeResults = {};\n                Object.keys(results).forEach(rkey => {\n                    safeResults[rkey] = results[rkey];\n                });\n                safeResults[key] = result;\n                hasError = true;\n                listeners = Object.create(null);\n                if (canceled) return\n                callback(err, safeResults);\n            } else {\n                results[key] = result;\n                taskComplete(key);\n            }\n        });\n\n        runningTasks++;\n        var taskFn = wrapAsync(task[task.length - 1]);\n        if (task.length > 1) {\n            taskFn(results, taskCallback);\n        } else {\n            taskFn(taskCallback);\n        }\n    }\n\n    function checkForDeadlocks() {\n        // Kahn's algorithm\n        // https://en.wikipedia.org/wiki/Topological_sorting#Kahn.27s_algorithm\n        // http://connalle.blogspot.com/2013/10/topological-sortingkahn-algorithm.html\n        var currentTask;\n        var counter = 0;\n        while (readyToCheck.length) {\n            currentTask = readyToCheck.pop();\n            counter++;\n            getDependents(currentTask).forEach(dependent => {\n                if (--uncheckedDependencies[dependent] === 0) {\n                    readyToCheck.push(dependent);\n                }\n            });\n        }\n\n        if (counter !== numTasks) {\n            throw new Error(\n                'async.auto cannot execute tasks due to a recursive dependency'\n            );\n        }\n    }\n\n    function getDependents(taskName) {\n        var result = [];\n        Object.keys(tasks).forEach(key => {\n            const task = tasks[key];\n            if (Array.isArray(task) && task.indexOf(taskName) >= 0) {\n                result.push(key);\n            }\n        });\n        return result;\n    }\n\n    return callback[PROMISE_SYMBOL]\n}\n\nvar FN_ARGS = /^(?:async\\s+)?(?:function)?\\s*\\w*\\s*\\(\\s*([^)]+)\\s*\\)(?:\\s*{)/;\nvar ARROW_FN_ARGS = /^(?:async\\s+)?\\(?\\s*([^)=]+)\\s*\\)?(?:\\s*=>)/;\nvar FN_ARG_SPLIT = /,/;\nvar FN_ARG = /(=.+)?(\\s*)$/;\n\nfunction stripComments(string) {\n    let stripped = '';\n    let index = 0;\n    let endBlockComment = string.indexOf('*/');\n    while (index < string.length) {\n        if (string[index] === '/' && string[index+1] === '/') {\n            // inline comment\n            let endIndex = string.indexOf('\\n', index);\n            index = (endIndex === -1) ? string.length : endIndex;\n        } else if ((endBlockComment !== -1) && (string[index] === '/') && (string[index+1] === '*')) {\n            // block comment\n            let endIndex = string.indexOf('*/', index);\n            if (endIndex !== -1) {\n                index = endIndex + 2;\n                endBlockComment = string.indexOf('*/', index);\n            } else {\n                stripped += string[index];\n                index++;\n            }\n        } else {\n            stripped += string[index];\n            index++;\n        }\n    }\n    return stripped;\n}\n\nfunction parseParams(func) {\n    const src = stripComments(func.toString());\n    let match = src.match(FN_ARGS);\n    if (!match) {\n        match = src.match(ARROW_FN_ARGS);\n    }\n    if (!match) throw new Error('could not parse args in autoInject\\nSource:\\n' + src)\n    let [, args] = match;\n    return args\n        .replace(/\\s/g, '')\n        .split(FN_ARG_SPLIT)\n        .map((arg) => arg.replace(FN_ARG, '').trim());\n}\n\n/**\n * A dependency-injected version of the [async.auto]{@link module:ControlFlow.auto} function. Dependent\n * tasks are specified as parameters to the function, after the usual callback\n * parameter, with the parameter names matching the names of the tasks it\n * depends on. This can provide even more readable task graphs which can be\n * easier to maintain.\n *\n * If a final callback is specified, the task results are similarly injected,\n * specified as named parameters after the initial error parameter.\n *\n * The autoInject function is purely syntactic sugar and its semantics are\n * otherwise equivalent to [async.auto]{@link module:ControlFlow.auto}.\n *\n * @name autoInject\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.auto]{@link module:ControlFlow.auto}\n * @category Control Flow\n * @param {Object} tasks - An object, each of whose properties is an {@link AsyncFunction} of\n * the form 'func([dependencies...], callback). The object's key of a property\n * serves as the name of the task defined by that property, i.e. can be used\n * when specifying requirements for other tasks.\n * * The `callback` parameter is a `callback(err, result)` which must be called\n *   when finished, passing an `error` (which can be `null`) and the result of\n *   the function's execution. The remaining parameters name other tasks on\n *   which the task is dependent, and the results from those tasks are the\n *   arguments of those parameters.\n * @param {Function} [callback] - An optional callback which is called when all\n * the tasks have been completed. It receives the `err` argument if any `tasks`\n * pass an error to their callback, and a `results` object with any completed\n * task results, similar to `auto`.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * //  The example from `auto` can be rewritten as follows:\n * async.autoInject({\n *     get_data: function(callback) {\n *         // async code to get some data\n *         callback(null, 'data', 'converted to array');\n *     },\n *     make_folder: function(callback) {\n *         // async code to create a directory to store a file in\n *         // this is run at the same time as getting the data\n *         callback(null, 'folder');\n *     },\n *     write_file: function(get_data, make_folder, callback) {\n *         // once there is some data and the directory exists,\n *         // write the data to a file in the directory\n *         callback(null, 'filename');\n *     },\n *     email_link: function(write_file, callback) {\n *         // once the file is written let's email a link to it...\n *         // write_file contains the filename returned by write_file.\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n *\n * // If you are using a JS minifier that mangles parameter names, `autoInject`\n * // will not work with plain functions, since the parameter names will be\n * // collapsed to a single letter identifier.  To work around this, you can\n * // explicitly specify the names of the parameters your task function needs\n * // in an array, similar to Angular.js dependency injection.\n *\n * // This still has an advantage over plain `auto`, since the results a task\n * // depends on are still spread into arguments.\n * async.autoInject({\n *     //...\n *     write_file: ['get_data', 'make_folder', function(get_data, make_folder, callback) {\n *         callback(null, 'filename');\n *     }],\n *     email_link: ['write_file', function(write_file, callback) {\n *         callback(null, {'file':write_file, 'email':'user@example.com'});\n *     }]\n *     //...\n * }, function(err, results) {\n *     console.log('err = ', err);\n *     console.log('email_link = ', results.email_link);\n * });\n */\nfunction autoInject(tasks, callback) {\n    var newTasks = {};\n\n    Object.keys(tasks).forEach(key => {\n        var taskFn = tasks[key];\n        var params;\n        var fnIsAsync = isAsync(taskFn);\n        var hasNoDeps =\n            (!fnIsAsync && taskFn.length === 1) ||\n            (fnIsAsync && taskFn.length === 0);\n\n        if (Array.isArray(taskFn)) {\n            params = [...taskFn];\n            taskFn = params.pop();\n\n            newTasks[key] = params.concat(params.length > 0 ? newTask : taskFn);\n        } else if (hasNoDeps) {\n            // no dependencies, use the function as-is\n            newTasks[key] = taskFn;\n        } else {\n            params = parseParams(taskFn);\n            if ((taskFn.length === 0 && !fnIsAsync) && params.length === 0) {\n                throw new Error(\"autoInject task functions require explicit parameters.\");\n            }\n\n            // remove callback param\n            if (!fnIsAsync) params.pop();\n\n            newTasks[key] = params.concat(newTask);\n        }\n\n        function newTask(results, taskCb) {\n            var newArgs = params.map(name => results[name]);\n            newArgs.push(taskCb);\n            wrapAsync(taskFn)(...newArgs);\n        }\n    });\n\n    return auto(newTasks, callback);\n}\n\n// Simple doubly linked list (https://en.wikipedia.org/wiki/Doubly_linked_list) implementation\n// used for queues. This implementation assumes that the node provided by the user can be modified\n// to adjust the next and last properties. We implement only the minimal functionality\n// for queue support.\nclass DLL {\n    constructor() {\n        this.head = this.tail = null;\n        this.length = 0;\n    }\n\n    removeLink(node) {\n        if (node.prev) node.prev.next = node.next;\n        else this.head = node.next;\n        if (node.next) node.next.prev = node.prev;\n        else this.tail = node.prev;\n\n        node.prev = node.next = null;\n        this.length -= 1;\n        return node;\n    }\n\n    empty () {\n        while(this.head) this.shift();\n        return this;\n    }\n\n    insertAfter(node, newNode) {\n        newNode.prev = node;\n        newNode.next = node.next;\n        if (node.next) node.next.prev = newNode;\n        else this.tail = newNode;\n        node.next = newNode;\n        this.length += 1;\n    }\n\n    insertBefore(node, newNode) {\n        newNode.prev = node.prev;\n        newNode.next = node;\n        if (node.prev) node.prev.next = newNode;\n        else this.head = newNode;\n        node.prev = newNode;\n        this.length += 1;\n    }\n\n    unshift(node) {\n        if (this.head) this.insertBefore(this.head, node);\n        else setInitial(this, node);\n    }\n\n    push(node) {\n        if (this.tail) this.insertAfter(this.tail, node);\n        else setInitial(this, node);\n    }\n\n    shift() {\n        return this.head && this.removeLink(this.head);\n    }\n\n    pop() {\n        return this.tail && this.removeLink(this.tail);\n    }\n\n    toArray() {\n        return [...this]\n    }\n\n    *[Symbol.iterator] () {\n        var cur = this.head;\n        while (cur) {\n            yield cur.data;\n            cur = cur.next;\n        }\n    }\n\n    remove (testFn) {\n        var curr = this.head;\n        while(curr) {\n            var {next} = curr;\n            if (testFn(curr)) {\n                this.removeLink(curr);\n            }\n            curr = next;\n        }\n        return this;\n    }\n}\n\nfunction setInitial(dll, node) {\n    dll.length = 1;\n    dll.head = dll.tail = node;\n}\n\nfunction queue(worker, concurrency, payload) {\n    if (concurrency == null) {\n        concurrency = 1;\n    }\n    else if(concurrency === 0) {\n        throw new RangeError('Concurrency must not be zero');\n    }\n\n    var _worker = wrapAsync(worker);\n    var numRunning = 0;\n    var workersList = [];\n    const events = {\n        error: [],\n        drain: [],\n        saturated: [],\n        unsaturated: [],\n        empty: []\n    };\n\n    function on (event, handler) {\n        events[event].push(handler);\n    }\n\n    function once (event, handler) {\n        const handleAndRemove = (...args) => {\n            off(event, handleAndRemove);\n            handler(...args);\n        };\n        events[event].push(handleAndRemove);\n    }\n\n    function off (event, handler) {\n        if (!event) return Object.keys(events).forEach(ev => events[ev] = [])\n        if (!handler) return events[event] = []\n        events[event] = events[event].filter(ev => ev !== handler);\n    }\n\n    function trigger (event, ...args) {\n        events[event].forEach(handler => handler(...args));\n    }\n\n    var processingScheduled = false;\n    function _insert(data, insertAtFront, rejectOnError, callback) {\n        if (callback != null && typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n\n        var res, rej;\n        function promiseCallback (err, ...args) {\n            // we don't care about the error, let the global error handler\n            // deal with it\n            if (err) return rejectOnError ? rej(err) : res()\n            if (args.length <= 1) return res(args[0])\n            res(args);\n        }\n\n        var item = {\n            data,\n            callback: rejectOnError ?\n                promiseCallback :\n                (callback || promiseCallback)\n        };\n\n        if (insertAtFront) {\n            q._tasks.unshift(item);\n        } else {\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n\n        if (rejectOnError || !callback) {\n            return new Promise((resolve, reject) => {\n                res = resolve;\n                rej = reject;\n            })\n        }\n    }\n\n    function _createCB(tasks) {\n        return function (err, ...args) {\n            numRunning -= 1;\n\n            for (var i = 0, l = tasks.length; i < l; i++) {\n                var task = tasks[i];\n\n                var index = workersList.indexOf(task);\n                if (index === 0) {\n                    workersList.shift();\n                } else if (index > 0) {\n                    workersList.splice(index, 1);\n                }\n\n                task.callback(err, ...args);\n\n                if (err != null) {\n                    trigger('error', err, task.data);\n                }\n            }\n\n            if (numRunning <= (q.concurrency - q.buffer) ) {\n                trigger('unsaturated');\n            }\n\n            if (q.idle()) {\n                trigger('drain');\n            }\n            q.process();\n        };\n    }\n\n    function _maybeDrain(data) {\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            setImmediate$1(() => trigger('drain'));\n            return true\n        }\n        return false\n    }\n\n    const eventMethod = (name) => (handler) => {\n        if (!handler) {\n            return new Promise((resolve, reject) => {\n                once(name, (err, data) => {\n                    if (err) return reject(err)\n                    resolve(data);\n                });\n            })\n        }\n        off(name);\n        on(name, handler);\n\n    };\n\n    var isProcessing = false;\n    var q = {\n        _tasks: new DLL(),\n        *[Symbol.iterator] () {\n            yield* q._tasks[Symbol.iterator]();\n        },\n        concurrency,\n        payload,\n        buffer: concurrency / 4,\n        started: false,\n        paused: false,\n        push (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, false, callback))\n            }\n            return _insert(data, false, false, callback);\n        },\n        pushAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, false, true, callback))\n            }\n            return _insert(data, false, true, callback);\n        },\n        kill () {\n            off();\n            q._tasks.empty();\n        },\n        unshift (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, false, callback))\n            }\n            return _insert(data, true, false, callback);\n        },\n        unshiftAsync (data, callback) {\n            if (Array.isArray(data)) {\n                if (_maybeDrain(data)) return\n                return data.map(datum => _insert(datum, true, true, callback))\n            }\n            return _insert(data, true, true, callback);\n        },\n        remove (testFn) {\n            q._tasks.remove(testFn);\n        },\n        process () {\n            // Avoid trying to start too many processing operations. This can occur\n            // when callbacks resolve synchronously (#1267).\n            if (isProcessing) {\n                return;\n            }\n            isProcessing = true;\n            while(!q.paused && numRunning < q.concurrency && q._tasks.length){\n                var tasks = [], data = [];\n                var l = q._tasks.length;\n                if (q.payload) l = Math.min(l, q.payload);\n                for (var i = 0; i < l; i++) {\n                    var node = q._tasks.shift();\n                    tasks.push(node);\n                    workersList.push(node);\n                    data.push(node.data);\n                }\n\n                numRunning += 1;\n\n                if (q._tasks.length === 0) {\n                    trigger('empty');\n                }\n\n                if (numRunning === q.concurrency) {\n                    trigger('saturated');\n                }\n\n                var cb = onlyOnce(_createCB(tasks));\n                _worker(data, cb);\n            }\n            isProcessing = false;\n        },\n        length () {\n            return q._tasks.length;\n        },\n        running () {\n            return numRunning;\n        },\n        workersList () {\n            return workersList;\n        },\n        idle() {\n            return q._tasks.length + numRunning === 0;\n        },\n        pause () {\n            q.paused = true;\n        },\n        resume () {\n            if (q.paused === false) { return; }\n            q.paused = false;\n            setImmediate$1(q.process);\n        }\n    };\n    // define these as fixed properties, so people get useful errors when updating\n    Object.defineProperties(q, {\n        saturated: {\n            writable: false,\n            value: eventMethod('saturated')\n        },\n        unsaturated: {\n            writable: false,\n            value: eventMethod('unsaturated')\n        },\n        empty: {\n            writable: false,\n            value: eventMethod('empty')\n        },\n        drain: {\n            writable: false,\n            value: eventMethod('drain')\n        },\n        error: {\n            writable: false,\n            value: eventMethod('error')\n        },\n    });\n    return q;\n}\n\n/**\n * Creates a `cargo` object with the specified payload. Tasks added to the\n * cargo will be processed altogether (up to the `payload` limit). If the\n * `worker` is in progress, the task is queued until it becomes available. Once\n * the `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, cargo passes an array of tasks to a single worker, repeating\n * when the worker is finished.\n *\n * @name cargo\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargo object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargo and inner queue.\n * @example\n *\n * // create a cargo object with payload 2\n * var cargo = async.cargo(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2);\n *\n * // add some items\n * cargo.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargo.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * await cargo.push({name: 'baz'});\n * console.log('finished processing baz');\n */\nfunction cargo(worker, payload) {\n    return queue(worker, 1, payload);\n}\n\n/**\n * Creates a `cargoQueue` object with the specified payload. Tasks added to the\n * cargoQueue will be processed together (up to the `payload` limit) in `concurrency` parallel workers.\n * If the all `workers` are in progress, the task is queued until one becomes available. Once\n * a `worker` has completed some tasks, each callback of those tasks is\n * called. Check out [these](https://camo.githubusercontent.com/6bbd36f4cf5b35a0f11a96dcd2e97711ffc2fb37/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130382f62626330636662302d356632392d313165322d393734662d3333393763363464633835382e676966) [animations](https://camo.githubusercontent.com/f4810e00e1c5f5f8addbe3e9f49064fd5d102699/68747470733a2f2f662e636c6f75642e6769746875622e636f6d2f6173736574732f313637363837312f36383130312f38346339323036362d356632392d313165322d383134662d3964336430323431336266642e676966)\n * for how `cargo` and `queue` work.\n *\n * While [`queue`]{@link module:ControlFlow.queue} passes only one task to one of a group of workers\n * at a time, and [`cargo`]{@link module:ControlFlow.cargo} passes an array of tasks to a single worker,\n * the cargoQueue passes an array of tasks to multiple parallel workers.\n *\n * @name cargoQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @see [async.cargo]{@link module:ControlFLow.cargo}\n * @category Control Flow\n * @param {AsyncFunction} worker - An asynchronous function for processing an array\n * of queued tasks. Invoked with `(tasks, callback)`.\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @param {number} [payload=Infinity] - An optional `integer` for determining\n * how many tasks should be processed per round; if omitted, the default is\n * unlimited.\n * @returns {module:ControlFlow.QueueObject} A cargoQueue object to manage the tasks. Callbacks can\n * attached as certain properties to listen for specific events during the\n * lifecycle of the cargoQueue and inner queue.\n * @example\n *\n * // create a cargoQueue object with payload 2 and concurrency 2\n * var cargoQueue = async.cargoQueue(function(tasks, callback) {\n *     for (var i=0; i<tasks.length; i++) {\n *         console.log('hello ' + tasks[i].name);\n *     }\n *     callback();\n * }, 2, 2);\n *\n * // add some items\n * cargoQueue.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * cargoQueue.push({name: 'bar'}, function(err) {\n *     console.log('finished processing bar');\n * });\n * cargoQueue.push({name: 'baz'}, function(err) {\n *     console.log('finished processing baz');\n * });\n * cargoQueue.push({name: 'boo'}, function(err) {\n *     console.log('finished processing boo');\n * });\n */\nfunction cargo$1(worker, concurrency, payload) {\n    return queue(worker, concurrency, payload);\n}\n\n/**\n * Reduces `coll` into a single value using an async `iteratee` to return each\n * successive step. `memo` is the initial state of the reduction. This function\n * only operates in series.\n *\n * For performance reasons, it may make sense to split a call to this function\n * into a parallel map, and then use the normal `Array.prototype.reduce` on the\n * results. This function is for situations where each step in the reduction\n * needs to be async; if you can get the data before reducing it, then it's\n * probably a good idea to do so.\n *\n * @name reduce\n * @static\n * @memberOf module:Collections\n * @method\n * @alias inject\n * @alias foldl\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file3.txt', 'file4.txt'];\n *\n * // asynchronous function that computes the file size in bytes\n * // file size is added to the memoized value, then returned\n * function getFileSizeInBytes(memo, file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, memo + stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.reduce(fileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.reduce(fileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // 6000\n *     // which is the sum of the file sizes of the three files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.reduce(withMissingFileList, 0, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.reduce(fileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *         // 6000\n *         // which is the sum of the file sizes of the three files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.reduce(withMissingFileList, 0, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction reduce(coll, memo, iteratee, callback) {\n    callback = once(callback);\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfSeries$1(coll, (x, i, iterCb) => {\n        _iteratee(memo, x, (err, v) => {\n            memo = v;\n            iterCb(err);\n        });\n    }, err => callback(err, memo));\n}\nvar reduce$1 = awaitify(reduce, 4);\n\n/**\n * Version of the compose function that is more natural to read. Each function\n * consumes the return value of the previous function. It is the equivalent of\n * [compose]{@link module:ControlFlow.compose} with the arguments reversed.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name seq\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.compose]{@link module:ControlFlow.compose}\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} a function that composes the `functions` in order\n * @example\n *\n * // Requires lodash (or underscore), express3 and dresende's orm2.\n * // Part of an app, that fetches cats of the logged user.\n * // This example uses `seq` function to avoid overnesting and error\n * // handling clutter.\n * app.get('/cats', function(request, response) {\n *     var User = request.models.User;\n *     async.seq(\n *         User.get.bind(User),  // 'User.get' has signature (id, callback(err, data))\n *         function(user, fn) {\n *             user.getCats(fn);      // 'getCats' has signature (callback(err, data))\n *         }\n *     )(req.session.user_id, function (err, cats) {\n *         if (err) {\n *             console.error(err);\n *             response.json({ status: 'error', message: err.message });\n *         } else {\n *             response.json({ status: 'ok', message: 'Cats found', data: cats });\n *         }\n *     });\n * });\n */\nfunction seq(...functions) {\n    var _functions = functions.map(wrapAsync);\n    return function (...args) {\n        var that = this;\n\n        var cb = args[args.length - 1];\n        if (typeof cb == 'function') {\n            args.pop();\n        } else {\n            cb = promiseCallback();\n        }\n\n        reduce$1(_functions, args, (newargs, fn, iterCb) => {\n            fn.apply(that, newargs.concat((err, ...nextargs) => {\n                iterCb(err, nextargs);\n            }));\n        },\n        (err, results) => cb(err, ...results));\n\n        return cb[PROMISE_SYMBOL]\n    };\n}\n\n/**\n * Creates a function which is a composition of the passed asynchronous\n * functions. Each function consumes the return value of the function that\n * follows. Composing functions `f()`, `g()`, and `h()` would produce the result\n * of `f(g(h()))`, only this version uses callbacks to obtain the return values.\n *\n * If the last argument to the composed function is not a function, a promise\n * is returned when you call it.\n *\n * Each function is executed with the `this` binding of the composed function.\n *\n * @name compose\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {...AsyncFunction} functions - the asynchronous functions to compose\n * @returns {Function} an asynchronous function that is the composed\n * asynchronous `functions`\n * @example\n *\n * function add1(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n + 1);\n *     }, 10);\n * }\n *\n * function mul3(n, callback) {\n *     setTimeout(function () {\n *         callback(null, n * 3);\n *     }, 10);\n * }\n *\n * var add1mul3 = async.compose(mul3, add1);\n * add1mul3(4, function (err, result) {\n *     // result now equals 15\n * });\n */\nfunction compose(...args) {\n    return seq(...args.reverse());\n}\n\n/**\n * The same as [`map`]{@link module:Collections.map} but runs a maximum of `limit` async operations at a time.\n *\n * @name mapLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapLimit (coll, limit, iteratee, callback) {\n    return _asyncMap(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar mapLimit$1 = awaitify(mapLimit, 4);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs a maximum of `limit` async operations at a time.\n *\n * @name concatLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapLimit\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, ...args) => {\n            if (err) return iterCb(err);\n            return iterCb(err, args);\n        });\n    }, (err, mapResults) => {\n        var result = [];\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                result = result.concat(...mapResults[i]);\n            }\n        }\n\n        return callback(err, result);\n    });\n}\nvar concatLimit$1 = awaitify(concatLimit, 4);\n\n/**\n * Applies `iteratee` to each item in `coll`, concatenating the results. Returns\n * the concatenated list. The `iteratee`s are called in parallel, and the\n * results are concatenated as they return. The results array will be returned in\n * the original order of `coll` passed to the `iteratee` function.\n *\n * @name concat\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @alias flatMap\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`,\n * which should use an array as its result. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * let directoryList = ['dir1','dir2','dir3'];\n * let withMissingDirectoryList = ['dir1','dir2','dir3', 'dir4'];\n *\n * // Using callbacks\n * async.concat(directoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *    }\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir, function(err, results) {\n *    if (err) {\n *        console.log(err);\n *        // [ Error: ENOENT: no such file or directory ]\n *        // since dir4 does not exist\n *    } else {\n *        console.log(results);\n *    }\n * });\n *\n * // Using Promises\n * async.concat(directoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n *     // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n * }).catch(err => {\n *      console.log(err);\n * });\n *\n * // Error Handling\n * async.concat(withMissingDirectoryList, fs.readdir)\n * .then(results => {\n *     console.log(results);\n * }).catch(err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4 does not exist\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.concat(directoryList, fs.readdir);\n *         console.log(results);\n *         // [ 'file1.txt', 'file2.txt', 'file3.txt', 'file4.txt', file5.txt ]\n *     } catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let results = await async.concat(withMissingDirectoryList, fs.readdir);\n *         console.log(results);\n *     } catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4 does not exist\n *     }\n * }\n *\n */\nfunction concat(coll, iteratee, callback) {\n    return concatLimit$1(coll, Infinity, iteratee, callback)\n}\nvar concat$1 = awaitify(concat, 3);\n\n/**\n * The same as [`concat`]{@link module:Collections.concat} but runs only a single async operation at a time.\n *\n * @name concatSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.concat]{@link module:Collections.concat}\n * @category Collection\n * @alias flatMapSeries\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each item in `coll`.\n * The iteratee should complete with an array an array of results.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is an array\n * containing the concatenated results of the `iteratee` function. Invoked with\n * (err, results).\n * @returns A Promise, if no callback is passed\n */\nfunction concatSeries(coll, iteratee, callback) {\n    return concatLimit$1(coll, 1, iteratee, callback)\n}\nvar concatSeries$1 = awaitify(concatSeries, 3);\n\n/**\n * Returns a function that when called, calls-back with the values provided.\n * Useful as the first function in a [`waterfall`]{@link module:ControlFlow.waterfall}, or for plugging values in to\n * [`auto`]{@link module:ControlFlow.auto}.\n *\n * @name constant\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {...*} arguments... - Any number of arguments to automatically invoke\n * callback with.\n * @returns {AsyncFunction} Returns a function that when invoked, automatically\n * invokes the callback with the previous given arguments.\n * @example\n *\n * async.waterfall([\n *     async.constant(42),\n *     function (value, next) {\n *         // value === 42\n *     },\n *     //...\n * ], callback);\n *\n * async.waterfall([\n *     async.constant(filename, \"utf8\"),\n *     fs.readFile,\n *     function (fileData, next) {\n *         //...\n *     }\n *     //...\n * ], callback);\n *\n * async.auto({\n *     hostname: async.constant(\"https://server.net/\"),\n *     port: findFreePort,\n *     launchServer: [\"hostname\", \"port\", function (options, cb) {\n *         startServer(options, cb);\n *     }],\n *     //...\n * }, callback);\n */\nfunction constant(...args) {\n    return function (...ignoredArgs/*, callback*/) {\n        var callback = ignoredArgs.pop();\n        return callback(null, ...args);\n    };\n}\n\nfunction _createTester(check, getResult) {\n    return (eachfn, arr, _iteratee, cb) => {\n        var testPassed = false;\n        var testResult;\n        const iteratee = wrapAsync(_iteratee);\n        eachfn(arr, (value, _, callback) => {\n            iteratee(value, (err, result) => {\n                if (err || err === false) return callback(err);\n\n                if (check(result) && !testResult) {\n                    testPassed = true;\n                    testResult = getResult(true, value);\n                    return callback(null, breakLoop);\n                }\n                callback();\n            });\n        }, err => {\n            if (err) return cb(err);\n            cb(null, testPassed ? testResult : getResult(false));\n        });\n    };\n}\n\n/**\n * Returns the first value in `coll` that passes an async truth test. The\n * `iteratee` is applied in parallel, meaning the first iteratee to return\n * `true` will fire the detect `callback` with that result. That means the\n * result might not be the first item in the original `coll` (in terms of order)\n * that passes the test.\n\n * If order within the original `coll` is important, then look at\n * [`detectSeries`]{@link module:Collections.detectSeries}.\n *\n * @name detect\n * @static\n * @memberOf module:Collections\n * @method\n * @alias find\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns A Promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // dir1/file1.txt\n *        // result now equals the first file in the list that exists\n *    }\n *);\n *\n * // Using Promises\n * async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists)\n * .then(result => {\n *     console.log(result);\n *     // dir1/file1.txt\n *     // result now equals the first file in the list that exists\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.detect(['file3.txt','file2.txt','dir1/file1.txt'], fileExists);\n *         console.log(result);\n *         // dir1/file1.txt\n *         // result now equals the file in the list that exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction detect(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOf$1, coll, iteratee, callback)\n}\nvar detect$1 = awaitify(detect, 3);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name detectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findLimit\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns a Promise if no callback is passed\n */\nfunction detectLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar detectLimit$1 = awaitify(detectLimit, 4);\n\n/**\n * The same as [`detect`]{@link module:Collections.detect} but runs only a single async operation at a time.\n *\n * @name detectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.detect]{@link module:Collections.detect}\n * @alias findSeries\n * @category Collections\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A truth test to apply to each item in `coll`.\n * The iteratee must complete with a boolean value as its result.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the `iteratee` functions have finished.\n * Result will be the first item in the array that passes the truth test\n * (iteratee) or the value `undefined` if none passed. Invoked with\n * (err, result).\n * @returns a Promise if no callback is passed\n */\nfunction detectSeries(coll, iteratee, callback) {\n    return _createTester(bool => bool, (res, item) => item)(eachOfLimit(1), coll, iteratee, callback)\n}\n\nvar detectSeries$1 = awaitify(detectSeries, 3);\n\nfunction consoleFunc(name) {\n    return (fn, ...args) => wrapAsync(fn)(...args, (err, ...resultArgs) => {\n        /* istanbul ignore else */\n        if (typeof console === 'object') {\n            /* istanbul ignore else */\n            if (err) {\n                /* istanbul ignore else */\n                if (console.error) {\n                    console.error(err);\n                }\n            } else if (console[name]) { /* istanbul ignore else */\n                resultArgs.forEach(x => console[name](x));\n            }\n        }\n    })\n}\n\n/**\n * Logs the result of an [`async` function]{@link AsyncFunction} to the\n * `console` using `console.dir` to display the properties of the resulting object.\n * Only works in Node.js or in browsers that support `console.dir` and\n * `console.error` (such as FF and Chrome).\n * If multiple arguments are returned from the async function,\n * `console.dir` is called on each argument in order.\n *\n * @name dir\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, {hello: name});\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.dir(hello, 'world');\n * {hello: 'world'}\n */\nvar dir = consoleFunc('dir');\n\n/**\n * The post-check version of [`whilst`]{@link module:ControlFlow.whilst}. To reflect the difference in\n * the order of operations, the arguments `test` and `iteratee` are switched.\n *\n * `doWhilst` is to `whilst` as `do while` is to `while` in plain JavaScript.\n *\n * @name doWhilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - A function which is called each time `test`\n * passes. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`.\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped.\n * `callback` will be passed an error and any arguments passed to the final\n * `iteratee`'s callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doWhilst(iteratee, test, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results;\n\n    function next(err, ...args) {\n        if (err) return callback(err);\n        if (err === false) return;\n        results = args;\n        _test(...args, check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return check(null, true);\n}\n\nvar doWhilst$1 = awaitify(doWhilst, 3);\n\n/**\n * Like ['doWhilst']{@link module:ControlFlow.doWhilst}, except the `test` is inverted. Note the\n * argument ordering differs from `until`.\n *\n * @name doUntil\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.doWhilst]{@link module:ControlFlow.doWhilst}\n * @category Control Flow\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {AsyncFunction} test - asynchronous truth test to perform after each\n * execution of `iteratee`. Invoked with (...args, callback), where `...args` are the\n * non-error args from the previous callback of `iteratee`\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction doUntil(iteratee, test, callback) {\n    const _test = wrapAsync(test);\n    return doWhilst$1(iteratee, (...args) => {\n        const cb = args.pop();\n        _test(...args, (err, truth) => cb (err, !truth));\n    }, callback);\n}\n\nfunction _withoutIndex(iteratee) {\n    return (value, index, callback) => iteratee(value, callback);\n}\n\n/**\n * Applies the function `iteratee` to each item in `coll`, in parallel.\n * The `iteratee` is called with an item from the list, and a callback for when\n * it has finished. If the `iteratee` passes an error to its `callback`, the\n * main `callback` (for the `each` function) is immediately called with the\n * error.\n *\n * Note, that since this function applies `iteratee` to each item in parallel,\n * there is no guarantee that the iteratee functions will complete in order.\n *\n * @name each\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEach\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to\n * each item in `coll`. Invoked with (item, callback).\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOf`.\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = [ 'dir1/file2.txt', 'dir2/file3.txt', 'dir/file5.txt'];\n * const withMissingFileList = ['dir1/file1.txt', 'dir4/file2.txt'];\n *\n * // asynchronous function that deletes a file\n * const deleteFile = function(file, callback) {\n *     fs.unlink(file, callback);\n * };\n *\n * // Using callbacks\n * async.each(fileList, deleteFile, function(err) {\n *     if( err ) {\n *         console.log(err);\n *     } else {\n *         console.log('All files have been deleted successfully');\n *     }\n * });\n *\n * // Error Handling\n * async.each(withMissingFileList, deleteFile, function(err){\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using Promises\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.each(fileList, deleteFile)\n * .then( () => {\n *     console.log('All files have been deleted successfully');\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n *     // since dir4/file2.txt does not exist\n *     // dir1/file1.txt could have been deleted\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         await async.each(files, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         await async.each(withMissingFileList, deleteFile);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *         // since dir4/file2.txt does not exist\n *         // dir1/file1.txt could have been deleted\n *     }\n * }\n *\n */\nfunction eachLimit(coll, iteratee, callback) {\n    return eachOf$1(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\n\nvar each = awaitify(eachLimit, 3);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs a maximum of `limit` async operations at a time.\n *\n * @name eachLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfLimit`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachLimit$1(coll, limit, iteratee, callback) {\n    return eachOfLimit(limit)(coll, _withoutIndex(wrapAsync(iteratee)), callback);\n}\nvar eachLimit$2 = awaitify(eachLimit$1, 4);\n\n/**\n * The same as [`each`]{@link module:Collections.each} but runs only a single async operation at a time.\n *\n * Note, that unlike [`each`]{@link module:Collections.each}, this function applies iteratee to each item\n * in series and therefore the iteratee functions will complete in order.\n\n * @name eachSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.each]{@link module:Collections.each}\n * @alias forEachSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`.\n * The array index is not passed to the iteratee.\n * If you need the index, use `eachOfSeries`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @returns {Promise} a promise, if a callback is omitted\n */\nfunction eachSeries(coll, iteratee, callback) {\n    return eachLimit$2(coll, 1, iteratee, callback)\n}\nvar eachSeries$1 = awaitify(eachSeries, 3);\n\n/**\n * Wrap an async function and ensure it calls its callback on a later tick of\n * the event loop.  If the function already calls its callback on a next tick,\n * no extra deferral is added. This is useful for preventing stack overflows\n * (`RangeError: Maximum call stack size exceeded`) and generally keeping\n * [Zalgo](http://blog.izs.me/post/59142742143/designing-apis-for-asynchrony)\n * contained. ES2017 `async` functions are returned as-is -- they are immune\n * to Zalgo's corrupting influences, as they always resolve on a later tick.\n *\n * @name ensureAsync\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - an async function, one that expects a node-style\n * callback as its last argument.\n * @returns {AsyncFunction} Returns a wrapped function with the exact same call\n * signature as the function passed in.\n * @example\n *\n * function sometimesAsync(arg, callback) {\n *     if (cache[arg]) {\n *         return callback(null, cache[arg]); // this would be synchronous!!\n *     } else {\n *         doSomeIO(arg, callback); // this IO would be asynchronous\n *     }\n * }\n *\n * // this has a risk of stack overflows if many results are cached in a row\n * async.mapSeries(args, sometimesAsync, done);\n *\n * // this will defer sometimesAsync's callback if necessary,\n * // preventing stack overflows\n * async.mapSeries(args, async.ensureAsync(sometimesAsync), done);\n */\nfunction ensureAsync(fn) {\n    if (isAsync(fn)) return fn;\n    return function (...args/*, callback*/) {\n        var callback = args.pop();\n        var sync = true;\n        args.push((...innerArgs) => {\n            if (sync) {\n                setImmediate$1(() => callback(...innerArgs));\n            } else {\n                callback(...innerArgs);\n            }\n        });\n        fn.apply(this, args);\n        sync = false;\n    };\n}\n\n/**\n * Returns `true` if every element in `coll` satisfies an async test. If any\n * iteratee call returns `false`, the main `callback` is immediately called.\n *\n * @name every\n * @static\n * @memberOf module:Collections\n * @method\n * @alias all\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file5.txt'];\n * const withMissingFileList = ['file1.txt','file2.txt','file4.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.every(fileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * });\n *\n * async.every(withMissingFileList, fileExists, function(err, result) {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * });\n *\n * // Using Promises\n * async.every(fileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.every(withMissingFileList, fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since NOT every file exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.every(fileList, fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.every(withMissingFileList, fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since NOT every file exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction every(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOf$1, coll, iteratee, callback)\n}\nvar every$1 = awaitify(every, 3);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs a maximum of `limit` async operations at a time.\n *\n * @name everyLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in parallel.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everyLimit(coll, limit, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar everyLimit$1 = awaitify(everyLimit, 4);\n\n/**\n * The same as [`every`]{@link module:Collections.every} but runs only a single async operation at a time.\n *\n * @name everySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.every]{@link module:Collections.every}\n * @alias allSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collection in series.\n * The iteratee must complete with a boolean result value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result will be either `true` or `false`\n * depending on the values of the async tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction everySeries(coll, iteratee, callback) {\n    return _createTester(bool => !bool, res => !res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar everySeries$1 = awaitify(everySeries, 3);\n\nfunction filterArray(eachfn, arr, iteratee, callback) {\n    var truthValues = new Array(arr.length);\n    eachfn(arr, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            truthValues[index] = !!v;\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        var results = [];\n        for (var i = 0; i < arr.length; i++) {\n            if (truthValues[i]) results.push(arr[i]);\n        }\n        callback(null, results);\n    });\n}\n\nfunction filterGeneric(eachfn, coll, iteratee, callback) {\n    var results = [];\n    eachfn(coll, (x, index, iterCb) => {\n        iteratee(x, (err, v) => {\n            if (err) return iterCb(err);\n            if (v) {\n                results.push({index, value: x});\n            }\n            iterCb(err);\n        });\n    }, err => {\n        if (err) return callback(err);\n        callback(null, results\n            .sort((a, b) => a.index - b.index)\n            .map(v => v.value));\n    });\n}\n\nfunction _filter(eachfn, coll, iteratee, callback) {\n    var filter = isArrayLike(coll) ? filterArray : filterGeneric;\n    return filter(eachfn, coll, wrapAsync(iteratee), callback);\n}\n\n/**\n * Returns a new array of all the values in `coll` which pass an async truth\n * test. This operation is performed in parallel, but the results array will be\n * in the same order as the original.\n *\n * @name filter\n * @static\n * @memberOf module:Collections\n * @method\n * @alias select\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const files = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.filter(files, fileExists, function(err, results) {\n *    if(err) {\n *        console.log(err);\n *    } else {\n *        console.log(results);\n *        // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *        // results is now an array of the existing files\n *    }\n * });\n *\n * // Using Promises\n * async.filter(files, fileExists)\n * .then(results => {\n *     console.log(results);\n *     // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *     // results is now an array of the existing files\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.filter(files, fileExists);\n *         console.log(results);\n *         // [ 'dir1/file1.txt', 'dir2/file3.txt' ]\n *         // results is now an array of the existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction filter (coll, iteratee, callback) {\n    return _filter(eachOf$1, coll, iteratee, callback)\n}\nvar filter$1 = awaitify(filter, 3);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name filterLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterLimit (coll, limit, iteratee, callback) {\n    return _filter(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar filterLimit$1 = awaitify(filterLimit, 4);\n\n/**\n * The same as [`filter`]{@link module:Collections.filter} but runs only a single async operation at a time.\n *\n * @name filterSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @alias selectSeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - A truth test to apply to each item in `coll`.\n * The `iteratee` is passed a `callback(err, truthValue)`, which must be called\n * with a boolean argument once it has completed. Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results)\n * @returns {Promise} a promise, if no callback provided\n */\nfunction filterSeries (coll, iteratee, callback) {\n    return _filter(eachOfSeries$1, coll, iteratee, callback)\n}\nvar filterSeries$1 = awaitify(filterSeries, 3);\n\n/**\n * Calls the asynchronous function `fn` with a callback parameter that allows it\n * to call itself again, in series, indefinitely.\n\n * If an error is passed to the callback then `errback` is called with the\n * error, and execution stops, otherwise it will never be called.\n *\n * @name forever\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} fn - an async function to call repeatedly.\n * Invoked with (next).\n * @param {Function} [errback] - when `fn` passes an error to it's callback,\n * this function will be called, and execution stops. Invoked with (err).\n * @returns {Promise} a promise that rejects if an error occurs and an errback\n * is not passed\n * @example\n *\n * async.forever(\n *     function(next) {\n *         // next is suitable for passing to things that need a callback(err [, whatever]);\n *         // it will result in this function being called again.\n *     },\n *     function(err) {\n *         // if next is called with a value in its first parameter, it will appear\n *         // in here as 'err', and execution will stop.\n *     }\n * );\n */\nfunction forever(fn, errback) {\n    var done = onlyOnce(errback);\n    var task = wrapAsync(ensureAsync(fn));\n\n    function next(err) {\n        if (err) return done(err);\n        if (err === false) return;\n        task(next);\n    }\n    return next();\n}\nvar forever$1 = awaitify(forever, 2);\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs a maximum of `limit` async operations at a time.\n *\n * @name groupByLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupByLimit(coll, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(coll, limit, (val, iterCb) => {\n        _iteratee(val, (err, key) => {\n            if (err) return iterCb(err);\n            return iterCb(err, {key, val});\n        });\n    }, (err, mapResults) => {\n        var result = {};\n        // from MDN, handle object having an `hasOwnProperty` prop\n        var {hasOwnProperty} = Object.prototype;\n\n        for (var i = 0; i < mapResults.length; i++) {\n            if (mapResults[i]) {\n                var {key} = mapResults[i];\n                var {val} = mapResults[i];\n\n                if (hasOwnProperty.call(result, key)) {\n                    result[key].push(val);\n                } else {\n                    result[key] = [val];\n                }\n            }\n        }\n\n        return callback(err, result);\n    });\n}\n\nvar groupByLimit$1 = awaitify(groupByLimit, 4);\n\n/**\n * Returns a new object, where each value corresponds to an array of items, from\n * `coll`, that returned the corresponding key. That is, the keys of the object\n * correspond to the values passed to the `iteratee` callback.\n *\n * Note: Since this function applies the `iteratee` to each item in parallel,\n * there is no guarantee that the `iteratee` functions will complete in order.\n * However, the values for each key in the `result` will be in the same order as\n * the original `coll`. For Objects, the values will roughly be in the order of\n * the original Objects' keys (but this can vary across JavaScript engines).\n *\n * @name groupBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whoses\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * const files = ['dir1/file1.txt','dir2','dir4']\n *\n * // asynchronous function that detects file type as none, file, or directory\n * function detectFile(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(null, 'none');\n *         }\n *         callback(null, stat.isDirectory() ? 'directory' : 'file');\n *     });\n * }\n *\n * //Using callbacks\n * async.groupBy(files, detectFile, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *\t       console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n * });\n *\n * // Using Promises\n * async.groupBy(files, detectFile)\n * .then( result => {\n *     console.log(result);\n *     // {\n *     //     file: [ 'dir1/file1.txt' ],\n *     //     none: [ 'dir4' ],\n *     //     directory: [ 'dir2']\n *     // }\n *     // result is object containing the files grouped by type\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.groupBy(files, detectFile);\n *         console.log(result);\n *         // {\n *         //     file: [ 'dir1/file1.txt' ],\n *         //     none: [ 'dir4' ],\n *         //     directory: [ 'dir2']\n *         // }\n *         // result is object containing the files grouped by type\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction groupBy (coll, iteratee, callback) {\n    return groupByLimit$1(coll, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`groupBy`]{@link module:Collections.groupBy} but runs only a single async operation at a time.\n *\n * @name groupBySeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.groupBy]{@link module:Collections.groupBy}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a `key` to group the value under.\n * Invoked with (value, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Result is an `Object` whose\n * properties are arrays of values which returned the corresponding key.\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction groupBySeries (coll, iteratee, callback) {\n    return groupByLimit$1(coll, 1, iteratee, callback)\n}\n\n/**\n * Logs the result of an `async` function to the `console`. Only works in\n * Node.js or in browsers that support `console.log` and `console.error` (such\n * as FF and Chrome). If multiple arguments are returned from the async\n * function, `console.log` is called on each argument in order.\n *\n * @name log\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} function - The function you want to eventually apply\n * all arguments to.\n * @param {...*} arguments... - Any number of arguments to apply to the function.\n * @example\n *\n * // in a module\n * var hello = function(name, callback) {\n *     setTimeout(function() {\n *         callback(null, 'hello ' + name);\n *     }, 1000);\n * };\n *\n * // in the node repl\n * node> async.log(hello, 'world');\n * 'hello world'\n */\nvar log = consoleFunc('log');\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name mapValuesLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesLimit(obj, limit, iteratee, callback) {\n    callback = once(callback);\n    var newObj = {};\n    var _iteratee = wrapAsync(iteratee);\n    return eachOfLimit(limit)(obj, (val, key, next) => {\n        _iteratee(val, key, (err, result) => {\n            if (err) return next(err);\n            newObj[key] = result;\n            next(err);\n        });\n    }, err => callback(err, newObj));\n}\n\nvar mapValuesLimit$1 = awaitify(mapValuesLimit, 4);\n\n/**\n * A relative of [`map`]{@link module:Collections.map}, designed for use with objects.\n *\n * Produces a new Object by mapping each value of `obj` through the `iteratee`\n * function. The `iteratee` is called each `value` and `key` from `obj` and a\n * callback for when it has finished processing. Each of these callbacks takes\n * two arguments: an `error`, and the transformed item from `obj`. If `iteratee`\n * passes an error to its callback, the main `callback` (for the `mapValues`\n * function) is immediately called with the error.\n *\n * Note, the order of the keys in the result is not guaranteed.  The keys will\n * be roughly in the order they complete, (but this is very engine-specific)\n *\n * @name mapValues\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n * // file4.txt does not exist\n *\n * const fileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file3.txt'\n * };\n *\n * const withMissingFileMap = {\n *     f1: 'file1.txt',\n *     f2: 'file2.txt',\n *     f3: 'file4.txt'\n * };\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, key, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.mapValues(fileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n * });\n *\n * // Error handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes, function(err, result) {\n *     if (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     } else {\n *         console.log(result);\n *     }\n * });\n *\n * // Using Promises\n * async.mapValues(fileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n *     // result is now a map of file size in bytes for each file, e.g.\n *     // {\n *     //     f1: 1000,\n *     //     f2: 2000,\n *     //     f3: 3000\n *     // }\n * }).catch (err => {\n *     console.log(err);\n * });\n *\n * // Error Handling\n * async.mapValues(withMissingFileMap, getFileSizeInBytes)\n * .then( result => {\n *     console.log(result);\n * }).catch (err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.mapValues(fileMap, getFileSizeInBytes);\n *         console.log(result);\n *         // result is now a map of file size in bytes for each file, e.g.\n *         // {\n *         //     f1: 1000,\n *         //     f2: 2000,\n *         //     f3: 3000\n *         // }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // Error Handling\n * async () => {\n *     try {\n *         let result = await async.mapValues(withMissingFileMap, getFileSizeInBytes);\n *         console.log(result);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction mapValues(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [`mapValues`]{@link module:Collections.mapValues} but runs only a single async operation at a time.\n *\n * @name mapValuesSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.mapValues]{@link module:Collections.mapValues}\n * @category Collection\n * @param {Object} obj - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each value and key\n * in `coll`.\n * The iteratee should complete with the transformed value as its result.\n * Invoked with (value, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. `result` is a new object consisting\n * of each key from `obj`, with each transformed value on the right-hand side.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction mapValuesSeries(obj, iteratee, callback) {\n    return mapValuesLimit$1(obj, 1, iteratee, callback)\n}\n\n/**\n * Caches the results of an async function. When creating a hash to store\n * function results against, the callback is omitted from the hash and an\n * optional hash function can be used.\n *\n * **Note: if the async function errs, the result will not be cached and\n * subsequent calls will call the wrapped function.**\n *\n * If no hash function is specified, the first argument is used as a hash key,\n * which may work reasonably if it is a string or a data type that converts to a\n * distinct string. Note that objects and arrays will not behave reasonably.\n * Neither will cases where the other arguments are significant. In such cases,\n * specify your own hash function.\n *\n * The cache of results is exposed as the `memo` property of the function\n * returned by `memoize`.\n *\n * @name memoize\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function to proxy and cache results from.\n * @param {Function} hasher - An optional function for generating a custom hash\n * for storing results. It has all the arguments applied to it apart from the\n * callback, and must be synchronous.\n * @returns {AsyncFunction} a memoized version of `fn`\n * @example\n *\n * var slow_fn = function(name, callback) {\n *     // do something\n *     callback(null, result);\n * };\n * var fn = async.memoize(slow_fn);\n *\n * // fn can now be used as if it were slow_fn\n * fn('some name', function() {\n *     // callback\n * });\n */\nfunction memoize(fn, hasher = v => v) {\n    var memo = Object.create(null);\n    var queues = Object.create(null);\n    var _fn = wrapAsync(fn);\n    var memoized = initialParams((args, callback) => {\n        var key = hasher(...args);\n        if (key in memo) {\n            setImmediate$1(() => callback(null, ...memo[key]));\n        } else if (key in queues) {\n            queues[key].push(callback);\n        } else {\n            queues[key] = [callback];\n            _fn(...args, (err, ...resultArgs) => {\n                // #1465 don't memoize if an error occurred\n                if (!err) {\n                    memo[key] = resultArgs;\n                }\n                var q = queues[key];\n                delete queues[key];\n                for (var i = 0, l = q.length; i < l; i++) {\n                    q[i](err, ...resultArgs);\n                }\n            });\n        }\n    });\n    memoized.memo = memo;\n    memoized.unmemoized = fn;\n    return memoized;\n}\n\n/* istanbul ignore file */\n\n/**\n * Calls `callback` on a later loop around the event loop. In Node.js this just\n * calls `process.nextTick`.  In the browser it will use `setImmediate` if\n * available, otherwise `setTimeout(callback, 0)`, which means other higher\n * priority events may precede the execution of `callback`.\n *\n * This is used internally for browser-compatibility purposes.\n *\n * @name nextTick\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.setImmediate]{@link module:Utils.setImmediate}\n * @category Util\n * @param {Function} callback - The function to call on a later loop around\n * the event loop. Invoked with (args...).\n * @param {...*} args... - any number of additional arguments to pass to the\n * callback on the next tick.\n * @example\n *\n * var call_order = [];\n * async.nextTick(function() {\n *     call_order.push('two');\n *     // call_order now equals ['one','two']\n * });\n * call_order.push('one');\n *\n * async.setImmediate(function (a, b, c) {\n *     // a, b, and c equal 1, 2, and 3\n * }, 1, 2, 3);\n */\nvar _defer$1;\n\nif (hasNextTick) {\n    _defer$1 = process.nextTick;\n} else if (hasSetImmediate) {\n    _defer$1 = setImmediate;\n} else {\n    _defer$1 = fallback;\n}\n\nvar nextTick = wrap(_defer$1);\n\nvar _parallel = awaitify((eachfn, tasks, callback) => {\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, (task, key, taskCb) => {\n        wrapAsync(task)((err, ...result) => {\n            if (result.length < 2) {\n                [result] = result;\n            }\n            results[key] = result;\n            taskCb(err);\n        });\n    }, err => callback(err, results));\n}, 3);\n\n/**\n * Run the `tasks` collection of functions in parallel, without waiting until\n * the previous function has completed. If any of the functions pass an error to\n * its callback, the main `callback` is immediately called with the value of the\n * error. Once the `tasks` have completed, the results are passed to the final\n * `callback` as an array.\n *\n * **Note:** `parallel` is about kicking-off I/O tasks in parallel, not about\n * parallel execution of code.  If your tasks do not use any timers or perform\n * any I/O, they will actually be executed in series.  Any synchronous setup\n * sections for each task will happen one after the other.  JavaScript remains\n * single-threaded.\n *\n * **Hint:** Use [`reflect`]{@link module:Utils.reflect} to continue the\n * execution of other tasks when a task fails.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n * results from {@link async.parallel}.\n *\n * @name parallel\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n *\n * //Using Callbacks\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.parallel([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two'] even though\n *     // the second function had a shorter timeout.\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.parallel({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.parallel([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two'] even though\n *         // the second function had a shorter timeout.\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction parallel(tasks, callback) {\n    return _parallel(eachOf$1, tasks, callback);\n}\n\n/**\n * The same as [`parallel`]{@link module:ControlFlow.parallel} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name parallelLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.parallel]{@link module:ControlFlow.parallel}\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection of\n * [async functions]{@link AsyncFunction} to run.\n * Each async function can complete with any number of optional `result` values.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed successfully. This function gets a results array\n * (or object) containing all the result arguments passed to the task callbacks.\n * Invoked with (err, results).\n * @returns {Promise} a promise, if a callback is not passed\n */\nfunction parallelLimit(tasks, limit, callback) {\n    return _parallel(eachOfLimit(limit), tasks, callback);\n}\n\n/**\n * A queue of tasks for the worker function to complete.\n * @typedef {Iterable} QueueObject\n * @memberOf module:ControlFlow\n * @property {Function} length - a function returning the number of items\n * waiting to be processed. Invoke with `queue.length()`.\n * @property {boolean} started - a boolean indicating whether or not any\n * items have been pushed and processed by the queue.\n * @property {Function} running - a function returning the number of items\n * currently being processed. Invoke with `queue.running()`.\n * @property {Function} workersList - a function returning the array of items\n * currently being processed. Invoke with `queue.workersList()`.\n * @property {Function} idle - a function returning false if there are items\n * waiting or being processed, or true if not. Invoke with `queue.idle()`.\n * @property {number} concurrency - an integer for determining how many `worker`\n * functions should be run in parallel. This property can be changed after a\n * `queue` is created to alter the concurrency on-the-fly.\n * @property {number} payload - an integer that specifies how many items are\n * passed to the worker function at a time. only applies if this is a\n * [cargo]{@link module:ControlFlow.cargo} object\n * @property {AsyncFunction} push - add a new task to the `queue`. Calls `callback`\n * once the `worker` has finished processing the task. Instead of a single task,\n * a `tasks` array can be submitted. The respective callback is used for every\n * task in the list. Invoke with `queue.push(task, [callback])`,\n * @property {AsyncFunction} unshift - add a new task to the front of the `queue`.\n * Invoke with `queue.unshift(task, [callback])`.\n * @property {AsyncFunction} pushAsync - the same as `q.push`, except this returns\n * a promise that rejects if an error occurs.\n * @property {AsyncFunction} unshiftAsync - the same as `q.unshift`, except this returns\n * a promise that rejects if an error occurs.\n * @property {Function} remove - remove items from the queue that match a test\n * function.  The test function will be passed an object with a `data` property,\n * and a `priority` property, if this is a\n * [priorityQueue]{@link module:ControlFlow.priorityQueue} object.\n * Invoked with `queue.remove(testFn)`, where `testFn` is of the form\n * `function ({data, priority}) {}` and returns a Boolean.\n * @property {Function} saturated - a function that sets a callback that is\n * called when the number of running workers hits the `concurrency` limit, and\n * further tasks will be queued.  If the callback is omitted, `q.saturated()`\n * returns a promise for the next occurrence.\n * @property {Function} unsaturated - a function that sets a callback that is\n * called when the number of running workers is less than the `concurrency` &\n * `buffer` limits, and further tasks will not be queued. If the callback is\n * omitted, `q.unsaturated()` returns a promise for the next occurrence.\n * @property {number} buffer - A minimum threshold buffer in order to say that\n * the `queue` is `unsaturated`.\n * @property {Function} empty - a function that sets a callback that is called\n * when the last item from the `queue` is given to a `worker`. If the callback\n * is omitted, `q.empty()` returns a promise for the next occurrence.\n * @property {Function} drain - a function that sets a callback that is called\n * when the last item from the `queue` has returned from the `worker`. If the\n * callback is omitted, `q.drain()` returns a promise for the next occurrence.\n * @property {Function} error - a function that sets a callback that is called\n * when a task errors. Has the signature `function(error, task)`. If the\n * callback is omitted, `error()` returns a promise that rejects on the next\n * error.\n * @property {boolean} paused - a boolean for determining whether the queue is\n * in a paused state.\n * @property {Function} pause - a function that pauses the processing of tasks\n * until `resume()` is called. Invoke with `queue.pause()`.\n * @property {Function} resume - a function that resumes the processing of\n * queued tasks when the queue is paused. Invoke with `queue.resume()`.\n * @property {Function} kill - a function that removes the `drain` callback and\n * empties remaining tasks from the queue forcing it to go idle. No more tasks\n * should be pushed to the queue after calling this function. Invoke with `queue.kill()`.\n *\n * @example\n * const q = async.queue(worker, 2)\n * q.push(item1)\n * q.push(item2)\n * q.push(item3)\n * // queues are iterable, spread into an array to inspect\n * const items = [...q] // [item1, item2, item3]\n * // or use for of\n * for (let item of q) {\n *     console.log(item)\n * }\n *\n * q.drain(() => {\n *     console.log('all done')\n * })\n * // or\n * await q.drain()\n */\n\n/**\n * Creates a `queue` object with the specified `concurrency`. Tasks added to the\n * `queue` are processed in parallel (up to the `concurrency` limit). If all\n * `worker`s are in progress, the task is queued until one becomes available.\n * Once a `worker` completes a `task`, that `task`'s callback is called.\n *\n * @name queue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`. Invoked with (task, callback).\n * @param {number} [concurrency=1] - An `integer` for determining how many\n * `worker` functions should be run in parallel.  If omitted, the concurrency\n * defaults to `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A queue object to manage the tasks. Callbacks can be\n * attached as certain properties to listen for specific events during the\n * lifecycle of the queue.\n * @example\n *\n * // create a queue object with concurrency 2\n * var q = async.queue(function(task, callback) {\n *     console.log('hello ' + task.name);\n *     callback();\n * }, 2);\n *\n * // assign a callback\n * q.drain(function() {\n *     console.log('all items have been processed');\n * });\n * // or await the end\n * await q.drain()\n *\n * // assign an error callback\n * q.error(function(err, task) {\n *     console.error('task experienced an error');\n * });\n *\n * // add some items to the queue\n * q.push({name: 'foo'}, function(err) {\n *     console.log('finished processing foo');\n * });\n * // callback is optional\n * q.push({name: 'bar'});\n *\n * // add some items to the queue (batch-wise)\n * q.push([{name: 'baz'},{name: 'bay'},{name: 'bax'}], function(err) {\n *     console.log('finished processing item');\n * });\n *\n * // add some items to the front of the queue\n * q.unshift({name: 'bar'}, function (err) {\n *     console.log('finished processing bar');\n * });\n */\nfunction queue$1 (worker, concurrency) {\n    var _worker = wrapAsync(worker);\n    return queue((items, cb) => {\n        _worker(items[0], cb);\n    }, concurrency, 1);\n}\n\n// Binary min-heap implementation used for priority queue.\n// Implementation is stable, i.e. push time is considered for equal priorities\nclass Heap {\n    constructor() {\n        this.heap = [];\n        this.pushCount = Number.MIN_SAFE_INTEGER;\n    }\n\n    get length() {\n        return this.heap.length;\n    }\n\n    empty () {\n        this.heap = [];\n        return this;\n    }\n\n    percUp(index) {\n        let p;\n\n        while (index > 0 && smaller(this.heap[index], this.heap[p=parent(index)])) {\n            let t = this.heap[index];\n            this.heap[index] = this.heap[p];\n            this.heap[p] = t;\n\n            index = p;\n        }\n    }\n\n    percDown(index) {\n        let l;\n\n        while ((l=leftChi(index)) < this.heap.length) {\n            if (l+1 < this.heap.length && smaller(this.heap[l+1], this.heap[l])) {\n                l = l+1;\n            }\n\n            if (smaller(this.heap[index], this.heap[l])) {\n                break;\n            }\n\n            let t = this.heap[index];\n            this.heap[index] = this.heap[l];\n            this.heap[l] = t;\n\n            index = l;\n        }\n    }\n\n    push(node) {\n        node.pushCount = ++this.pushCount;\n        this.heap.push(node);\n        this.percUp(this.heap.length-1);\n    }\n\n    unshift(node) {\n        return this.heap.push(node);\n    }\n\n    shift() {\n        let [top] = this.heap;\n\n        this.heap[0] = this.heap[this.heap.length-1];\n        this.heap.pop();\n        this.percDown(0);\n\n        return top;\n    }\n\n    toArray() {\n        return [...this];\n    }\n\n    *[Symbol.iterator] () {\n        for (let i = 0; i < this.heap.length; i++) {\n            yield this.heap[i].data;\n        }\n    }\n\n    remove (testFn) {\n        let j = 0;\n        for (let i = 0; i < this.heap.length; i++) {\n            if (!testFn(this.heap[i])) {\n                this.heap[j] = this.heap[i];\n                j++;\n            }\n        }\n\n        this.heap.splice(j);\n\n        for (let i = parent(this.heap.length-1); i >= 0; i--) {\n            this.percDown(i);\n        }\n\n        return this;\n    }\n}\n\nfunction leftChi(i) {\n    return (i<<1)+1;\n}\n\nfunction parent(i) {\n    return ((i+1)>>1)-1;\n}\n\nfunction smaller(x, y) {\n    if (x.priority !== y.priority) {\n        return x.priority < y.priority;\n    }\n    else {\n        return x.pushCount < y.pushCount;\n    }\n}\n\n/**\n * The same as [async.queue]{@link module:ControlFlow.queue} only tasks are assigned a priority and\n * completed in ascending priority order.\n *\n * @name priorityQueue\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.queue]{@link module:ControlFlow.queue}\n * @category Control Flow\n * @param {AsyncFunction} worker - An async function for processing a queued task.\n * If you want to handle errors from an individual task, pass a callback to\n * `q.push()`.\n * Invoked with (task, callback).\n * @param {number} concurrency - An `integer` for determining how many `worker`\n * functions should be run in parallel.  If omitted, the concurrency defaults to\n * `1`.  If the concurrency is `0`, an error is thrown.\n * @returns {module:ControlFlow.QueueObject} A priorityQueue object to manage the tasks. There are two\n * differences between `queue` and `priorityQueue` objects:\n * * `push(task, priority, [callback])` - `priority` should be a number. If an\n *   array of `tasks` is given, all tasks will be assigned the same priority.\n * * The `unshift` method was removed.\n */\nfunction priorityQueue(worker, concurrency) {\n    // Start with a normal queue\n    var q = queue$1(worker, concurrency);\n    var processingScheduled = false;\n\n    q._tasks = new Heap();\n\n    // Override push to accept second parameter representing priority\n    q.push = function(data, priority = 0, callback = () => {}) {\n        if (typeof callback !== 'function') {\n            throw new Error('task callback must be a function');\n        }\n        q.started = true;\n        if (!Array.isArray(data)) {\n            data = [data];\n        }\n        if (data.length === 0 && q.idle()) {\n            // call drain immediately if there are no tasks\n            return setImmediate$1(() => q.drain());\n        }\n\n        for (var i = 0, l = data.length; i < l; i++) {\n            var item = {\n                data: data[i],\n                priority,\n                callback\n            };\n\n            q._tasks.push(item);\n        }\n\n        if (!processingScheduled) {\n            processingScheduled = true;\n            setImmediate$1(() => {\n                processingScheduled = false;\n                q.process();\n            });\n        }\n    };\n\n    // Remove unshift function\n    delete q.unshift;\n\n    return q;\n}\n\n/**\n * Runs the `tasks` array of functions in parallel, without waiting until the\n * previous function has completed. Once any of the `tasks` complete or pass an\n * error to its callback, the main `callback` is immediately called. It's\n * equivalent to `Promise.race()`.\n *\n * @name race\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array containing [async functions]{@link AsyncFunction}\n * to run. Each function can complete with an optional `result` value.\n * @param {Function} callback - A callback to run once any of the functions have\n * completed. This function gets an error or result from the first function that\n * completed. Invoked with (err, result).\n * @returns undefined\n * @example\n *\n * async.race([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ],\n * // main callback\n * function(err, result) {\n *     // the result will be equal to 'two' as it finishes earlier\n * });\n */\nfunction race(tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new TypeError('First argument to race must be an array of functions'));\n    if (!tasks.length) return callback();\n    for (var i = 0, l = tasks.length; i < l; i++) {\n        wrapAsync(tasks[i])(callback);\n    }\n}\n\nvar race$1 = awaitify(race, 2);\n\n/**\n * Same as [`reduce`]{@link module:Collections.reduce}, only operates on `array` in reverse order.\n *\n * @name reduceRight\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reduce]{@link module:Collections.reduce}\n * @alias foldr\n * @category Collection\n * @param {Array} array - A collection to iterate over.\n * @param {*} memo - The initial state of the reduction.\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * array to produce the next step in the reduction.\n * The `iteratee` should complete with the next state of the reduction.\n * If the iteratee completes with an error, the reduction is stopped and the\n * main `callback` is immediately called with the error.\n * Invoked with (memo, item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the reduced value. Invoked with\n * (err, result).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction reduceRight (array, memo, iteratee, callback) {\n    var reversed = [...array].reverse();\n    return reduce$1(reversed, memo, iteratee, callback);\n}\n\n/**\n * Wraps the async function in another function that always completes with a\n * result object, even when it errors.\n *\n * The result object has either the property `error` or `value`.\n *\n * @name reflect\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} fn - The async function you want to wrap\n * @returns {Function} - A function that always passes null to it's callback as\n * the error. The second argument to the callback will be an `object` with\n * either an `error` or a `value` property.\n * @example\n *\n * async.parallel([\n *     async.reflect(function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff but error ...\n *         callback('bad stuff happened');\n *     }),\n *     async.reflect(function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     })\n * ],\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = 'bad stuff happened'\n *     // results[2].value = 'two'\n * });\n */\nfunction reflect(fn) {\n    var _fn = wrapAsync(fn);\n    return initialParams(function reflectOn(args, reflectCallback) {\n        args.push((error, ...cbArgs) => {\n            let retVal = {};\n            if (error) {\n                retVal.error = error;\n            }\n            if (cbArgs.length > 0){\n                var value = cbArgs;\n                if (cbArgs.length <= 1) {\n                    [value] = cbArgs;\n                }\n                retVal.value = value;\n            }\n            reflectCallback(null, retVal);\n        });\n\n        return _fn.apply(this, args);\n    });\n}\n\n/**\n * A helper function that wraps an array or an object of functions with `reflect`.\n *\n * @name reflectAll\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.reflect]{@link module:Utils.reflect}\n * @category Util\n * @param {Array|Object|Iterable} tasks - The collection of\n * [async functions]{@link AsyncFunction} to wrap in `async.reflect`.\n * @returns {Array} Returns an array of async functions, each wrapped in\n * `async.reflect`\n * @example\n *\n * let tasks = [\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         // do some more stuff but error ...\n *         callback(new Error('bad stuff happened'));\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ];\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results[0].value = 'one'\n *     // results[1].error = Error('bad stuff happened')\n *     // results[2].value = 'two'\n * });\n *\n * // an example using an object instead of an array\n * let tasks = {\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         callback('two');\n *     },\n *     three: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'three');\n *         }, 100);\n *     }\n * };\n *\n * async.parallel(async.reflectAll(tasks),\n * // optional callback\n * function(err, results) {\n *     // values\n *     // results.one.value = 'one'\n *     // results.two.error = 'two'\n *     // results.three.value = 'three'\n * });\n */\nfunction reflectAll(tasks) {\n    var results;\n    if (Array.isArray(tasks)) {\n        results = tasks.map(reflect);\n    } else {\n        results = {};\n        Object.keys(tasks).forEach(key => {\n            results[key] = reflect.call(this, tasks[key]);\n        });\n    }\n    return results;\n}\n\nfunction reject(eachfn, arr, _iteratee, callback) {\n    const iteratee = wrapAsync(_iteratee);\n    return _filter(eachfn, arr, (value, cb) => {\n        iteratee(value, (err, v) => {\n            cb(err, !v);\n        });\n    }, callback);\n}\n\n/**\n * The opposite of [`filter`]{@link module:Collections.filter}. Removes values that pass an `async` truth test.\n *\n * @name reject\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.filter]{@link module:Collections.filter}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n *\n * const fileList = ['dir1/file1.txt','dir2/file3.txt','dir3/file6.txt'];\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.reject(fileList, fileExists, function(err, results) {\n *    // [ 'dir3/file6.txt' ]\n *    // results now equals an array of the non-existing files\n * });\n *\n * // Using Promises\n * async.reject(fileList, fileExists)\n * .then( results => {\n *     console.log(results);\n *     // [ 'dir3/file6.txt' ]\n *     // results now equals an array of the non-existing files\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let results = await async.reject(fileList, fileExists);\n *         console.log(results);\n *         // [ 'dir3/file6.txt' ]\n *         // results now equals an array of the non-existing files\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction reject$1 (coll, iteratee, callback) {\n    return reject(eachOf$1, coll, iteratee, callback)\n}\nvar reject$2 = awaitify(reject$1, 3);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name rejectLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectLimit (coll, limit, iteratee, callback) {\n    return reject(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar rejectLimit$1 = awaitify(rejectLimit, 4);\n\n/**\n * The same as [`reject`]{@link module:Collections.reject} but runs only a single async operation at a time.\n *\n * @name rejectSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.reject]{@link module:Collections.reject}\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {Function} iteratee - An async truth test to apply to each item in\n * `coll`.\n * The should complete with a boolean value as its `result`.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback is passed\n */\nfunction rejectSeries (coll, iteratee, callback) {\n    return reject(eachOfSeries$1, coll, iteratee, callback)\n}\nvar rejectSeries$1 = awaitify(rejectSeries, 3);\n\nfunction constant$1(value) {\n    return function () {\n        return value;\n    }\n}\n\n/**\n * Attempts to get a successful response from `task` no more than `times` times\n * before returning an error. If the task is successful, the `callback` will be\n * passed the result of the successful task. If all attempts fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name retry\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @see [async.retryable]{@link module:ControlFlow.retryable}\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - Can be either an\n * object with `times` and `interval` or a number.\n * * `times` - The number of attempts to make before giving up.  The default\n *   is `5`.\n * * `interval` - The time to wait between retries, in milliseconds.  The\n *   default is `0`. The interval may also be specified as a function of the\n *   retry count (see example).\n * * `errorFilter` - An optional synchronous function that is invoked on\n *   erroneous result. If it returns `true` the retry attempts will continue;\n *   if the function returns `false` the retry flow is aborted with the current\n *   attempt's error and result being returned to the final callback.\n *   Invoked with (err).\n * * If `opts` is a number, the number specifies the number of times to retry,\n *   with the default interval of `0`.\n * @param {AsyncFunction} task - An async function to retry.\n * Invoked with (callback).\n * @param {Function} [callback] - An optional callback which is called when the\n * task has succeeded, or after the final failed attempt. It receives the `err`\n * and `result` arguments of the last attempt at completing the `task`. Invoked\n * with (err, results).\n * @returns {Promise} a promise if no callback provided\n *\n * @example\n *\n * // The `retry` function can be used as a stand-alone control flow by passing\n * // a callback, as shown below:\n *\n * // try calling apiMethod 3 times\n * async.retry(3, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 3 times, waiting 200 ms between each retry\n * async.retry({times: 3, interval: 200}, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod 10 times with exponential backoff\n * // (i.e. intervals of 100, 200, 400, 800, 1600, ... milliseconds)\n * async.retry({\n *   times: 10,\n *   interval: function(retryCount) {\n *     return 50 * Math.pow(2, retryCount);\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod the default 5 times no delay between each retry\n * async.retry(apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // try calling apiMethod only when error condition satisfies, all other\n * // errors will abort the retry control flow and return to final callback\n * async.retry({\n *   errorFilter: function(err) {\n *     return err.message === 'Temporary error'; // only retry on a specific error\n *   }\n * }, apiMethod, function(err, result) {\n *     // do something with the result\n * });\n *\n * // to retry individual methods that are not as reliable within other\n * // control flow functions, use the `retryable` wrapper:\n * async.auto({\n *     users: api.getUsers.bind(api),\n *     payments: async.retryable(3, api.getPayments.bind(api))\n * }, function(err, results) {\n *     // do something with the results\n * });\n *\n */\nconst DEFAULT_TIMES = 5;\nconst DEFAULT_INTERVAL = 0;\n\nfunction retry(opts, task, callback) {\n    var options = {\n        times: DEFAULT_TIMES,\n        intervalFunc: constant$1(DEFAULT_INTERVAL)\n    };\n\n    if (arguments.length < 3 && typeof opts === 'function') {\n        callback = task || promiseCallback();\n        task = opts;\n    } else {\n        parseTimes(options, opts);\n        callback = callback || promiseCallback();\n    }\n\n    if (typeof task !== 'function') {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n\n    var _task = wrapAsync(task);\n\n    var attempt = 1;\n    function retryAttempt() {\n        _task((err, ...args) => {\n            if (err === false) return\n            if (err && attempt++ < options.times &&\n                (typeof options.errorFilter != 'function' ||\n                    options.errorFilter(err))) {\n                setTimeout(retryAttempt, options.intervalFunc(attempt - 1));\n            } else {\n                callback(err, ...args);\n            }\n        });\n    }\n\n    retryAttempt();\n    return callback[PROMISE_SYMBOL]\n}\n\nfunction parseTimes(acc, t) {\n    if (typeof t === 'object') {\n        acc.times = +t.times || DEFAULT_TIMES;\n\n        acc.intervalFunc = typeof t.interval === 'function' ?\n            t.interval :\n            constant$1(+t.interval || DEFAULT_INTERVAL);\n\n        acc.errorFilter = t.errorFilter;\n    } else if (typeof t === 'number' || typeof t === 'string') {\n        acc.times = +t || DEFAULT_TIMES;\n    } else {\n        throw new Error(\"Invalid arguments for async.retry\");\n    }\n}\n\n/**\n * A close relative of [`retry`]{@link module:ControlFlow.retry}.  This method\n * wraps a task and makes it retryable, rather than immediately calling it\n * with retries.\n *\n * @name retryable\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.retry]{@link module:ControlFlow.retry}\n * @category Control Flow\n * @param {Object|number} [opts = {times: 5, interval: 0}| 5] - optional\n * options, exactly the same as from `retry`, except for a `opts.arity` that\n * is the arity of the `task` function, defaulting to `task.length`\n * @param {AsyncFunction} task - the asynchronous function to wrap.\n * This function will be passed any arguments passed to the returned wrapper.\n * Invoked with (...args, callback).\n * @returns {AsyncFunction} The wrapped function, which when invoked, will\n * retry on an error, based on the parameters specified in `opts`.\n * This function will accept the same parameters as `task`.\n * @example\n *\n * async.auto({\n *     dep1: async.retryable(3, getFromFlakyService),\n *     process: [\"dep1\", async.retryable(3, function (results, cb) {\n *         maybeProcessData(results.dep1, cb);\n *     })]\n * }, callback);\n */\nfunction retryable (opts, task) {\n    if (!task) {\n        task = opts;\n        opts = null;\n    }\n    let arity = (opts && opts.arity) || task.length;\n    if (isAsync(task)) {\n        arity += 1;\n    }\n    var _task = wrapAsync(task);\n    return initialParams((args, callback) => {\n        if (args.length < arity - 1 || callback == null) {\n            args.push(callback);\n            callback = promiseCallback();\n        }\n        function taskFn(cb) {\n            _task(...args, cb);\n        }\n\n        if (opts) retry(opts, taskFn, callback);\n        else retry(taskFn, callback);\n\n        return callback[PROMISE_SYMBOL]\n    });\n}\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @return {Promise} a promise, if no callback is passed\n * @example\n *\n * //Using Callbacks\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ], function(err, results) {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * });\n *\n * // an example using objects instead of arrays\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * });\n *\n * //Using Promises\n * async.series([\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'one');\n *         }, 200);\n *     },\n *     function(callback) {\n *         setTimeout(function() {\n *             callback(null, 'two');\n *         }, 100);\n *     }\n * ]).then(results => {\n *     console.log(results);\n *     // results is equal to ['one','two']\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // an example using an object instead of an array\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             // do some async task\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback) {\n *         setTimeout(function() {\n *             // then do another async task\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }).then(results => {\n *     console.log(results);\n *     // results is equal to: { one: 1, two: 2 }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * //Using async/await\n * async () => {\n *     try {\n *         let results = await async.series([\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 'one');\n *                 }, 200);\n *             },\n *             function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 'two');\n *                 }, 100);\n *             }\n *         ]);\n *         console.log(results);\n *         // results is equal to ['one','two']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * // an example using an object instead of an array\n * async () => {\n *     try {\n *         let results = await async.parallel({\n *             one: function(callback) {\n *                 setTimeout(function() {\n *                     // do some async task\n *                     callback(null, 1);\n *                 }, 200);\n *             },\n *            two: function(callback) {\n *                 setTimeout(function() {\n *                     // then do another async task\n *                     callback(null, 2);\n *                 }, 100);\n *            }\n *         });\n *         console.log(results);\n *         // results is equal to: { one: 1, two: 2 }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction series(tasks, callback) {\n    return _parallel(eachOfSeries$1, tasks, callback);\n}\n\n/**\n * Returns `true` if at least one element in the `coll` satisfies an async test.\n * If any iteratee call returns `true`, the main `callback` is immediately\n * called.\n *\n * @name some\n * @static\n * @memberOf module:Collections\n * @method\n * @alias any\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // dir1 is a directory that contains file1.txt, file2.txt\n * // dir2 is a directory that contains file3.txt, file4.txt\n * // dir3 is a directory that contains file5.txt\n * // dir4 does not exist\n *\n * // asynchronous function that checks if a file exists\n * function fileExists(file, callback) {\n *    fs.access(file, fs.constants.F_OK, (err) => {\n *        callback(null, !err);\n *    });\n * }\n *\n * // Using callbacks\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // true\n *        // result is true since some file in the list exists\n *    }\n *);\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists,\n *    function(err, result) {\n *        console.log(result);\n *        // false\n *        // result is false since none of the files exists\n *    }\n *);\n *\n * // Using Promises\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // true\n *     // result is true since some file in the list exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists)\n * .then( result => {\n *     console.log(result);\n *     // false\n *     // result is false since none of the files exists\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir3/file5.txt'], fileExists);\n *         console.log(result);\n *         // true\n *         // result is true since some file in the list exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n * async () => {\n *     try {\n *         let result = await async.some(['dir1/missing.txt','dir2/missing.txt','dir4/missing.txt'], fileExists);\n *         console.log(result);\n *         // false\n *         // result is false since none of the files exists\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction some(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOf$1, coll, iteratee, callback)\n}\nvar some$1 = awaitify(some, 3);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs a maximum of `limit` async operations at a time.\n *\n * @name someLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anyLimit\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in parallel.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someLimit(coll, limit, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfLimit(limit), coll, iteratee, callback)\n}\nvar someLimit$1 = awaitify(someLimit, 4);\n\n/**\n * The same as [`some`]{@link module:Collections.some} but runs only a single async operation at a time.\n *\n * @name someSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.some]{@link module:Collections.some}\n * @alias anySeries\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async truth test to apply to each item\n * in the collections in series.\n * The iteratee should complete with a boolean `result` value.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called as soon as any\n * iteratee returns `true`, or after all the iteratee functions have finished.\n * Result will be either `true` or `false` depending on the values of the async\n * tests. Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n */\nfunction someSeries(coll, iteratee, callback) {\n    return _createTester(Boolean, res => res)(eachOfSeries$1, coll, iteratee, callback)\n}\nvar someSeries$1 = awaitify(someSeries, 3);\n\n/**\n * Sorts a list by the results of running each `coll` value through an async\n * `iteratee`.\n *\n * @name sortBy\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with a value to use as the sort criteria as\n * its `result`.\n * Invoked with (item, callback).\n * @param {Function} callback - A callback which is called after all the\n * `iteratee` functions have finished, or an error occurs. Results is the items\n * from the original `coll` sorted by the values returned by the `iteratee`\n * calls. Invoked with (err, results).\n * @returns {Promise} a promise, if no callback passed\n * @example\n *\n * // bigfile.txt is a file that is 251100 bytes in size\n * // mediumfile.txt is a file that is 11000 bytes in size\n * // smallfile.txt is a file that is 121 bytes in size\n *\n * // asynchronous function that returns the file size in bytes\n * function getFileSizeInBytes(file, callback) {\n *     fs.stat(file, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         callback(null, stat.size);\n *     });\n * }\n *\n * // Using callbacks\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // By modifying the callback parameter the\n * // sorting order can be influenced:\n *\n * // ascending order\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) return callback(getFileSizeErr);\n *         callback(null, fileSize);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *         }\n *     }\n * );\n *\n * // descending order\n * async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], function(file, callback) {\n *     getFileSizeInBytes(file, function(getFileSizeErr, fileSize) {\n *         if (getFileSizeErr) {\n *             return callback(getFileSizeErr);\n *         }\n *         callback(null, fileSize * -1);\n *     });\n * }, function(err, results) {\n *         if (err) {\n *             console.log(err);\n *         } else {\n *             console.log(results);\n *             // results is now the original array of files sorted by\n *             // file size (ascending by default), e.g.\n *             // [ 'bigfile.txt', 'mediumfile.txt', 'smallfile.txt']\n *         }\n *     }\n * );\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes,\n *     function(err, results) {\n *         if (err) {\n *             console.log(err);\n *             // [ Error: ENOENT: no such file or directory ]\n *         } else {\n *             console.log(results);\n *         }\n *     }\n * );\n *\n * // Using Promises\n * async.sortBy(['mediumfile.txt','smallfile.txt','bigfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n *     // results is now the original array of files sorted by\n *     // file size (ascending by default), e.g.\n *     // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n * }).catch( err => {\n *     console.log(err);\n * });\n *\n * // Error handling\n * async.sortBy(['mediumfile.txt','smallfile.txt','missingfile.txt'], getFileSizeInBytes)\n * .then( results => {\n *     console.log(results);\n * }).catch( err => {\n *     console.log(err);\n *     // [ Error: ENOENT: no such file or directory ]\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let results = await async.sortBy(['bigfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *         // results is now the original array of files sorted by\n *         // file size (ascending by default), e.g.\n *         // [ 'smallfile.txt', 'mediumfile.txt', 'bigfile.txt']\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * // Error handling\n * async () => {\n *     try {\n *         let results = await async.sortBy(['missingfile.txt','mediumfile.txt','smallfile.txt'], getFileSizeInBytes);\n *         console.log(results);\n *     }\n *     catch (err) {\n *         console.log(err);\n *         // [ Error: ENOENT: no such file or directory ]\n *     }\n * }\n *\n */\nfunction sortBy (coll, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return map$1(coll, (x, iterCb) => {\n        _iteratee(x, (err, criteria) => {\n            if (err) return iterCb(err);\n            iterCb(err, {value: x, criteria});\n        });\n    }, (err, results) => {\n        if (err) return callback(err);\n        callback(null, results.sort(comparator).map(v => v.value));\n    });\n\n    function comparator(left, right) {\n        var a = left.criteria, b = right.criteria;\n        return a < b ? -1 : a > b ? 1 : 0;\n    }\n}\nvar sortBy$1 = awaitify(sortBy, 3);\n\n/**\n * Sets a time limit on an asynchronous function. If the function does not call\n * its callback within the specified milliseconds, it will be called with a\n * timeout error. The code property for the error object will be `'ETIMEDOUT'`.\n *\n * @name timeout\n * @static\n * @memberOf module:Utils\n * @method\n * @category Util\n * @param {AsyncFunction} asyncFn - The async function to limit in time.\n * @param {number} milliseconds - The specified time limit.\n * @param {*} [info] - Any variable you want attached (`string`, `object`, etc)\n * to timeout Error for more information..\n * @returns {AsyncFunction} Returns a wrapped function that can be used with any\n * of the control flow functions.\n * Invoke this function with the same parameters as you would `asyncFunc`.\n * @example\n *\n * function myFunction(foo, callback) {\n *     doAsyncTask(foo, function(err, data) {\n *         // handle errors\n *         if (err) return callback(err);\n *\n *         // do some stuff ...\n *\n *         // return processed data\n *         return callback(null, data);\n *     });\n * }\n *\n * var wrapped = async.timeout(myFunction, 1000);\n *\n * // call `wrapped` as you would `myFunction`\n * wrapped({ bar: 'bar' }, function(err, data) {\n *     // if `myFunction` takes < 1000 ms to execute, `err`\n *     // and `data` will have their expected values\n *\n *     // else `err` will be an Error with the code 'ETIMEDOUT'\n * });\n */\nfunction timeout(asyncFn, milliseconds, info) {\n    var fn = wrapAsync(asyncFn);\n\n    return initialParams((args, callback) => {\n        var timedOut = false;\n        var timer;\n\n        function timeoutCallback() {\n            var name = asyncFn.name || 'anonymous';\n            var error  = new Error('Callback function \"' + name + '\" timed out.');\n            error.code = 'ETIMEDOUT';\n            if (info) {\n                error.info = info;\n            }\n            timedOut = true;\n            callback(error);\n        }\n\n        args.push((...cbArgs) => {\n            if (!timedOut) {\n                callback(...cbArgs);\n                clearTimeout(timer);\n            }\n        });\n\n        // setup timer and call original function\n        timer = setTimeout(timeoutCallback, milliseconds);\n        fn(...args);\n    });\n}\n\nfunction range(size) {\n    var result = Array(size);\n    while (size--) {\n        result[size] = size;\n    }\n    return result;\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name timesLimit\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} count - The number of times to run the function.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see [async.map]{@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesLimit(count, limit, iteratee, callback) {\n    var _iteratee = wrapAsync(iteratee);\n    return mapLimit$1(range(count), limit, _iteratee, callback);\n}\n\n/**\n * Calls the `iteratee` function `n` times, and accumulates results in the same\n * manner you would use with [map]{@link module:Collections.map}.\n *\n * @name times\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.map]{@link module:Collections.map}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n * @example\n *\n * // Pretend this is some complicated async factory\n * var createUser = function(id, callback) {\n *     callback(null, {\n *         id: 'user' + id\n *     });\n * };\n *\n * // generate 5 users\n * async.times(5, function(n, next) {\n *     createUser(n, function(err, user) {\n *         next(err, user);\n *     });\n * }, function(err, users) {\n *     // we should now have 5 users\n * });\n */\nfunction times (n, iteratee, callback) {\n    return timesLimit(n, Infinity, iteratee, callback)\n}\n\n/**\n * The same as [times]{@link module:ControlFlow.times} but runs only a single async operation at a time.\n *\n * @name timesSeries\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.times]{@link module:ControlFlow.times}\n * @category Control Flow\n * @param {number} n - The number of times to run the function.\n * @param {AsyncFunction} iteratee - The async function to call `n` times.\n * Invoked with the iteration index and a callback: (n, next).\n * @param {Function} callback - see {@link module:Collections.map}.\n * @returns {Promise} a promise, if no callback is provided\n */\nfunction timesSeries (n, iteratee, callback) {\n    return timesLimit(n, 1, iteratee, callback)\n}\n\n/**\n * A relative of `reduce`.  Takes an Object or Array, and iterates over each\n * element in parallel, each step potentially mutating an `accumulator` value.\n * The type of the accumulator defaults to the type of collection passed in.\n *\n * @name transform\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|AsyncIterable|Object} coll - A collection to iterate over.\n * @param {*} [accumulator] - The initial state of the transform.  If omitted,\n * it will default to an empty Object or Array, depending on the type of `coll`\n * @param {AsyncFunction} iteratee - A function applied to each item in the\n * collection that potentially modifies the accumulator.\n * Invoked with (accumulator, item, key, callback).\n * @param {Function} [callback] - A callback which is called after all the\n * `iteratee` functions have finished. Result is the transformed accumulator.\n * Invoked with (err, result).\n * @returns {Promise} a promise, if no callback provided\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileList = ['file1.txt','file2.txt','file3.txt'];\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileList, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileList, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * (async () => {\n *     try {\n *         let result = await async.transform(fileList, transformFileSize);\n *         console.log(result);\n *         // [ '1000 Bytes', '1.95 KB', '2.93 KB' ]\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * })();\n *\n * @example\n *\n * // file1.txt is a file that is 1000 bytes in size\n * // file2.txt is a file that is 2000 bytes in size\n * // file3.txt is a file that is 3000 bytes in size\n *\n * // helper function that returns human-readable size format from bytes\n * function formatBytes(bytes, decimals = 2) {\n *   // implementation not included for brevity\n *   return humanReadbleFilesize;\n * }\n *\n * const fileMap = { f1: 'file1.txt', f2: 'file2.txt', f3: 'file3.txt' };\n *\n * // asynchronous function that returns the file size, transformed to human-readable format\n * // e.g. 1024 bytes = 1KB, 1234 bytes = 1.21 KB, 1048576 bytes = 1MB, etc.\n * function transformFileSize(acc, value, key, callback) {\n *     fs.stat(value, function(err, stat) {\n *         if (err) {\n *             return callback(err);\n *         }\n *         acc[key] = formatBytes(stat.size);\n *         callback(null);\n *     });\n * }\n *\n * // Using callbacks\n * async.transform(fileMap, transformFileSize, function(err, result) {\n *     if(err) {\n *         console.log(err);\n *     } else {\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n * });\n *\n * // Using Promises\n * async.transform(fileMap, transformFileSize)\n * .then(result => {\n *     console.log(result);\n *     // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n * }).catch(err => {\n *     console.log(err);\n * });\n *\n * // Using async/await\n * async () => {\n *     try {\n *         let result = await async.transform(fileMap, transformFileSize);\n *         console.log(result);\n *         // { f1: '1000 Bytes', f2: '1.95 KB', f3: '2.93 KB' }\n *     }\n *     catch (err) {\n *         console.log(err);\n *     }\n * }\n *\n */\nfunction transform (coll, accumulator, iteratee, callback) {\n    if (arguments.length <= 3 && typeof accumulator === 'function') {\n        callback = iteratee;\n        iteratee = accumulator;\n        accumulator = Array.isArray(coll) ? [] : {};\n    }\n    callback = once(callback || promiseCallback());\n    var _iteratee = wrapAsync(iteratee);\n\n    eachOf$1(coll, (v, k, cb) => {\n        _iteratee(accumulator, v, k, cb);\n    }, err => callback(err, accumulator));\n    return callback[PROMISE_SYMBOL]\n}\n\n/**\n * It runs each task in series but stops whenever any of the functions were\n * successful. If one of the tasks were successful, the `callback` will be\n * passed the result of the successful task. If all tasks fail, the callback\n * will be passed the error and result (if any) of the final attempt.\n *\n * @name tryEach\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|AsyncIterable|Object} tasks - A collection containing functions to\n * run, each function is passed a `callback(err, result)` it must call on\n * completion with an error `err` (which can be `null`) and an optional `result`\n * value.\n * @param {Function} [callback] - An optional callback which is called when one\n * of the tasks has succeeded, or all have failed. It receives the `err` and\n * `result` arguments of the last attempt at completing the `task`. Invoked with\n * (err, results).\n * @returns {Promise} a promise, if no callback is passed\n * @example\n * async.tryEach([\n *     function getDataFromFirstWebsite(callback) {\n *         // Try getting the data from the first website\n *         callback(err, data);\n *     },\n *     function getDataFromSecondWebsite(callback) {\n *         // First website failed,\n *         // Try getting the data from the backup website\n *         callback(err, data);\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     Now do something with the data.\n * });\n *\n */\nfunction tryEach(tasks, callback) {\n    var error = null;\n    var result;\n    return eachSeries$1(tasks, (task, taskCb) => {\n        wrapAsync(task)((err, ...args) => {\n            if (err === false) return taskCb(err);\n\n            if (args.length < 2) {\n                [result] = args;\n            } else {\n                result = args;\n            }\n            error = err;\n            taskCb(err ? null : {});\n        });\n    }, () => callback(error, result));\n}\n\nvar tryEach$1 = awaitify(tryEach);\n\n/**\n * Undoes a [memoize]{@link module:Utils.memoize}d function, reverting it to the original,\n * unmemoized form. Handy for testing.\n *\n * @name unmemoize\n * @static\n * @memberOf module:Utils\n * @method\n * @see [async.memoize]{@link module:Utils.memoize}\n * @category Util\n * @param {AsyncFunction} fn - the memoized function\n * @returns {AsyncFunction} a function that calls the original unmemoized function\n */\nfunction unmemoize(fn) {\n    return (...args) => {\n        return (fn.unmemoized || fn)(...args);\n    };\n}\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if no callback is passed\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function test(cb) { cb(null, count < 5); },\n *     function iter(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nfunction whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback);\n    var _fn = wrapAsync(iteratee);\n    var _test = wrapAsync(test);\n    var results = [];\n\n    function next(err, ...rest) {\n        if (err) return callback(err);\n        results = rest;\n        if (err === false) return;\n        _test(check);\n    }\n\n    function check(err, truth) {\n        if (err) return callback(err);\n        if (err === false) return;\n        if (!truth) return callback(null, ...results);\n        _fn(next);\n    }\n\n    return _test(check);\n}\nvar whilst$1 = awaitify(whilst, 3);\n\n/**\n * Repeatedly call `iteratee` until `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs. `callback` will be passed an error and any\n * arguments passed to the final `iteratee`'s callback.\n *\n * The inverse of [whilst]{@link module:ControlFlow.whilst}.\n *\n * @name until\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @see [async.whilst]{@link module:ControlFlow.whilst}\n * @category Control Flow\n * @param {AsyncFunction} test - asynchronous truth test to perform before each\n * execution of `iteratee`. Invoked with (callback).\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` fails. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has passed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns {Promise} a promise, if a callback is not passed\n *\n * @example\n * const results = []\n * let finished = false\n * async.until(function test(cb) {\n *     cb(null, finished)\n * }, function iter(next) {\n *     fetchPage(url, (err, body) => {\n *         if (err) return next(err)\n *         results = results.concat(body.objects)\n *         finished = !!body.next\n *         next(err)\n *     })\n * }, function done (err) {\n *     // all pages have been fetched\n * })\n */\nfunction until(test, iteratee, callback) {\n    const _test = wrapAsync(test);\n    return whilst$1((cb) => _test((err, truth) => cb (err, !truth)), iteratee, callback);\n}\n\n/**\n * Runs the `tasks` array of functions in series, each passing their results to\n * the next in the array. However, if any of the `tasks` pass an error to their\n * own callback, the next function is not executed, and the main `callback` is\n * immediately called with the error.\n *\n * @name waterfall\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array} tasks - An array of [async functions]{@link AsyncFunction}\n * to run.\n * Each function should complete with any number of `result` values.\n * The `result` values will be passed as arguments, in order, to the next task.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This will be passed the results of the last task's\n * callback. Invoked with (err, [results]).\n * @returns undefined\n * @example\n *\n * async.waterfall([\n *     function(callback) {\n *         callback(null, 'one', 'two');\n *     },\n *     function(arg1, arg2, callback) {\n *         // arg1 now equals 'one' and arg2 now equals 'two'\n *         callback(null, 'three');\n *     },\n *     function(arg1, callback) {\n *         // arg1 now equals 'three'\n *         callback(null, 'done');\n *     }\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n *\n * // Or, with named functions:\n * async.waterfall([\n *     myFirstFunction,\n *     mySecondFunction,\n *     myLastFunction,\n * ], function (err, result) {\n *     // result now equals 'done'\n * });\n * function myFirstFunction(callback) {\n *     callback(null, 'one', 'two');\n * }\n * function mySecondFunction(arg1, arg2, callback) {\n *     // arg1 now equals 'one' and arg2 now equals 'two'\n *     callback(null, 'three');\n * }\n * function myLastFunction(arg1, callback) {\n *     // arg1 now equals 'three'\n *     callback(null, 'done');\n * }\n */\nfunction waterfall (tasks, callback) {\n    callback = once(callback);\n    if (!Array.isArray(tasks)) return callback(new Error('First argument to waterfall must be an array of functions'));\n    if (!tasks.length) return callback();\n    var taskIndex = 0;\n\n    function nextTask(args) {\n        var task = wrapAsync(tasks[taskIndex++]);\n        task(...args, onlyOnce(next));\n    }\n\n    function next(err, ...args) {\n        if (err === false) return\n        if (err || taskIndex === tasks.length) {\n            return callback(err, ...args);\n        }\n        nextTask(args);\n    }\n\n    nextTask([]);\n}\n\nvar waterfall$1 = awaitify(waterfall);\n\n/**\n * An \"async function\" in the context of Async is an asynchronous function with\n * a variable number of parameters, with the final parameter being a callback.\n * (`function (arg1, arg2, ..., callback) {}`)\n * The final callback is of the form `callback(err, results...)`, which must be\n * called once the function is completed.  The callback should be called with a\n * Error as its first argument to signal that an error occurred.\n * Otherwise, if no error occurred, it should be called with `null` as the first\n * argument, and any additional `result` arguments that may apply, to signal\n * successful completion.\n * The callback must be called exactly once, ideally on a later tick of the\n * JavaScript event loop.\n *\n * This type of function is also referred to as a \"Node-style async function\",\n * or a \"continuation passing-style function\" (CPS). Most of the methods of this\n * library are themselves CPS/Node-style async functions, or functions that\n * return CPS/Node-style async functions.\n *\n * Wherever we accept a Node-style async function, we also directly accept an\n * [ES2017 `async` function]{@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/async_function}.\n * In this case, the `async` function will not be passed a final callback\n * argument, and any thrown error will be used as the `err` argument of the\n * implicit callback, and the return value will be used as the `result` value.\n * (i.e. a `rejected` of the returned Promise becomes the `err` callback\n * argument, and a `resolved` value becomes the `result`.)\n *\n * Note, due to JavaScript limitations, we can only detect native `async`\n * functions and not transpilied implementations.\n * Your environment must have `async`/`await` support for this to work.\n * (e.g. Node > v7.6, or a recent version of a modern browser).\n * If you are using `async` functions through a transpiler (e.g. Babel), you\n * must still wrap the function with [asyncify]{@link module:Utils.asyncify},\n * because the `async function` will be compiled to an ordinary function that\n * returns a promise.\n *\n * @typedef {Function} AsyncFunction\n * @static\n */\n\nvar index = {\n    apply,\n    applyEach: applyEach$1,\n    applyEachSeries,\n    asyncify,\n    auto,\n    autoInject,\n    cargo,\n    cargoQueue: cargo$1,\n    compose,\n    concat: concat$1,\n    concatLimit: concatLimit$1,\n    concatSeries: concatSeries$1,\n    constant,\n    detect: detect$1,\n    detectLimit: detectLimit$1,\n    detectSeries: detectSeries$1,\n    dir,\n    doUntil,\n    doWhilst: doWhilst$1,\n    each,\n    eachLimit: eachLimit$2,\n    eachOf: eachOf$1,\n    eachOfLimit: eachOfLimit$2,\n    eachOfSeries: eachOfSeries$1,\n    eachSeries: eachSeries$1,\n    ensureAsync,\n    every: every$1,\n    everyLimit: everyLimit$1,\n    everySeries: everySeries$1,\n    filter: filter$1,\n    filterLimit: filterLimit$1,\n    filterSeries: filterSeries$1,\n    forever: forever$1,\n    groupBy,\n    groupByLimit: groupByLimit$1,\n    groupBySeries,\n    log,\n    map: map$1,\n    mapLimit: mapLimit$1,\n    mapSeries: mapSeries$1,\n    mapValues,\n    mapValuesLimit: mapValuesLimit$1,\n    mapValuesSeries,\n    memoize,\n    nextTick,\n    parallel,\n    parallelLimit,\n    priorityQueue,\n    queue: queue$1,\n    race: race$1,\n    reduce: reduce$1,\n    reduceRight,\n    reflect,\n    reflectAll,\n    reject: reject$2,\n    rejectLimit: rejectLimit$1,\n    rejectSeries: rejectSeries$1,\n    retry,\n    retryable,\n    seq,\n    series,\n    setImmediate: setImmediate$1,\n    some: some$1,\n    someLimit: someLimit$1,\n    someSeries: someSeries$1,\n    sortBy: sortBy$1,\n    timeout,\n    times,\n    timesLimit,\n    timesSeries,\n    transform,\n    tryEach: tryEach$1,\n    unmemoize,\n    until,\n    waterfall: waterfall$1,\n    whilst: whilst$1,\n\n    // aliases\n    all: every$1,\n    allLimit: everyLimit$1,\n    allSeries: everySeries$1,\n    any: some$1,\n    anyLimit: someLimit$1,\n    anySeries: someSeries$1,\n    find: detect$1,\n    findLimit: detectLimit$1,\n    findSeries: detectSeries$1,\n    flatMap: concat$1,\n    flatMapLimit: concatLimit$1,\n    flatMapSeries: concatSeries$1,\n    forEach: each,\n    forEachSeries: eachSeries$1,\n    forEachLimit: eachLimit$2,\n    forEachOf: eachOf$1,\n    forEachOfSeries: eachOfSeries$1,\n    forEachOfLimit: eachOfLimit$2,\n    inject: reduce$1,\n    foldl: reduce$1,\n    foldr: reduceRight,\n    select: filter$1,\n    selectLimit: filterLimit$1,\n    selectSeries: filterSeries$1,\n    wrapSync: asyncify,\n    during: whilst$1,\n    doDuring: doWhilst$1\n};\n\nexport default index;\nexport { apply, applyEach$1 as applyEach, applyEachSeries, asyncify, auto, autoInject, cargo, cargo$1 as cargoQueue, compose, concat$1 as concat, concatLimit$1 as concatLimit, concatSeries$1 as concatSeries, constant, detect$1 as detect, detectLimit$1 as detectLimit, detectSeries$1 as detectSeries, dir, doUntil, doWhilst$1 as doWhilst, each, eachLimit$2 as eachLimit, eachOf$1 as eachOf, eachOfLimit$2 as eachOfLimit, eachOfSeries$1 as eachOfSeries, eachSeries$1 as eachSeries, ensureAsync, every$1 as every, everyLimit$1 as everyLimit, everySeries$1 as everySeries, filter$1 as filter, filterLimit$1 as filterLimit, filterSeries$1 as filterSeries, forever$1 as forever, groupBy, groupByLimit$1 as groupByLimit, groupBySeries, log, map$1 as map, mapLimit$1 as mapLimit, mapSeries$1 as mapSeries, mapValues, mapValuesLimit$1 as mapValuesLimit, mapValuesSeries, memoize, nextTick, parallel, parallelLimit, priorityQueue, queue$1 as queue, race$1 as race, reduce$1 as reduce, reduceRight, reflect, reflectAll, reject$2 as reject, rejectLimit$1 as rejectLimit, rejectSeries$1 as rejectSeries, retry, retryable, seq, series, setImmediate$1 as setImmediate, some$1 as some, someLimit$1 as someLimit, someSeries$1 as someSeries, sortBy$1 as sortBy, timeout, times, timesLimit, timesSeries, transform, tryEach$1 as tryEach, unmemoize, until, waterfall$1 as waterfall, whilst$1 as whilst, every$1 as all, everyLimit$1 as allLimit, everySeries$1 as allSeries, some$1 as any, someLimit$1 as anyLimit, someSeries$1 as anySeries, detect$1 as find, detectLimit$1 as findLimit, detectSeries$1 as findSeries, concat$1 as flatMap, concatLimit$1 as flatMapLimit, concatSeries$1 as flatMapSeries, each as forEach, eachSeries$1 as forEachSeries, eachLimit$2 as forEachLimit, eachOf$1 as forEachOf, eachOfSeries$1 as forEachOfSeries, eachOfLimit$2 as forEachOfLimit, reduce$1 as inject, reduce$1 as foldl, reduceRight as foldr, filter$1 as select, filterLimit$1 as selectLimit, filterSeries$1 as selectSeries, asyncify as wrapSync, whilst$1 as during, doWhilst$1 as doDuring };\n","\"use strict\";\n\nvar isValue         = require(\"type/value/is\")\n  , isPlainFunction = require(\"type/plain-function/is\")\n  , assign          = require(\"es5-ext/object/assign\")\n  , normalizeOpts   = require(\"es5-ext/object/normalize-options\")\n  , contains        = require(\"es5-ext/string/#/contains\");\n\nvar d = (module.exports = function (dscr, value/*, options*/) {\n\tvar c, e, w, options, desc;\n\tif (arguments.length < 2 || typeof dscr !== \"string\") {\n\t\toptions = value;\n\t\tvalue = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[2];\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t\tw = contains.call(dscr, \"w\");\n\t} else {\n\t\tc = w = true;\n\t\te = false;\n\t}\n\n\tdesc = { value: value, configurable: c, enumerable: e, writable: w };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n});\n\nd.gs = function (dscr, get, set/*, options*/) {\n\tvar c, e, options, desc;\n\tif (typeof dscr !== \"string\") {\n\t\toptions = set;\n\t\tset = get;\n\t\tget = dscr;\n\t\tdscr = null;\n\t} else {\n\t\toptions = arguments[3];\n\t}\n\tif (!isValue(get)) {\n\t\tget = undefined;\n\t} else if (!isPlainFunction(get)) {\n\t\toptions = get;\n\t\tget = set = undefined;\n\t} else if (!isValue(set)) {\n\t\tset = undefined;\n\t} else if (!isPlainFunction(set)) {\n\t\toptions = set;\n\t\tset = undefined;\n\t}\n\tif (isValue(dscr)) {\n\t\tc = contains.call(dscr, \"c\");\n\t\te = contains.call(dscr, \"e\");\n\t} else {\n\t\tc = true;\n\t\te = false;\n\t}\n\n\tdesc = { get: get, set: set, configurable: c, enumerable: e };\n\treturn !options ? desc : assign(normalizeOpts(options), desc);\n};\n","\"use strict\";\n\nvar callable   = require(\"es5-ext/object/valid-callable\")\n  , isCallable = require(\"es5-ext/object/is-callable\")\n  , isValue    = require(\"es5-ext/object/is-value\")\n  , d          = require(\"d\")\n  , ee         = require(\"event-emitter\")\n  , isPromise  = require(\"./is-promise\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, deferred, resolve, reject;\n\nmodule.exports = exports = function (name, unres, onres, res) {\n\tname = String(name);\n\tcallable(res);\n\tif (isValue(onres)) callable(onres);\n\tcallable(unres);\n\tdefineProperty(exports._unresolved, name, d(unres));\n\texports._onresolve[name] = onres;\n\tdefineProperty(exports._resolved, name, d(res));\n\texports._names.push(name);\n};\n\nexports._names = [\"done\", \"then\", \"valueOf\"];\n\nexports._unresolved = ee(\n\tcreate(Function.prototype, {\n\t\tthen: d(function (win, fail) {\n\t\t\tvar def;\n\t\t\tif (!this.pending) this.pending = [];\n\t\t\tdef = deferred();\n\t\t\tthis.pending.push(\"then\", [win, fail, def.resolve, def.reject]);\n\t\t\treturn def.promise;\n\t\t}),\n\t\tdone: d(function (win, fail) {\n\t\t\tif (isValue(win)) callable(win);\n\t\t\tif (isValue(fail)) callable(fail);\n\t\t\tif (!this.pending) this.pending = [];\n\t\t\tthis.pending.push(\"done\", arguments);\n\t\t}),\n\t\tresolved: d(false),\n\t\treturnsPromise: d(true),\n\t\tvalueOf: d(function () { return this; })\n\t})\n);\n\nexports._onresolve = {\n\tthen: function (win, fail, promiseResolve, promiseReject) {\n\t\tvar value, cont = this.failed ? fail : win;\n\t\tif (!isValue(cont)) {\n\t\t\tif (this.failed) promiseReject(this.value);\n\t\t\telse promiseResolve(this.value);\n\t\t\treturn;\n\t\t}\n\t\tif (isCallable(cont)) {\n\t\t\tif (isPromise(cont)) {\n\t\t\t\tif (cont.resolved) {\n\t\t\t\t\tif (cont.failed) promiseReject(cont.value);\n\t\t\t\t\telse promiseResolve(cont.value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tcont.done(promiseResolve, promiseReject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvalue = cont(this.value);\n\t\t\t} catch (e) {\n\t\t\t\tpromiseReject(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tpromiseResolve(value);\n\t\t\treturn;\n\t\t}\n\t\tpromiseResolve(cont);\n\t},\n\tdone: function (win, fail) {\n\t\tif (this.failed) {\n\t\t\tif (fail) {\n\t\t\t\tfail(this.value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthrow this.value;\n\t\t}\n\t\tif (win) win(this.value);\n\t}\n};\n\nexports._resolved = ee(\n\tcreate(Function.prototype, {\n\t\tthen: d(function (win, fail) {\n\t\t\tvar value, cont = this.failed ? fail : win;\n\t\t\tif (!isValue(cont)) return this;\n\t\t\tif (isCallable(cont)) {\n\t\t\t\tif (isPromise(cont)) return cont;\n\t\t\t\ttry { value = cont(this.value); }\n\t\t\t\tcatch (e) { return reject(e); }\n\t\t\t\treturn resolve(value);\n\t\t\t}\n\t\t\treturn resolve(cont);\n\t\t}),\n\t\tdone: d(function (win, fail) {\n\t\t\tif (isValue(win)) callable(win);\n\t\t\tif (isValue(fail)) callable(fail);\n\t\t\tif (this.failed) {\n\t\t\t\tif (fail) {\n\t\t\t\t\tfail(this.value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthrow this.value;\n\t\t\t}\n\t\t\tif (win) win(this.value);\n\t\t}),\n\t\tresolved: d(true),\n\t\treturnsPromise: d(true),\n\t\tvalueOf: d(function () { return this.value; })\n\t})\n);\n\ndeferred = require(\"./deferred\");\nresolve = deferred.resolve;\nreject = deferred.reject;\ndeferred.extend = exports;\n","// Assimilate eventual foreign promise\n\n\"use strict\";\n\nvar isObject  = require(\"es5-ext/object/is-object\")\n  , isPromise = require(\"./is-promise\")\n  , deferred  = require(\"./deferred\")\n  , nextTick  = require(\"next-tick\");\n\nvar getPrototypeOf = Object.getPrototypeOf;\n\nmodule.exports = function self(value) {\n\tvar then, done, def, resolve, reject;\n\tif (!value) return value;\n\ttry { then = value.then; }\n\tcatch (e) { return value; }\n\tif (typeof then !== \"function\") return value;\n\tif (isPromise(value)) return value;\n\tif (!isObject(value)) return value;\n\tif (!getPrototypeOf(value)) return value;\n\ttry { done = value.done; }\n\tcatch (ignore) {}\n\tdef = deferred();\n\tresolve = function (resolvedValue) { def.resolve(self(resolvedValue)); };\n\treject = function (resolvedReason) { def.reject(resolvedReason); };\n\tif (typeof done === \"function\") {\n\t\ttry { done.call(value, resolve, reject); }\n\t\tcatch (e) { return def.reject(e); }\n\t\treturn def.promise;\n\t}\n\ttry {\n\t\tthen.call(\n\t\t\tvalue,\n\t\t\tfunction (resolvedValue) {\n\t\t\t\tnextTick(function () { resolve(resolvedValue); });\n\t\t\t},\n\t\t\tfunction (resolvedReason) {\n\t\t\t\tnextTick(function () { reject(resolvedReason); });\n\t\t\t}\n\t\t);\n\t} catch (e) {\n\t\treturn def.reject(e);\n\t}\n\treturn def.promise;\n};\n","/* eslint max-statements: \"off\", max-depth: \"off\" */\n\n// Returns function that returns deferred or promise object.\n//\n// 1. If invoked without arguments then deferred object is returned\n//    Deferred object consist of promise (unresolved) function and resolve\n//    function through which we resolve promise\n// 2. If invoked with one argument then promise is returned which resolved value\n//    is given argument. Argument may be any value (even undefined),\n//    if it's promise then same promise is returned\n// 3. If invoked with more than one arguments then promise that resolves with\n//    array of all resolved arguments is returned.\n\n\"use strict\";\n\nvar isError        = require(\"es5-ext/error/is-error\")\n  , noop           = require(\"es5-ext/function/noop\")\n  , setPrototypeOf = require(\"es5-ext/object/set-prototype-of\")\n  , isPromise      = require(\"./is-promise\");\n\nvar every = Array.prototype.every\n  , push = Array.prototype.push\n  , getPrototypeOf = Object.getPrototypeOf\n  , Deferred\n  , createDeferred\n  , count = 0\n  , timeout\n  , extendShim\n  , ext\n  , resolve\n  , assimilate;\n\nextendShim = function (promise) {\n\text._names.forEach(function (name) {\n\t\tpromise[name] = function () {\n\t\t\treturn getPrototypeOf(promise)[name].apply(promise, arguments);\n\t\t};\n\t});\n\tpromise.returnsPromise = true;\n\tpromise.resolved = getPrototypeOf(promise).resolved;\n};\n\nresolve = function (value, failed) {\n\tvar promise = function (win, fail) { return promise.then(win, fail); };\n\tpromise.value = value;\n\tpromise.failed = failed;\n\tif (setPrototypeOf) setPrototypeOf(promise, ext._resolved);\n\telse extendShim(promise);\n\tif (createDeferred._profile) createDeferred._profile(true);\n\treturn promise;\n};\n\nDeferred = function () {\n\tvar promise = function (win, fail) { return promise.then(win, fail); };\n\tif (!count) timeout = setTimeout(noop, 1e9);\n\t++count;\n\tif (createDeferred._monitor) promise.monitor = createDeferred._monitor();\n\tif (setPrototypeOf) setPrototypeOf(promise, ext._unresolved);\n\telse extendShim(promise);\n\tif (createDeferred._profile) createDeferred._profile();\n\tthis.promise = promise;\n\tthis.resolve = this.resolve.bind(this);\n\tthis.reject = this.reject.bind(this);\n};\n\nDeferred.prototype = {\n\tresolved: false,\n\t_settle: function (value) {\n\t\tvar i, name, data, deps, dPromise, nuDeps;\n\t\tthis.promise.value = value;\n\t\tif (setPrototypeOf) setPrototypeOf(this.promise, ext._resolved);\n\t\telse this.promise.resolved = true;\n\t\tdeps = this.promise.dependencies;\n\t\tdelete this.promise.dependencies;\n\t\twhile (deps) {\n\t\t\tfor (i = 0; (dPromise = deps[i]); ++i) {\n\t\t\t\tdPromise.value = value;\n\t\t\t\tdPromise.failed = this.failed;\n\t\t\t\tif (setPrototypeOf) setPrototypeOf(dPromise, ext._resolved);\n\t\t\t\telse dPromise.resolved = true;\n\t\t\t\tdelete dPromise.pending;\n\t\t\t\tif (dPromise.dependencies) {\n\t\t\t\t\tif (nuDeps) push.apply(nuDeps, dPromise.dependencies);\n\t\t\t\t\telse nuDeps = dPromise.dependencies;\n\t\t\t\t\tdelete dPromise.dependencies;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdeps = nuDeps;\n\t\t\tnuDeps = null;\n\t\t}\n\t\tif ((data = this.promise.pending)) {\n\t\t\tfor (i = 0; (name = data[i]); ++i) {\n\t\t\t\text._onresolve[name].apply(this.promise, data[++i]);\n\t\t\t}\n\t\t\tdelete this.promise.pending;\n\t\t}\n\t\treturn this.promise;\n\t},\n\tresolve: function (value) {\n\t\tif (this.resolved) return this.promise;\n\t\tthis.resolved = true;\n\t\tif (!--count) clearTimeout(timeout);\n\t\tif (this.promise.monitor) clearTimeout(this.promise.monitor);\n\t\tvalue = assimilate(value);\n\t\tif (isPromise(value)) {\n\t\t\tif (!value.resolved) {\n\t\t\t\tif (!value.dependencies) {\n\t\t\t\t\tvalue.dependencies = [];\n\t\t\t\t}\n\t\t\t\tvalue.dependencies.push(this.promise);\n\t\t\t\tif (this.promise.pending) {\n\t\t\t\t\tif (value.pending) {\n\t\t\t\t\t\tthis.promise.pending.forEach(function (promise) {\n\t\t\t\t\t\t\tvalue.pending.push(promise);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tthis.promise.pending = value.pending;\n\t\t\t\t\t\tif (this.promise.dependencies) {\n\t\t\t\t\t\t\tthis.promise.dependencies.forEach(function self(dPromise) {\n\t\t\t\t\t\t\t\tdPromise.pending = value.pending;\n\t\t\t\t\t\t\t\tif (dPromise.dependencies) {\n\t\t\t\t\t\t\t\t\tdPromise.dependencies.forEach(self);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue.pending = this.promise.pending;\n\t\t\t\t\t}\n\t\t\t\t} else if (value.pending) {\n\t\t\t\t\tthis.promise.pending = value.pending;\n\t\t\t\t} else {\n\t\t\t\t\tthis.promise.pending = value.pending = [];\n\t\t\t\t}\n\t\t\t\treturn this.promise;\n\t\t\t}\n\t\t\tthis.promise.failed = value.failed;\n\t\t\tvalue = value.value;\n\t\t}\n\t\treturn this._settle(value);\n\t},\n\treject: function (error) {\n\t\tif (this.resolved) return this.promise;\n\t\tthis.resolved = true;\n\t\tif (!--count) clearTimeout(timeout);\n\t\tif (this.promise.monitor) clearTimeout(this.promise.monitor);\n\t\tthis.promise.failed = true;\n\t\treturn this._settle(error);\n\t}\n};\n\nmodule.exports = createDeferred = function (value) {\n\tvar length = arguments.length, d, waiting, initialized, result;\n\tif (!length) return new Deferred();\n\tif (length > 1) {\n\t\td = new Deferred();\n\t\twaiting = 0;\n\t\tresult = new Array(length);\n\t\tevery.call(arguments, function (itemValue, index) {\n\t\t\titemValue = assimilate(itemValue);\n\t\t\tif (!isPromise(itemValue)) {\n\t\t\t\tresult[index] = itemValue;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (itemValue.resolved) {\n\t\t\t\tif (itemValue.failed) {\n\t\t\t\t\td.reject(itemValue.value);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tresult[index] = itemValue.value;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\t++waiting;\n\t\t\titemValue.done(function (resolvedValue) {\n\t\t\t\tresult[index] = resolvedValue;\n\t\t\t\tif (!--waiting && initialized) d.resolve(result);\n\t\t\t}, d.reject);\n\t\t\treturn true;\n\t\t});\n\t\tinitialized = true;\n\t\tif (!waiting) d.resolve(result);\n\t\treturn d.promise;\n\t}\n\tvalue = assimilate(value);\n\tif (isPromise(value)) return value;\n\treturn resolve(value, isError(value));\n};\n\ncreateDeferred.Deferred = Deferred;\ncreateDeferred.reject = function (value) { return resolve(value, true); };\ncreateDeferred.resolve = function (value) {\n\tvalue = assimilate(value);\n\tif (isPromise(value)) return value;\n\treturn resolve(value, false);\n};\next = require(\"./_ext\");\nassimilate = require(\"./assimilate\");\n","// Dynamic queue handler\n// Allows to create a promise queue, where new promises can be added to queue until last promise in\n// a queue resolves. Queue promise resolves with `undefined` value, when last promises resolves.\n\n\"use strict\";\n\nvar aFrom          = require(\"es5-ext/array/from\")\n  , ensureIterable = require(\"es5-ext/iterable/validate-object\")\n  , assign         = require(\"es5-ext/object/assign\")\n  , deferred       = require(\"./deferred\")\n  , isPromise      = require(\"./is-promise\")\n  , assimilate     = require(\"./assimilate\");\n\nvar DynamicQueue;\n\nmodule.exports = DynamicQueue = function (list) {\n\tif (!(this instanceof DynamicQueue)) return new DynamicQueue(list);\n\tlist = aFrom(ensureIterable(list));\n\n\tassign(this, deferred());\n\tlist.every(this.add, this);\n\tif (!this.waiting) {\n\t\tthis.resolve();\n\t\treturn null;\n\t}\n\tthis.initialized = true;\n\treturn null;\n};\n\nDynamicQueue.prototype = {\n\twaiting: 0,\n\tinitialized: false,\n\tadd: function (value) {\n\t\tif (this.promise.resolved) throw new Error(\"Queue was already resolved\");\n\t\t++this.waiting;\n\t\tvalue = assimilate(value);\n\t\tif (isPromise(value)) {\n\t\t\tif (!value.resolved) {\n\t\t\t\tvalue.done(this._processValue.bind(this), this.reject);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (value.failed) {\n\t\t\t\tthis.reject(value.value);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn this._processValue();\n\t},\n\t_processValue: function () {\n\t\tif (this.promise.resolved) return null;\n\t\tif (!--this.waiting && this.initialized) this.resolve();\n\t\treturn true;\n\t}\n};\n","\"use strict\";\n\nvar arrayOf    = require(\"es5-ext/array/of\")\n  , isValue    = require(\"es5-ext/object/is-value\")\n  , deferred   = require(\"../deferred\")\n  , isPromise  = require(\"../is-promise\")\n  , assimilate = require(\"../assimilate\");\n\nvar push = Array.prototype.push, slice = Array.prototype.slice;\n\nmodule.exports = function (args, length) {\n\tvar i, arg;\n\tif (isValue(length) && args.length !== length) {\n\t\targs = slice.call(args, 0, length);\n\t\tif (args.length < length) {\n\t\t\tpush.apply(args, new Array(length - args.length));\n\t\t}\n\t} else {\n\t\tlength = args.length;\n\t}\n\tfor (i = 0; i < length; ++i) {\n\t\targ = assimilate(args[i]);\n\t\tif (isPromise(arg)) {\n\t\t\tif (!arg.resolved) {\n\t\t\t\tif (length > 1) return deferred.apply(null, args);\n\t\t\t\treturn arg(arrayOf);\n\t\t\t}\n\t\t\tif (arg.failed) return arg;\n\t\t\targs[i] = arg.value;\n\t\t}\n\t}\n\treturn args;\n};\n","// Promise aware Array's every\n\n\"use strict\";\n\nmodule.exports = require(\"../../lib/some-every\")(false);\n","// Promise aware Array's find\n// Additionally differs from some that it returns *first in order* item that matches constraint\n\n\"use strict\";\n\nvar assign          = require(\"es5-ext/object/assign\")\n  , isValue         = require(\"es5-ext/object/is-value\")\n  , ensureValue     = require(\"es5-ext/object/valid-value\")\n  , callable        = require(\"es5-ext/object/valid-callable\")\n  , toNaturalNumber = require(\"es5-ext/number/to-pos-integer\")\n  , deferred        = require(\"../../deferred\")\n  , isPromise       = require(\"../../is-promise\")\n  , assimilate      = require(\"../../assimilate\");\n\nvar call = Function.prototype.call, resolve = deferred.resolve, Find;\n\nFind = function (list, cb, context) {\n\tthis.list = list;\n\tthis.cb = cb;\n\tthis.context = context;\n\tthis.length = toNaturalNumber(list.length);\n\n\twhile (this.current < this.length) {\n\t\tif (this.current in list) {\n\t\t\tassign(this, deferred());\n\t\t\tthis.processCb = this.processCb.bind(this);\n\t\t\tthis.process();\n\t\t\treturn this.promise;\n\t\t}\n\t\t++this.current;\n\t}\n\treturn resolve(undefined);\n};\n\nFind.prototype = {\n\tcurrent: 0,\n\tprocess: function () {\n\t\tvar value = assimilate(this.list[this.current]);\n\t\tif (isPromise(value)) {\n\t\t\tif (!value.resolved) {\n\t\t\t\tvalue.done(this.processCb, this.reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (value.failed) {\n\t\t\t\tthis.reject(value.value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvalue = value.value;\n\t\t}\n\t\tthis.processCb(value);\n\t},\n\tprocessCb: function (listValue) {\n\t\tvar value;\n\t\tif (this.cb) {\n\t\t\ttry {\n\t\t\t\tvalue = call.call(this.cb, this.context, listValue, this.current, this.list);\n\t\t\t} catch (e) {\n\t\t\t\tthis.reject(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvalue = assimilate(value);\n\t\t\tif (isPromise(value)) {\n\t\t\t\tif (!value.resolved) {\n\t\t\t\t\tvalue.done(this.processValue.bind(this, listValue), this.reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (value.failed) {\n\t\t\t\t\tthis.reject(value.value);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvalue = value.value;\n\t\t\t}\n\t\t} else {\n\t\t\tvalue = listValue;\n\t\t}\n\t\tthis.processValue(listValue, value);\n\t},\n\tprocessValue: function (listValue, value) {\n\t\tif (value) {\n\t\t\tthis.resolve(listValue);\n\t\t\treturn;\n\t\t}\n\t\twhile (++this.current < this.length) {\n\t\t\tif (this.current in this.list) {\n\t\t\t\tthis.process();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.resolve(undefined);\n\t}\n};\n\nmodule.exports = function (cb/*, thisArg*/) {\n\tensureValue(this);\n\tif (isValue(cb)) callable(cb);\n\n\treturn new Find(this, cb, arguments[1]);\n};\n","// Promise aware Array's map\n\n\"use strict\";\n\nvar assign          = require(\"es5-ext/object/assign\")\n  , isValue         = require(\"es5-ext/object/is-value\")\n  , ensureValue     = require(\"es5-ext/object/valid-value\")\n  , callable        = require(\"es5-ext/object/valid-callable\")\n  , toNaturalNumber = require(\"es5-ext/number/to-pos-integer\")\n  , deferred        = require(\"../../deferred\")\n  , isPromise       = require(\"../../is-promise\")\n  , assimilate      = require(\"../../assimilate\");\n\nvar every = Array.prototype.every, call = Function.prototype.call, DMap;\n\nDMap = function (list, cb, context) {\n\tthis.list = list;\n\tthis.cb = cb;\n\tthis.context = context;\n\tthis.result = new Array(toNaturalNumber(list.length));\n\n\tassign(this, deferred());\n\tevery.call(list, this.process, this);\n\tif (!this.waiting) return this.resolve(this.result);\n\tthis.initialized = true;\n\n\treturn this.promise;\n};\n\nDMap.prototype = {\n\twaiting: 0,\n\tinitialized: false,\n\tprocess: function (value, index) {\n\t\t++this.waiting;\n\t\tvalue = assimilate(value);\n\t\tif (isPromise(value)) {\n\t\t\tif (!value.resolved) {\n\t\t\t\tvalue.done(this.processCb.bind(this, index), this.reject);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (value.failed) {\n\t\t\t\tthis.reject(value.value);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvalue = value.value;\n\t\t}\n\t\treturn this.processCb(index, value);\n\t},\n\tprocessCb: function (index, value) {\n\t\tif (this.promise.resolved) return false;\n\t\tif (this.cb) {\n\t\t\ttry {\n\t\t\t\tvalue = call.call(this.cb, this.context, value, index, this.list);\n\t\t\t} catch (e) {\n\t\t\t\tthis.reject(e);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvalue = assimilate(value);\n\t\t\tif (isPromise(value)) {\n\t\t\t\tif (!value.resolved) {\n\t\t\t\t\tvalue.done(this.processValue.bind(this, index), this.reject);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tif (value.failed) {\n\t\t\t\t\tthis.reject(value.value);\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tvalue = value.value;\n\t\t\t}\n\t\t}\n\t\tthis.processValue(index, value);\n\t\treturn true;\n\t},\n\tprocessValue: function (index, value) {\n\t\tif (this.promise.resolved) return;\n\t\tthis.result[index] = value;\n\t\tif (!--this.waiting && this.initialized) this.resolve(this.result);\n\t}\n};\n\nmodule.exports = function (cb/*, thisArg*/) {\n\tensureValue(this);\n\tif (isValue(cb)) callable(cb);\n\n\treturn new DMap(this, cb, arguments[1]);\n};\n","// Promise aware Array's reduce\n\n\"use strict\";\n\nvar assign          = require(\"es5-ext/object/assign\")\n  , isValue         = require(\"es5-ext/object/is-value\")\n  , ensureValue     = require(\"es5-ext/object/valid-value\")\n  , callable        = require(\"es5-ext/object/valid-callable\")\n  , toNaturalNumber = require(\"es5-ext/number/to-pos-integer\")\n  , deferred        = require(\"../../deferred\")\n  , isPromise       = require(\"../../is-promise\")\n  , assimilate      = require(\"../../assimilate\");\n\nvar call = Function.prototype.call, resolve = deferred.resolve, Reduce;\n\nReduce = function (list, cb, initial, initialized) {\n\tthis.list = list;\n\tthis.cb = cb;\n\tthis.initialized = initialized;\n\tthis.length = toNaturalNumber(list.length);\n\n\tinitial = assimilate(initial);\n\tif (isPromise(initial)) {\n\t\tif (!initial.resolved) {\n\t\t\tassign(this, deferred());\n\t\t\tinitial.done(\n\t\t\t\tfunction (resolvedInitial) {\n\t\t\t\t\tthis.value = resolvedInitial;\n\t\t\t\t\tthis.init();\n\t\t\t\t}.bind(this),\n\t\t\t\tthis.reject\n\t\t\t);\n\t\t\treturn this.promise;\n\t\t}\n\t\tthis.value = initial.value;\n\t\tif (initial.failed) return initial;\n\t} else {\n\t\tthis.value = initial;\n\t}\n\n\treturn this.init();\n};\n\nReduce.prototype = {\n\tcurrent: 0,\n\tstate: false,\n\tinit: function () {\n\t\twhile (this.current < this.length) {\n\t\t\tif (hasOwnProperty.call(this.list, this.current)) break;\n\t\t\t++this.current;\n\t\t}\n\t\tif (this.current === this.length) {\n\t\t\tif (!this.initialized) {\n\t\t\t\tthrow new Error(\"Reduce of empty array with no initial value\");\n\t\t\t}\n\t\t\treturn this.resolve ? this.resolve(this.value) : resolve(this.value);\n\t\t}\n\t\tif (!this.promise) assign(this, deferred());\n\t\tthis.processCb = this.processCb.bind(this);\n\t\tthis.processValue = this.processValue.bind(this);\n\t\tthis.continue();\n\t\treturn this.promise;\n\t},\n\tcontinue: function () {\n\t\tvar result;\n\t\twhile (!this.state) {\n\t\t\tresult = this.process();\n\t\t\tif (this.state !== \"cb\") break;\n\t\t\tresult = this.processCb(result);\n\t\t\tif (this.state !== \"value\") break;\n\t\t\tthis.processValue(result);\n\t\t}\n\t},\n\tprocess: function () {\n\t\tvar value = assimilate(this.list[this.current]);\n\t\tif (isPromise(value)) {\n\t\t\tif (!value.resolved) {\n\t\t\t\tvalue.done(\n\t\t\t\t\tfunction (result) {\n\t\t\t\t\t\tresult = this.processCb(result);\n\t\t\t\t\t\tif (this.state !== \"value\") return;\n\t\t\t\t\t\tthis.processValue(result);\n\t\t\t\t\t\tif (!this.state) this.continue();\n\t\t\t\t\t}.bind(this),\n\t\t\t\t\tthis.reject\n\t\t\t\t);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (value.failed) {\n\t\t\t\tthis.reject(value.value);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvalue = value.value;\n\t\t}\n\t\tthis.state = \"cb\";\n\t\treturn value;\n\t},\n\tprocessCb: function (value) {\n\t\tif (!this.initialized) {\n\t\t\tthis.initialized = true;\n\t\t\tthis.state = \"value\";\n\t\t\treturn value;\n\t\t}\n\t\tif (this.cb) {\n\t\t\ttry {\n\t\t\t\tvalue = call.call(this.cb, undefined, this.value, value, this.current, this.list);\n\t\t\t} catch (e) {\n\t\t\t\tthis.reject(e);\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvalue = assimilate(value);\n\t\t\tif (isPromise(value)) {\n\t\t\t\tif (!value.resolved) {\n\t\t\t\t\tvalue.done(\n\t\t\t\t\t\tfunction (result) {\n\t\t\t\t\t\t\tthis.state = \"value\";\n\t\t\t\t\t\t\tthis.processValue(result);\n\t\t\t\t\t\t\tif (!this.state) this.continue();\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\tthis.reject\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (value.failed) {\n\t\t\t\t\tthis.reject(value.value);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvalue = value.value;\n\t\t\t}\n\t\t}\n\t\tthis.state = \"value\";\n\t\treturn value;\n\t},\n\tprocessValue: function (value) {\n\t\tthis.value = value;\n\t\twhile (++this.current < this.length) {\n\t\t\tif (hasOwnProperty.call(this.list, this.current)) {\n\t\t\t\tthis.state = false;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tthis.resolve(this.value);\n\t}\n};\n\nmodule.exports = function (cb/*, initial*/) {\n\tensureValue(this);\n\tif (isValue(cb)) callable(cb);\n\n\treturn new Reduce(this, cb, arguments[1], arguments.length > 1);\n};\n","// Promise aware Array's some\n\n\"use strict\";\n\nmodule.exports = require(\"../../lib/some-every\")(true);\n","// Call asynchronous function\n\n\"use strict\";\n\nvar toArray          = require(\"es5-ext/array/to-array\")\n  , isValue          = require(\"es5-ext/object/is-value\")\n  , callable         = require(\"es5-ext/object/valid-callable\")\n  , deferred         = require(\"../../deferred\")\n  , isPromise        = require(\"../../is-promise\")\n  , processArguments = require(\"../_process-arguments\");\n\nvar slice = Array.prototype.slice, apply = Function.prototype.apply, applyFn, callAsync;\n\napplyFn = function (fn, args, def) {\n\targs = toArray(args);\n\tapply.call(\n\t\tfn,\n\t\tthis,\n\t\targs.concat(function (error, result) {\n\t\t\tif (isValue(error)) def.reject(error);\n\t\t\telse def.resolve(arguments.length > 2 ? slice.call(arguments, 1) : result);\n\t\t})\n\t);\n};\n\ncallAsync = function (fn, length, context, args) {\n\tvar def;\n\targs = processArguments(args, length);\n\tif (isPromise(args)) {\n\t\tif (args.failed) return args;\n\t\tdef = deferred();\n\t\targs.done(function (resolvedArgs) {\n\t\t\tif (fn.returnsPromise) {\n\t\t\t\tapply.call(fn, context, resolvedArgs);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry { applyFn.call(context, fn, resolvedArgs, def); } catch (e) { def.reject(e); }\n\t\t}, def.reject);\n\t\treturn def.promise;\n\t}\n\tif (fn.returnsPromise) return apply.call(fn, context, args);\n\tdef = deferred();\n\ttry {\n\t\tapplyFn.call(context, fn, args, def);\n\t} catch (e) {\n\t\tdef.reject(e);\n\t\tthrow e;\n\t}\n\treturn def.promise;\n};\n\nmodule.exports = exports = function (context/*, …args*/) {\n\treturn callAsync(callable(this), null, context, slice.call(arguments, 1));\n};\n\nObject.defineProperty(exports, \"_base\", {\n\tconfigurable: true,\n\tenumerable: false,\n\twritable: true,\n\tvalue: callAsync\n});\n","// Delay function execution, return promise for delayed function result\n\n\"use strict\";\n\nvar isValue       = require(\"es5-ext/object/is-value\")\n  , callable      = require(\"es5-ext/object/valid-callable\")\n  , nextTick      = require(\"next-tick\")\n  , ensureTimeout = require(\"timers-ext/valid-timeout\")\n  , deferred      = require(\"../../deferred\");\n\nvar apply = Function.prototype.apply, delayed;\n\ndelayed = function (fn, args, resolve, reject) {\n\tvar value;\n\ttry {\n\t\tvalue = apply.call(fn, this, args);\n\t} catch (e) {\n\t\treject(e);\n\t\treturn;\n\t}\n\tresolve(value);\n};\n\nmodule.exports = function (timeout) {\n\tvar fn, result, delay;\n\tfn = callable(this);\n\tif (isValue(timeout)) {\n\t\ttimeout = ensureTimeout(timeout);\n\t\tdelay = setTimeout;\n\t} else {\n\t\tdelay = nextTick;\n\t}\n\tresult = function () {\n\t\tvar def = deferred();\n\t\tdelay(delayed.bind(this, fn, arguments, def.resolve, def.reject), timeout);\n\t\treturn def.promise;\n\t};\n\tresult.returnsPromise = true;\n\treturn result;\n};\n","/* eslint max-statements: \"off\" */\n\n// Limit number of concurrent function executions (to cLimit number).\n// Limited calls are queued. Optionaly maximum queue length can also be\n// controlled with qLimit value, any calls that would reach over that limit\n// would be discarded (its promise would resolve with \"Too many calls\" error)\n\n\"use strict\";\n\nvar toPosInt   = require(\"es5-ext/number/to-pos-integer\")\n  , callable   = require(\"es5-ext/object/valid-callable\")\n  , isValue    = require(\"es5-ext/object/is-value\")\n  , eeUnify    = require(\"event-emitter/unify\")\n  , deferred   = require(\"../../deferred\")\n  , isPromise  = require(\"../../is-promise\")\n  , assimilate = require(\"../../assimilate\");\n\nvar resolve = deferred.resolve\n  , reject = deferred.reject\n  , apply = Function.prototype.apply\n  , max = Math.max\n  , gateReject;\n\nrequire(\"../promise/finally\");\n\ngateReject = function () {\n\tvar e = new Error(\"Too many calls at the gate\");\n\te.code = \"DEFERRED_REJECTED_AT_GATE\";\n\te.type = \"deferred-gate-rejected\";\n\treturn reject(e);\n};\n\nmodule.exports = function (cLimit, qLimit) {\n\tvar fn, count, decrement, unload, queue, run, result;\n\tfn = callable(this);\n\tcLimit = max(toPosInt(cLimit), 1);\n\tqLimit = !isValue(qLimit) || isNaN(qLimit) ? Infinity : toPosInt(qLimit);\n\tcount = 0;\n\tqueue = [];\n\n\trun = function (thisArg, args, def) {\n\t\tvar localResult;\n\t\ttry {\n\t\t\tlocalResult = apply.call(fn, thisArg, args);\n\t\t} catch (e) {\n\t\t\tif (!def) return reject(e);\n\t\t\tdef.reject(e);\n\t\t\treturn unload();\n\t\t}\n\t\tlocalResult = assimilate(localResult);\n\t\tif (isPromise(localResult)) {\n\t\t\tif (def) eeUnify(def.promise, localResult);\n\t\t\tif (!localResult.resolved) {\n\t\t\t\t++count;\n\t\t\t\tif (def) def.resolve(localResult);\n\t\t\t\treturn localResult.finally(decrement);\n\t\t\t}\n\t\t\tif (!localResult.failed) localResult = localResult.value;\n\t\t}\n\t\tif (!def) return resolve(localResult);\n\t\tdef.resolve(localResult);\n\t\treturn unload();\n\t};\n\n\tdecrement = function () {\n\t\t--count;\n\t\tunload();\n\t};\n\n\tunload = function () {\n\t\tvar data;\n\t\tif ((data = queue.shift())) run.apply(null, data);\n\t};\n\n\tresult = function () {\n\t\tvar def;\n\t\tif (count >= cLimit) {\n\t\t\tif (queue.length < qLimit) {\n\t\t\t\tdef = deferred();\n\t\t\t\tqueue.push([this, arguments, def]);\n\t\t\t\treturn def.promise;\n\t\t\t}\n\t\t\treturn gateReject();\n\t\t}\n\t\treturn run(this, arguments);\n\t};\n\tresult.returnsPromise = true;\n\treturn result;\n};\n","// Promisify synchronous function\n\n\"use strict\";\n\nvar isValue          = require(\"es5-ext/object/is-value\")\n  , callable         = require(\"es5-ext/object/valid-callable\")\n  , toNaturalNumber  = require(\"es5-ext/number/to-pos-integer\")\n  , deferred         = require(\"../../deferred\")\n  , isPromise        = require(\"../../is-promise\")\n  , processArguments = require(\"../_process-arguments\");\n\nvar apply = Function.prototype.apply, applyFn;\n\napplyFn = function (fn, args, resolve, reject) {\n\tvar value;\n\ttry {\n\t\tvalue = apply.call(fn, this, args);\n\t} catch (e) {\n\t\treject(e);\n\t\treturn;\n\t}\n\tresolve(value);\n};\n\nmodule.exports = function (length) {\n\tvar fn, result;\n\tfn = callable(this);\n\tif (fn.returnsPromise) return fn;\n\tif (isValue(length)) length = toNaturalNumber(length);\n\tresult = function () {\n\t\tvar args, def;\n\t\targs = processArguments(arguments, length);\n\n\t\tif (isPromise(args)) {\n\t\t\tif (args.failed) return args;\n\t\t\tdef = deferred();\n\t\t\targs.done(\n\t\t\t\tfunction (resolvedArgs) {\n\t\t\t\t\tapplyFn.call(this, fn, resolvedArgs, def.resolve, def.reject);\n\t\t\t\t}.bind(this),\n\t\t\t\tdef.reject\n\t\t\t);\n\t\t} else {\n\t\t\tdef = deferred();\n\t\t\tapplyFn.call(this, fn, args, def.resolve, def.reject);\n\t\t}\n\n\t\treturn def.promise;\n\t};\n\tresult.returnsPromise = true;\n\treturn result;\n};\n","// Promisify asynchronous function\n\n\"use strict\";\n\nvar isValue         = require(\"es5-ext/object/is-value\")\n  , callable        = require(\"es5-ext/object/valid-callable\")\n  , toNaturalNumber = require(\"es5-ext/number/to-pos-integer\")\n  , callAsync       = require(\"./call-async\")._base;\n\nmodule.exports = function (length) {\n\tvar fn, result;\n\tfn = callable(this);\n\tif (fn.returnsPromise) return fn;\n\tif (isValue(length)) length = toNaturalNumber(length);\n\tresult = function () { return callAsync(fn, length, this, arguments); };\n\tresult.returnsPromise = true;\n\treturn result;\n};\n","// Used by promise extensions that are based on array extensions.\n\n\"use strict\";\n\nvar isValue  = require(\"es5-ext/object/is-value\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , deferred = require(\"../../deferred\");\n\nvar deferredReject = deferred.reject;\n\nmodule.exports = function (name, ext) {\n\tdeferred.extend(\n\t\tname,\n\t\tfunction (cb) {\n\t\t\tvar def;\n\t\t\tif (isValue(cb)) callable(cb);\n\t\t\tif (!this.pending) this.pending = [];\n\t\t\tdef = deferred();\n\t\t\tthis.pending.push(name, [arguments, def.resolve, def.reject]);\n\t\t\treturn def.promise;\n\t\t},\n\t\tfunction (args, resolve, reject) {\n\t\t\tvar result;\n\t\t\tif (this.failed) {\n\t\t\t\treject(this.value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tresult = ext.apply(this.value, args);\n\t\t\t} catch (e) {\n\t\t\t\treject(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(result);\n\t\t},\n\t\tfunction (cb) {\n\t\t\tif (isValue(cb)) callable(cb);\n\t\t\tif (this.failed) return this;\n\t\t\ttry { return ext.apply(this.value, arguments); }\n\t\t\tcatch (e) { return deferredReject(e); }\n\t\t}\n\t);\n};\n","// 'aside' - Promise extension\n//\n// promise.aside(win, fail)\n//\n// Works in analogous way as promise function itself (or `then`)\n// but instead of adding promise to promise chain it returns context promise and\n// lets callback carry on with other processing logic\n\n\"use strict\";\n\nvar isValue  = require(\"es5-ext/object/is-value\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , deferred = require(\"../../deferred\");\n\ndeferred.extend(\n\t\"aside\",\n\tfunction (win, fail) {\n\t\tif (isValue(win)) callable(win);\n\t\tif (isValue(fail)) callable(fail);\n\t\tif (win || fail) {\n\t\t\tif (!this.pending) {\n\t\t\t\tthis.pending = [];\n\t\t\t}\n\t\t\tthis.pending.push(\"aside\", arguments);\n\t\t}\n\t\treturn this;\n\t},\n\tfunction (win, fail) {\n\t\tvar cb = this.failed ? fail : win;\n\t\tif (cb) {\n\t\t\tcb(this.value);\n\t\t}\n\t},\n\tfunction (win, fail) {\n\t\tvar cb;\n\t\tif (isValue(win)) callable(win);\n\t\tif (isValue(fail)) callable(fail);\n\t\tcb = this.failed ? fail : win;\n\t\tif (cb) {\n\t\t\tcb(this.value);\n\t\t}\n\t\treturn this;\n\t}\n);\n","// 'catch' - Promise extension\n//\n// promise.catch(cb)\n//\n// Same as `then` but accepts only onFail callback\n\n\"use strict\";\n\nvar isCallable = require(\"es5-ext/object/is-callable\")\n  , validValue = require(\"es5-ext/object/valid-value\")\n  , deferred   = require(\"../../deferred\")\n  , isPromise  = require(\"../../is-promise\")\n  , resolve    = deferred.resolve\n  , reject     = deferred.reject;\n\ndeferred.extend(\n\t\"catch\",\n\tfunction (cb) {\n\t\tvar def;\n\t\tvalidValue(cb);\n\t\tif (!this.pending) this.pending = [];\n\t\tdef = deferred();\n\t\tthis.pending.push(\"catch\", [cb, def.resolve, def.reject]);\n\t\treturn def.promise;\n\t},\n\tfunction (cb, localResolve, localReject) {\n\t\tvar value;\n\t\tif (!this.failed) {\n\t\t\tlocalResolve(this.value);\n\t\t\treturn;\n\t\t}\n\t\tif (isCallable(cb)) {\n\t\t\tif (isPromise(cb)) {\n\t\t\t\tif (cb.resolved) {\n\t\t\t\t\tif (cb.failed) localReject(cb.value);\n\t\t\t\t\telse localResolve(cb.value);\n\t\t\t\t} else {\n\t\t\t\t\tcb.done(localResolve, localReject);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvalue = cb(this.value);\n\t\t\t} catch (e) {\n\t\t\t\tlocalReject(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocalResolve(value);\n\t\t\treturn;\n\t\t}\n\t\tlocalResolve(cb);\n\t},\n\tfunction (cb) {\n\t\tvar value;\n\t\tvalidValue(cb);\n\t\tif (!this.failed) return this;\n\t\tif (isCallable(cb)) {\n\t\t\tif (isPromise(cb)) return cb;\n\t\t\ttry { value = cb(this.value); }\n\t\t\tcatch (e) { return reject(e); }\n\t\t\treturn resolve(value);\n\t\t}\n\t\treturn resolve(cb);\n\t}\n);\n","// 'cb' - Promise extension\n//\n// promise.cb(cb)\n//\n// Handles asynchronous function style callback (which is run in next event loop\n// the earliest). Returns self promise. Callback is optional.\n//\n// Useful when we want to configure typical asynchronous function which logic is\n// internally configured with promises.\n//\n// Extension can be used as follows:\n//\n// var foo = function (arg1, arg2, cb) {\n//     var d = deferred();\n//     // ... implementation\n//     return d.promise.cb(cb);\n// };\n//\n// `cb` extension returns promise and handles eventual callback (optional)\n\n\"use strict\";\n\nvar isValue  = require(\"es5-ext/object/is-value\")\n  , callable = require(\"es5-ext/object/valid-callable\")\n  , nextTick = require(\"next-tick\")\n  , deferred = require(\"../../deferred\");\n\ndeferred.extend(\n\t\"cb\",\n\tfunction (cb) {\n\t\tif (!isValue(cb)) return this;\n\t\tcallable(cb);\n\t\tnextTick(\n\t\t\tfunction () {\n\t\t\t\tif (this.resolved) {\n\t\t\t\t\tif (this.failed) cb(this.value);\n\t\t\t\t\telse cb(null, this.value);\n\t\t\t\t} else {\n\t\t\t\t\tif (!this.pending) this.pending = [];\n\t\t\t\t\tthis.pending.push(\"cb\", [cb]);\n\t\t\t\t}\n\t\t\t}.bind(this)\n\t\t);\n\t\treturn this;\n\t},\n\tfunction (cb) {\n\t\tif (this.failed) cb(this.value);\n\t\telse cb(null, this.value);\n\t},\n\tfunction (cb) {\n\t\tif (!isValue(cb)) return this;\n\t\tcallable(cb);\n\t\tnextTick(\n\t\t\tfunction () {\n\t\t\t\tif (this.failed) cb(this.value);\n\t\t\t\telse cb(null, this.value);\n\t\t\t}.bind(this)\n\t\t);\n\t\treturn this;\n\t}\n);\n","// 'finally' - Promise extension\n//\n// promise.finally(cb)\n//\n// Called on promise resolution returns same promise, doesn't pass any values to\n// provided callback\n\n\"use strict\";\n\nvar callable = require(\"es5-ext/object/valid-callable\")\n  , deferred = require(\"../../deferred\");\n\ndeferred.extend(\n\t\"finally\",\n\tfunction (cb) {\n\t\tcallable(cb);\n\t\tif (!this.pending) this.pending = [];\n\t\tthis.pending.push(\"finally\", arguments);\n\t\treturn this;\n\t},\n\tfunction (cb) { cb(); },\n\tfunction (cb) {\n\t\tcallable(cb)();\n\t\treturn this;\n\t}\n);\n","// 'get' - Promise extension\n//\n// promise.get(name)\n//\n// Resolves with property of resolved object\n\n\"use strict\";\n\nvar value    = require(\"es5-ext/object/valid-value\")\n  , deferred = require(\"../../deferred\");\n\nvar reduce = Array.prototype.reduce, resolve = deferred.resolve, reject = deferred.reject;\n\ndeferred.extend(\n\t\"get\",\n\tfunction (/* …name*/) {\n\t\tvar def;\n\t\tif (!this.pending) this.pending = [];\n\t\tdef = deferred();\n\t\tthis.pending.push(\"get\", [arguments, def.resolve, def.reject]);\n\t\treturn def.promise;\n\t},\n\tfunction (args, localResolve, localReject) {\n\t\tvar result;\n\t\tif (this.failed) localReject(this.value);\n\t\ttry {\n\t\t\tresult = reduce.call(\n\t\t\t\targs, function (obj, key) { return value(obj)[String(key)]; }, this.value\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tlocalReject(e);\n\t\t\treturn;\n\t\t}\n\t\tlocalResolve(result);\n\t},\n\tfunction (/* …name*/) {\n\t\tvar result;\n\t\tif (this.failed) return this;\n\t\ttry {\n\t\t\tresult = reduce.call(\n\t\t\t\targuments, function (obj, key) { return value(obj)[String(key)]; }, this.value\n\t\t\t);\n\t\t}\n\t\tcatch (e) { return reject(e); }\n\t\treturn resolve(result);\n\t}\n);\n","/* eslint max-statements: \"off\" */\n\n// 'invokeAsync' - Promise extension\n//\n// promise.invokeAsync(name[, arg0[, arg1[, ...]]])\n//\n// On resolved object calls asynchronous method that takes callback\n// (Node.js style).\n// Do not pass callback, it's handled by internal implementation.\n// 'name' can be method name or method itself.\n\n\"use strict\";\n\nvar toArray          = require(\"es5-ext/array/to-array\")\n  , isValue          = require(\"es5-ext/object/is-value\")\n  , isCallable       = require(\"es5-ext/object/is-callable\")\n  , deferred         = require(\"../../deferred\")\n  , isPromise        = require(\"../../is-promise\")\n  , processArguments = require(\"../_process-arguments\");\n\nvar slice = Array.prototype.slice\n  , apply = Function.prototype.apply\n  , reject = deferred.reject\n  , applyFn;\n\napplyFn = function (fn, args, localResolve, localReject) {\n\tvar result;\n\tif (fn.returnsPromise) {\n\t\ttry {\n\t\t\tresult = apply.call(fn, this, args);\n\t\t} catch (e) {\n\t\t\tlocalReject(e);\n\t\t\treturn;\n\t\t}\n\t\tlocalResolve(result);\n\t\treturn;\n\t}\n\targs = toArray(args).concat(function (error, localResult) {\n\t\tif (isValue(error)) {\n\t\t\tlocalReject(error);\n\t\t} else {\n\t\t\tlocalResolve(arguments.length > 2 ? slice.call(arguments, 1) : localResult);\n\t\t}\n\t});\n\ttry { apply.call(fn, this, args); }\n\tcatch (e2) { localReject(e2); }\n};\n\ndeferred.extend(\n\t\"invokeAsync\",\n\tfunction (methodIgnored/*, …args*/) {\n\t\tvar def;\n\t\tif (!this.pending) this.pending = [];\n\t\tdef = deferred();\n\t\tthis.pending.push(\"invokeAsync\", [arguments, def.resolve, def.reject]);\n\t\treturn def.promise;\n\t},\n\tfunction (args, localResolve, localReject) {\n\t\tvar fn;\n\t\tif (this.failed) {\n\t\t\tlocalReject(this.value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isValue(this.value)) {\n\t\t\tlocalReject(new TypeError(\"Cannot use null or undefined\"));\n\t\t\treturn;\n\t\t}\n\n\t\tfn = args[0];\n\t\tif (!isCallable(fn)) {\n\t\t\tfn = String(fn);\n\t\t\tif (!isCallable(this.value[fn])) {\n\t\t\t\tlocalReject(new TypeError(fn + \" is not a function\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfn = this.value[fn];\n\t\t}\n\n\t\targs = processArguments(slice.call(args, 1));\n\t\tif (isPromise(args)) {\n\t\t\tif (args.failed) {\n\t\t\t\tlocalReject(args.value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\targs.done(\n\t\t\t\tfunction (argsResolved) {\n\t\t\t\t\tapplyFn.call(this, fn, argsResolved, localResolve, localReject);\n\t\t\t\t}.bind(this.value),\n\t\t\t\tlocalReject\n\t\t\t);\n\t\t} else {\n\t\t\tapplyFn.call(this.value, fn, args, localResolve, localReject);\n\t\t}\n\t},\n\tfunction (method/*, …args*/) {\n\t\tvar args, def;\n\t\tif (this.failed) return this;\n\n\t\tif (!isValue(this.value)) {\n\t\t\treturn reject(new TypeError(\"Cannot use null or undefined\"));\n\t\t}\n\n\t\tif (!isCallable(method)) {\n\t\t\tmethod = String(method);\n\t\t\tif (!isCallable(this.value[method])) {\n\t\t\t\treturn reject(new TypeError(method + \" is not a function\"));\n\t\t\t}\n\t\t\tmethod = this.value[method];\n\t\t}\n\n\t\targs = processArguments(slice.call(arguments, 1));\n\t\tif (isPromise(args)) {\n\t\t\tif (args.failed) return args;\n\t\t\tdef = deferred();\n\t\t\targs.done(\n\t\t\t\tfunction (argsResolved) {\n\t\t\t\t\tapplyFn.call(this, method, argsResolved, def.resolve, def.reject);\n\t\t\t\t}.bind(this.value),\n\t\t\t\tdef.reject\n\t\t\t);\n\t\t} else if (method.returnsPromise) {\n\t\t\treturn applyFn.call(this.value, method, args, deferred, reject);\n\t\t} else {\n\t\t\tdef = deferred();\n\t\t\tapplyFn.call(this.value, method, args, def.resolve, def.reject);\n\t\t}\n\t\treturn def.promise;\n\t}\n);\n","/* eslint max-statements: \"off\" */\n\n// 'invoke' - Promise extension\n//\n// promise.invoke(name[, arg0[, arg1[, ...]]])\n//\n// On resolved object calls method that returns immediately.\n// 'name' can be method name or method itself.\n\n\"use strict\";\n\nvar isValue          = require(\"es5-ext/object/is-value\")\n  , isCallable       = require(\"es5-ext/object/is-callable\")\n  , deferred         = require(\"../../deferred\")\n  , isPromise        = require(\"../../is-promise\")\n  , processArguments = require(\"../_process-arguments\");\n\nvar slice = Array.prototype.slice\n  , apply = Function.prototype.apply\n  , reject = deferred.reject\n  , applyFn;\n\napplyFn = function (fn, args, localResolve, localReject) {\n\tvar value;\n\ttry { value = apply.call(fn, this, args); }\n\tcatch (e) { return localReject(e); }\n\treturn localResolve(value);\n};\n\ndeferred.extend(\n\t\"invoke\",\n\tfunction (methodIgnored/*, …args*/) {\n\t\tvar def;\n\t\tif (!this.pending) this.pending = [];\n\t\tdef = deferred();\n\t\tthis.pending.push(\"invoke\", [arguments, def.resolve, def.reject]);\n\t\treturn def.promise;\n\t},\n\tfunction (args, localResolve, localReject) {\n\t\tvar fn;\n\t\tif (this.failed) {\n\t\t\tlocalReject(this.value);\n\t\t\treturn;\n\t\t}\n\n\t\tif (!isValue(this.value)) {\n\t\t\tlocalReject(new TypeError(\"Cannot use null or undefined\"));\n\t\t\treturn;\n\t\t}\n\n\t\tfn = args[0];\n\t\tif (!isCallable(fn)) {\n\t\t\tfn = String(fn);\n\t\t\tif (!isCallable(this.value[fn])) {\n\t\t\t\tlocalReject(new TypeError(fn + \" is not a function\"));\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfn = this.value[fn];\n\t\t}\n\n\t\targs = processArguments(slice.call(args, 1));\n\t\tif (isPromise(args)) {\n\t\t\tif (args.failed) {\n\t\t\t\tlocalReject(args.value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\targs.done(\n\t\t\t\tfunction (argsResolved) {\n\t\t\t\t\tapplyFn.call(this, fn, argsResolved, localResolve, localReject);\n\t\t\t\t}.bind(this.value),\n\t\t\t\tlocalReject\n\t\t\t);\n\t\t} else {\n\t\t\tapplyFn.call(this.value, fn, args, localResolve, localReject);\n\t\t}\n\t},\n\tfunction (method/*, …args*/) {\n\t\tvar args, def;\n\t\tif (this.failed) return this;\n\n\t\tif (!isValue(this.value)) {\n\t\t\treturn reject(new TypeError(\"Cannot use null or undefined\"));\n\t\t}\n\n\t\tif (!isCallable(method)) {\n\t\t\tmethod = String(method);\n\t\t\tif (!isCallable(this.value[method])) {\n\t\t\t\treturn reject(new TypeError(method + \" is not a function\"));\n\t\t\t}\n\t\t\tmethod = this.value[method];\n\t\t}\n\n\t\targs = processArguments(slice.call(arguments, 1));\n\t\tif (isPromise(args)) {\n\t\t\tif (args.failed) return args;\n\t\t\tdef = deferred();\n\t\t\targs.done(\n\t\t\t\tfunction (argsResolved) {\n\t\t\t\t\tapplyFn.call(this, method, argsResolved, def.resolve, def.reject);\n\t\t\t\t}.bind(this.value),\n\t\t\t\tdef.reject\n\t\t\t);\n\t\t\treturn def.promise;\n\t\t}\n\t\treturn applyFn.call(this.value, method, args, deferred, reject);\n\t}\n);\n","// 'map' - Promise extension\n//\n// promise.map(fn[, thisArg[, concurrentLimit]])\n//\n// Promise aware map for array-like results\n\n\"use strict\";\n\nrequire(\"./_array\")(\"map\", require(\"../array/map\"));\n","// 'reduce' - Promise extension\n//\n// promise.reduce(fn[, initial])\n//\n// Promise aware reduce for array-like results\n\n\"use strict\";\n\nrequire(\"./_array\")(\"reduce\", require(\"../array/reduce\"));\n","// 'some' - Promise extension\n//\n// promise.some(fn[, thisArg])\n//\n// Promise aware some for array-like results\n\n\"use strict\";\n\nrequire(\"./_array\")(\"some\", require(\"../array/some\"));\n","// 'spread' - Promise extensions\n//\n// promise.spread(onsuccess, onerror)\n//\n// Matches eventual list result onto function arguments,\n// otherwise works same as 'then' (promise function itself)\n\n\"use strict\";\n\nvar spread     = require(\"es5-ext/function/#/spread\")\n  , isValue    = require(\"es5-ext/object/is-value\")\n  , callable   = require(\"es5-ext/object/valid-callable\")\n  , isCallable = require(\"es5-ext/object/is-callable\")\n  , isPromise  = require(\"../../is-promise\")\n  , deferred   = require(\"../../deferred\");\n\nvar resolve = deferred.resolve, reject = deferred.reject;\n\ndeferred.extend(\n\t\"spread\",\n\tfunction (win, fail) {\n\t\tvar def;\n\t\tif (isValue(win)) callable(win);\n\t\tif (!win && !isValue(fail)) return this;\n\t\tif (!this.pending) this.pending = [];\n\t\tdef = deferred();\n\t\tthis.pending.push(\"spread\", [win, fail, def.resolve, def.reject]);\n\t\treturn def.promise;\n\t},\n\tfunction (win, fail, localResolve, localReject) {\n\t\tvar cb, value;\n\t\tcb = this.failed ? fail : win;\n\t\tif (!isValue(cb)) {\n\t\t\tif (this.failed) localReject(this.value);\n\t\t\telse localResolve(this.value);\n\t\t}\n\t\tif (isCallable(cb)) {\n\t\t\tif (isPromise(cb)) {\n\t\t\t\tif (cb.resolved) {\n\t\t\t\t\tif (cb.failed) localReject(cb.value);\n\t\t\t\t\telse localResolve(cb.value);\n\t\t\t\t} else {\n\t\t\t\t\tcb.done(localResolve, localReject);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!this.failed) cb = spread.call(cb);\n\t\t\ttry {\n\t\t\t\tvalue = cb(this.value);\n\t\t\t} catch (e) {\n\t\t\t\tlocalReject(e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tlocalResolve(value);\n\t\t} else {\n\t\t\tlocalResolve(cb);\n\t\t}\n\t},\n\tfunction (win, fail) {\n\t\tvar cb, value;\n\t\tcb = this.failed ? fail : win;\n\t\tif (!isValue(cb)) return this;\n\t\tif (isCallable(cb)) {\n\t\t\tif (isPromise(cb)) return cb;\n\t\t\tif (!this.failed) cb = spread.call(cb);\n\t\t\ttry { value = cb(this.value); }\n\t\t\tcatch (e) { return reject(e); }\n\t\t\treturn resolve(value);\n\t\t}\n\t\treturn resolve(cb);\n\t}\n);\n","// 'timeout' - Promise extension\n//\n// promise.timeout(ms)\n//\n// Resolves with resolution value of context promise assuming it settles before timeout time passes\n// Otherwise resolves with timeout rejection\n\n\"use strict\";\n\nvar customError   = require(\"es5-ext/error/custom\")\n  , isValue       = require(\"es5-ext/object/is-value\")\n  , nextTick      = require(\"next-tick\")\n  , ensureTimeout = require(\"timers-ext/valid-timeout\")\n  , deferred      = require(\"../../deferred\");\n\ndeferred.extend(\n\t\"timeout\",\n\tfunction (timeout) {\n\t\tvar def;\n\t\tvar callback = function () {\n\t\t\tif (this.resolved) return;\n\t\t\tdef.reject(customError(\"Operation timeout\", \"DEFERRED_TIMEOUT\"));\n\t\t}.bind(this);\n\t\tif (isValue(timeout)) setTimeout(callback, ensureTimeout(timeout));\n\t\telse nextTick(callback);\n\t\tif (!this.pending) this.pending = [];\n\t\tdef = deferred();\n\t\tthis.pending.push(\"timeout\", [def.promise, def.resolve]);\n\t\treturn def.promise;\n\t},\n\tfunction (promise, resolve) { if (!promise.resolved) resolve(this); },\n\tfunction (timeout) {\n\t\tif (isValue(timeout)) ensureTimeout(timeout);\n\t\treturn this;\n\t}\n);\n","// This construct deferred with all needed goodies that are being exported\n// when we import 'deferred' by main name.\n// All available promise extensions are also initialized.\n\n\"use strict\";\n\nvar call   = Function.prototype.call\n  , assign = require(\"es5-ext/object/assign\");\n\nmodule.exports = assign(\n\trequire(\"./deferred\"),\n\t{\n\t\tinvokeAsync: require(\"./invoke-async\"),\n\t\tisPromise: require(\"./is-promise\"),\n\t\tdynamicQueue: require(\"./dynamic-queue\"),\n\t\tvalidPromise: require(\"./valid-promise\"),\n\t\tcallAsync: call.bind(require(\"./ext/function/call-async\")),\n\t\tdelay: call.bind(require(\"./ext/function/delay\")),\n\t\tgate: call.bind(require(\"./ext/function/gate\")),\n\t\tmonitor: require(\"./monitor\"),\n\t\tpromisify: call.bind(require(\"./ext/function/promisify\")),\n\t\tpromisifySync: call.bind(require(\"./ext/function/promisify-sync\")),\n\t\tevery: call.bind(require(\"./ext/array/every\")),\n\t\tfind: call.bind(require(\"./ext/array/find\")),\n\t\tmap: call.bind(require(\"./ext/array/map\")),\n\t\treduce: call.bind(require(\"./ext/array/reduce\")),\n\t\tsome: call.bind(require(\"./ext/array/some\"))\n\t},\n\trequire(\"./profiler\")\n);\n\nrequire(\"./ext/promise/aside\");\nrequire(\"./ext/promise/catch\");\nrequire(\"./ext/promise/cb\");\nrequire(\"./ext/promise/finally\");\nrequire(\"./ext/promise/get\");\nrequire(\"./ext/promise/invoke\");\nrequire(\"./ext/promise/invoke-async\");\nrequire(\"./ext/promise/map\");\nrequire(\"./ext/promise/reduce\");\nrequire(\"./ext/promise/spread\");\nrequire(\"./ext/promise/some\");\nrequire(\"./ext/promise/timeout\");\n","// Invoke asynchronous function\n\n\"use strict\";\n\nvar isCallable = require(\"es5-ext/object/is-callable\")\n  , callable   = require(\"es5-ext/object/valid-callable\")\n  , value      = require(\"es5-ext/object/valid-value\")\n  , callAsync  = require(\"./ext/function/call-async\")._base\n  , slice      = Array.prototype.slice;\n\nmodule.exports = function (obj, fn/*, …args*/) {\n\tvalue(obj);\n\tif (!isCallable(fn)) fn = callable(obj[fn]);\n\treturn callAsync(fn, null, obj, slice.call(arguments, 2));\n};\n","// Whether given object is a promise\n\n\"use strict\";\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"function\" && typeof value.then === \"function\" && value.end !== value.done\n\t);\n};\n","// Promise aware Array's some\n\n\"use strict\";\n\nvar assign          = require(\"es5-ext/object/assign\")\n  , isValue         = require(\"es5-ext/object/is-value\")\n  , ensureValue     = require(\"es5-ext/object/valid-value\")\n  , callable        = require(\"es5-ext/object/valid-callable\")\n  , toNaturalNumber = require(\"es5-ext/number/to-pos-integer\")\n  , deferred        = require(\"../deferred\")\n  , isPromise       = require(\"../is-promise\")\n  , assimilate      = require(\"../assimilate\");\n\nvar call = Function.prototype.call, resolve = deferred.resolve;\n\nmodule.exports = function (resolvent) {\n\tvar Iterator = function (list, cb, context) {\n\t\tthis.list = list;\n\t\tthis.cb = cb;\n\t\tthis.context = context;\n\t\tthis.length = toNaturalNumber(list.length);\n\n\t\twhile (this.current < this.length) {\n\t\t\tif (this.current in list) {\n\t\t\t\tassign(this, deferred());\n\t\t\t\tthis.processCb = this.processCb.bind(this);\n\t\t\t\tthis.processValue = this.processValue.bind(this);\n\t\t\t\tthis.continue();\n\t\t\t\treturn this.promise;\n\t\t\t}\n\t\t\t++this.current;\n\t\t}\n\t\treturn resolve(!resolvent);\n\t};\n\n\tIterator.prototype = {\n\t\tcurrent: 0,\n\t\tstate: false,\n\t\tcontinue: function () {\n\t\t\tvar result;\n\t\t\twhile (!this.state) {\n\t\t\t\tresult = this.process();\n\t\t\t\tif (this.state !== \"cb\") break;\n\t\t\t\tresult = this.processCb(result);\n\t\t\t\tif (this.state !== \"value\") break;\n\t\t\t\tthis.processValue(result);\n\t\t\t}\n\t\t},\n\t\tprocess: function () {\n\t\t\tvar value = assimilate(this.list[this.current]);\n\t\t\tif (isPromise(value)) {\n\t\t\t\tif (!value.resolved) {\n\t\t\t\t\tvalue.done(\n\t\t\t\t\t\tfunction (result) {\n\t\t\t\t\t\t\tresult = this.processCb(result);\n\t\t\t\t\t\t\tif (this.state !== \"value\") return;\n\t\t\t\t\t\t\tthis.processValue(result);\n\t\t\t\t\t\t\tif (!this.state) this.continue();\n\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\tthis.reject\n\t\t\t\t\t);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif (value.failed) {\n\t\t\t\t\tthis.reject(value.value);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvalue = value.value;\n\t\t\t}\n\t\t\tthis.state = \"cb\";\n\t\t\treturn value;\n\t\t},\n\t\tprocessCb: function (value) {\n\t\t\tif (this.cb) {\n\t\t\t\ttry {\n\t\t\t\t\tvalue = call.call(this.cb, this.context, value, this.current, this.list);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tthis.reject(e);\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tvalue = assimilate(value);\n\t\t\t\tif (isPromise(value)) {\n\t\t\t\t\tif (!value.resolved) {\n\t\t\t\t\t\tvalue.done(\n\t\t\t\t\t\t\tfunction (result) {\n\t\t\t\t\t\t\t\tthis.state = \"value\";\n\t\t\t\t\t\t\t\tthis.processValue(result);\n\t\t\t\t\t\t\t\tif (!this.state) this.continue();\n\t\t\t\t\t\t\t}.bind(this),\n\t\t\t\t\t\t\tthis.reject\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tif (value.failed) {\n\t\t\t\t\t\tthis.reject(value.value);\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\tvalue = value.value;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.state = \"value\";\n\t\t\treturn value;\n\t\t},\n\t\tprocessValue: function (value) {\n\t\t\tif (Boolean(value) === resolvent) {\n\t\t\t\tthis.resolve(resolvent);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\twhile (++this.current < this.length) {\n\t\t\t\tif (this.current in this.list) {\n\t\t\t\t\tthis.state = false;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.resolve(!resolvent);\n\t\t}\n\t};\n\n\treturn function (cb/*, thisArg*/) {\n\t\tensureValue(this);\n\t\tif (isValue(cb)) callable(cb);\n\n\t\treturn new Iterator(this, cb, arguments[1]);\n\t};\n};\n","/* eslint no-console: \"off\" */\n\n// Run if you want to monitor unresolved promises (in properly working\n// application there should be no promises that are never resolved)\n\n\"use strict\";\n\nvar max        = Math.max\n  , isValue    = require(\"es5-ext/object/is-value\")\n  , callable   = require(\"es5-ext/object/valid-callable\")\n  , isCallable = require(\"es5-ext/object/is-callable\")\n  , toPosInt   = require(\"es5-ext/number/to-pos-integer\")\n  , deferred   = require(\"./deferred\");\n\nexports = module.exports = function (timeout, cb) {\n\tif (timeout === false) {\n\t\t// Cancel monitor\n\t\tdelete deferred._monitor;\n\t\tdelete exports.timeout;\n\t\tdelete exports.callback;\n\t\treturn;\n\t}\n\texports.timeout = timeout = max(toPosInt(timeout) || 5000, 50);\n\tif (isValue(cb)) {\n\t\tcallable(cb);\n\t} else if (typeof console !== \"undefined\" && console && isCallable(console.error)) {\n\t\tcb = function (e) {\n\t\t\tconsole.error(\n\t\t\t\t(e.stack && e.stack.toString()) || \"Unresolved promise: no stack available\"\n\t\t\t);\n\t\t};\n\t}\n\texports.callback = cb;\n\n\tdeferred._monitor = function () {\n\t\tvar e = new Error(\"Unresolved promise\");\n\t\treturn setTimeout(function () { if (cb) cb(e); }, timeout);\n\t};\n};\n","\"use strict\";\n\nvar partial  = require(\"es5-ext/function/#/partial\")\n  , forEach  = require(\"es5-ext/object/for-each\")\n  , pad      = require(\"es5-ext/string/#/pad\")\n  , deferred = require(\"./deferred\");\n\nvar resolved, rStats, unresolved, uStats, profile;\n\nexports.profile = function () {\n\tresolved = 0;\n\trStats = {};\n\tunresolved = 0;\n\tuStats = {};\n\tdeferred._profile = profile;\n};\n\nprofile = function (isResolved) {\n\tvar stack, data;\n\n\tif (isResolved) {\n\t\t++resolved;\n\t\tdata = rStats;\n\t} else {\n\t\t++unresolved;\n\t\tdata = uStats;\n\t}\n\n\tstack = new Error().stack;\n\tif (\n\t\t!stack.split(\"\\n\").slice(3).some(function (line) {\n\t\t\tif (\n\t\t\t\tline.search(/[/\\\\]deferred[/\\\\]/) === -1 &&\n\t\t\t\tline.search(/[/\\\\]es5-ext[/\\\\]/) === -1 &&\n\t\t\t\tline.indexOf(\" (native)\") === -1\n\t\t\t) {\n\t\t\t\tline = line.replace(/\\n/g, \"\\\\n\").trim();\n\t\t\t\tif (!data[line]) {\n\t\t\t\t\tdata[line] = { count: 0 };\n\t\t\t\t}\n\t\t\t\t++data[line].count;\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t})\n\t) {\n\t\tif (!data.unknown) {\n\t\t\tdata.unknown = { count: 0, stack: stack };\n\t\t}\n\t\t++data.unknown.count;\n\t}\n};\n\nexports.profileEnd = function () {\n\tvar total, lpad, log = \"\";\n\n\tif (!deferred._profile) {\n\t\tthrow new Error(\"Deferred profiler was not initialized\");\n\t}\n\tdelete deferred._profile;\n\n\tlog += \"------------------------------------------------------------\\n\";\n\tlog += \"Deferred usage statistics:\\n\\n\";\n\n\ttotal = String(resolved + unresolved);\n\tlpad = partial.call(pad, \" \", total.length);\n\tlog += total + \" Total promises initialized\\n\";\n\tlog += lpad.call(unresolved) + \" Initialized as Unresolved\\n\";\n\tlog += lpad.call(resolved) + \" Initialized as Resolved\\n\";\n\n\tif (unresolved) {\n\t\tlog += \"\\nUnresolved promises were initialized at:\\n\";\n\t\tforEach(\n\t\t\tuStats,\n\t\t\tfunction (data, name) { log += lpad.call(data.count) + \" \" + name + \"\\n\"; },\n\t\t\tnull,\n\t\t\tfunction (data1, data2) { return this[data2].count - this[data1].count; }\n\t\t);\n\t}\n\n\tif (resolved) {\n\t\tlog += \"\\nResolved promises were initialized at:\\n\";\n\t\tforEach(\n\t\t\trStats,\n\t\t\tfunction (data, name) { log += lpad.call(data.count) + \" \" + name + \"\\n\"; },\n\t\t\tnull,\n\t\t\tfunction (data1, data2) { return this[data2].count - this[data1].count; }\n\t\t);\n\t}\n\tlog += \"------------------------------------------------------------\\n\";\n\n\treturn {\n\t\tlog: log,\n\t\tresolved: { count: resolved, stats: rStats },\n\t\tunresolved: { count: unresolved, stats: uStats }\n\t};\n};\n","\"use strict\";\n\nvar isPromise = require(\"./is-promise\");\n\nmodule.exports = function (value) {\n\tif (!isPromise(value)) {\n\t\tthrow new TypeError(value + \" is not a promise object\");\n\t}\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Array.from : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar from = Array.from, arr, result;\n\tif (typeof from !== \"function\") return false;\n\tarr = [\"raz\", \"dwa\"];\n\tresult = from(arr);\n\treturn Boolean(result && result !== arr && result[1] === \"dwa\");\n};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isArguments    = require(\"../../function/is-arguments\")\n  , isFunction     = require(\"../../function/is-function\")\n  , toPosInt       = require(\"../../number/to-pos-integer\")\n  , callable       = require(\"../../object/valid-callable\")\n  , validValue     = require(\"../../object/valid-value\")\n  , isValue        = require(\"../../object/is-value\")\n  , isString       = require(\"../../string/is-string\")\n  , isArray        = Array.isArray\n  , call           = Function.prototype.call\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null }\n  , defineProperty = Object.defineProperty;\n\n// eslint-disable-next-line complexity, max-lines-per-function\nmodule.exports = function (arrayLike/*, mapFn, thisArg*/) {\n\tvar mapFn = arguments[1]\n\t  , thisArg = arguments[2]\n\t  , Context\n\t  , i\n\t  , j\n\t  , arr\n\t  , length\n\t  , code\n\t  , iterator\n\t  , result\n\t  , getIterator\n\t  , value;\n\n\tarrayLike = Object(validValue(arrayLike));\n\n\tif (isValue(mapFn)) callable(mapFn);\n\tif (!this || this === Array || !isFunction(this)) {\n\t\t// Result: Plain array\n\t\tif (!mapFn) {\n\t\t\tif (isArguments(arrayLike)) {\n\t\t\t\t// Source: Arguments\n\t\t\t\tlength = arrayLike.length;\n\t\t\t\tif (length !== 1) return Array.apply(null, arrayLike);\n\t\t\t\tarr = new Array(1);\n\t\t\t\tarr[0] = arrayLike[0];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t\tif (isArray(arrayLike)) {\n\t\t\t\t// Source: Array\n\t\t\t\tarr = new Array((length = arrayLike.length));\n\t\t\t\tfor (i = 0; i < length; ++i) arr[i] = arrayLike[i];\n\t\t\t\treturn arr;\n\t\t\t}\n\t\t}\n\t\tarr = [];\n\t} else {\n\t\t// Result: Non plain array\n\t\tContext = this;\n\t}\n\n\tif (!isArray(arrayLike)) {\n\t\tif ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {\n\t\t\t// Source: Iterator\n\t\t\titerator = callable(getIterator).call(arrayLike);\n\t\t\tif (Context) arr = new Context();\n\t\t\tresult = iterator.next();\n\t\t\ti = 0;\n\t\t\twhile (!result.done) {\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[i] = value;\n\t\t\t\t}\n\t\t\t\tresult = iterator.next();\n\t\t\t\t++i;\n\t\t\t}\n\t\t\tlength = i;\n\t\t} else if (isString(arrayLike)) {\n\t\t\t// Source: String\n\t\t\tlength = arrayLike.length;\n\t\t\tif (Context) arr = new Context();\n\t\t\tfor (i = 0, j = 0; i < length; ++i) {\n\t\t\t\tvalue = arrayLike[i];\n\t\t\t\tif (i + 1 < length) {\n\t\t\t\t\tcode = value.charCodeAt(0);\n\t\t\t\t\t// eslint-disable-next-line max-depth\n\t\t\t\t\tif (code >= 0xd800 && code <= 0xdbff) value += arrayLike[++i];\n\t\t\t\t}\n\t\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, value, j) : value;\n\t\t\t\tif (Context) {\n\t\t\t\t\tdesc.value = value;\n\t\t\t\t\tdefineProperty(arr, j, desc);\n\t\t\t\t} else {\n\t\t\t\t\tarr[j] = value;\n\t\t\t\t}\n\t\t\t\t++j;\n\t\t\t}\n\t\t\tlength = j;\n\t\t}\n\t}\n\tif (length === undefined) {\n\t\t// Source: array or array-like\n\t\tlength = toPosInt(arrayLike.length);\n\t\tif (Context) arr = new Context(length);\n\t\tfor (i = 0; i < length; ++i) {\n\t\t\tvalue = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];\n\t\t\tif (Context) {\n\t\t\t\tdesc.value = value;\n\t\t\t\tdefineProperty(arr, i, desc);\n\t\t\t} else {\n\t\t\t\tarr[i] = value;\n\t\t\t}\n\t\t}\n\t}\n\tif (Context) {\n\t\tdesc.value = null;\n\t\tarr.length = length;\n\t}\n\treturn arr;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Array.of : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar of = Array.of, result;\n\tif (typeof of !== \"function\") return false;\n\tresult = of(\"foo\", \"bar\");\n\treturn Boolean(result && result[1] === \"bar\");\n};\n","\"use strict\";\n\nvar isFunction     = require(\"../../function/is-function\")\n  , slice          = Array.prototype.slice\n  , defineProperty = Object.defineProperty\n  , desc           = { configurable: true, enumerable: true, writable: true, value: null };\n\nmodule.exports = function (/* …items*/) {\n\tvar result, i, length;\n\tif (!this || this === Array || !isFunction(this)) return slice.call(arguments);\n\tresult = new this((length = arguments.length));\n\tfor (i = 0; i < length; ++i) {\n\t\tdesc.value = arguments[i];\n\t\tdefineProperty(result, i, desc);\n\t}\n\tdesc.value = null;\n\tresult.length = length;\n\treturn result;\n};\n","\"use strict\";\n\nvar from    = require(\"./from\")\n  , isArray = Array.isArray;\n\nmodule.exports = function (arrayLike) { return isArray(arrayLike) ? arrayLike : from(arrayLike); };\n","\"use strict\";\n\nvar assign            = require(\"../object/assign\")\n  , isObject          = require(\"../object/is-object\")\n  , isValue           = require(\"../object/is-value\")\n  , captureStackTrace = Error.captureStackTrace;\n\nmodule.exports = function (message/*, code, ext*/) {\n\tvar err = new Error(message), code = arguments[1], ext = arguments[2];\n\tif (!isValue(ext)) {\n\t\tif (isObject(code)) {\n\t\t\text = code;\n\t\t\tcode = null;\n\t\t}\n\t}\n\tif (isValue(ext)) assign(err, ext);\n\tif (isValue(code)) err.code = code;\n\tif (captureStackTrace) captureStackTrace(err, module.exports);\n\treturn err;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(new Error());\n\nmodule.exports = function (value) {\n\treturn (value && (value instanceof Error || objToString.call(value) === id)) || false;\n};\n","\"use strict\";\n\nvar callable     = require(\"../../object/valid-callable\")\n  , aFrom        = require(\"../../array/from\")\n  , defineLength = require(\"../_define-length\")\n  , apply        = Function.prototype.apply;\n\nmodule.exports = function (/* …args*/) {\n\tvar fn = callable(this), args = aFrom(arguments);\n\n\treturn defineLength(function () {\n\t\treturn apply.call(fn, this, args.concat(aFrom(arguments)));\n\t}, fn.length - args.length);\n};\n","\"use strict\";\n\nvar callable = require(\"../../object/valid-callable\")\n  , apply    = Function.prototype.apply;\n\nmodule.exports = function () {\n\tvar fn = callable(this);\n\treturn function (args) { return apply.call(fn, this, args); };\n};\n","\"use strict\";\n\nvar toPosInt = require(\"../number/to-pos-integer\");\n\nvar test = function (arg1, arg2) { return arg2; };\n\nvar desc, defineProperty, generate, mixin;\n\ntry {\n\tObject.defineProperty(test, \"length\", {\n\t\tconfigurable: true,\n\t\twritable: false,\n\t\tenumerable: false,\n\t\tvalue: 1\n\t});\n}\ncatch (ignore) {}\n\nif (test.length === 1) {\n\t// ES6\n\tdesc = { configurable: true, writable: false, enumerable: false };\n\tdefineProperty = Object.defineProperty;\n\tmodule.exports = function (fn, length) {\n\t\tlength = toPosInt(length);\n\t\tif (fn.length === length) return fn;\n\t\tdesc.value = length;\n\t\treturn defineProperty(fn, \"length\", desc);\n\t};\n} else {\n\tmixin = require(\"../object/mixin\");\n\tgenerate = (function () {\n\t\tvar cache = [];\n\t\treturn function (length) {\n\t\t\tvar args, i = 0;\n\t\t\tif (cache[length]) return cache[length];\n\t\t\targs = [];\n\t\t\twhile (length--) args.push(\"a\" + (++i).toString(36));\n\t\t\t// eslint-disable-next-line no-new-func\n\t\t\treturn new Function(\n\t\t\t\t\"fn\",\n\t\t\t\t\"return function (\" + args.join(\", \") + \") { return fn.apply(this, arguments); };\"\n\t\t\t);\n\t\t};\n\t})();\n\tmodule.exports = function (src, length) {\n\t\tvar target;\n\t\tlength = toPosInt(length);\n\t\tif (src.length === length) return src;\n\t\ttarget = generate(length)(src);\n\t\ttry { mixin(target, src); }\n\t\tcatch (ignore) {}\n\t\treturn target;\n\t};\n}\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , id = objToString.call((function () { return arguments; })());\n\nmodule.exports = function (value) { return objToString.call(value) === id; };\n","\"use strict\";\n\nvar objToString = Object.prototype.toString\n  , isFunctionStringTag = RegExp.prototype.test.bind(/^[object [A-Za-z0-9]*Function]$/);\n\nmodule.exports = function (value) {\n\treturn typeof value === \"function\" && isFunctionStringTag(objToString.call(value));\n};\n","\"use strict\";\n\n// eslint-disable-next-line no-empty-function\nmodule.exports = function () {};\n","\"use strict\";\n\nvar iteratorSymbol = require(\"es6-symbol\").iterator\n  , isValue        = require(\"../object/is-value\")\n  , isArrayLike    = require(\"../object/is-array-like\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\tif (typeof value[iteratorSymbol] === \"function\") return true;\n\treturn isArrayLike(value);\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is-object\")\n  , is       = require(\"./is\");\n\nmodule.exports = function (value) {\n\tif (is(value) && isObject(value)) return value;\n\tthrow new TypeError(value + \" is not an iterable or array-like object\");\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Math.sign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar sign = Math.sign;\n\tif (typeof sign !== \"function\") return false;\n\treturn sign(10) === 1 && sign(-20) === -1;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tvalue = Number(value);\n\tif (isNaN(value) || value === 0) return value;\n\treturn value > 0 ? 1 : -1;\n};\n","\"use strict\";\n\nvar sign  = require(\"../math/sign\")\n  , abs   = Math.abs\n  , floor = Math.floor;\n\nmodule.exports = function (value) {\n\tif (isNaN(value)) return 0;\n\tvalue = Number(value);\n\tif (value === 0 || !isFinite(value)) return value;\n\treturn sign(value) * floor(abs(value));\n};\n","\"use strict\";\n\nvar toInteger = require(\"./to-integer\")\n  , max       = Math.max;\n\nmodule.exports = function (value) { return max(0, toInteger(value)); };\n","// Internal method, used by iteration functions.\n// Calls a function for each key-value pair found in object\n// Optionally takes compareFn to iterate object in specific order\n\n\"use strict\";\n\nvar callable                = require(\"./valid-callable\")\n  , value                   = require(\"./valid-value\")\n  , bind                    = Function.prototype.bind\n  , call                    = Function.prototype.call\n  , keys                    = Object.keys\n  , objPropertyIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nmodule.exports = function (method, defVal) {\n\treturn function (obj, cb/*, thisArg, compareFn*/) {\n\t\tvar list, thisArg = arguments[2], compareFn = arguments[3];\n\t\tobj = Object(value(obj));\n\t\tcallable(cb);\n\n\t\tlist = keys(obj);\n\t\tif (compareFn) {\n\t\t\tlist.sort(typeof compareFn === \"function\" ? bind.call(compareFn, obj) : undefined);\n\t\t}\n\t\tif (typeof method !== \"function\") method = list[method];\n\t\treturn call.call(method, list, function (key, index) {\n\t\t\tif (!objPropertyIsEnumerable.call(obj, key)) return defVal;\n\t\t\treturn call.call(cb, thisArg, obj[key], key, obj, index);\n\t\t});\n\t};\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.assign : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tvar assign = Object.assign, obj;\n\tif (typeof assign !== \"function\") return false;\n\tobj = { foo: \"raz\" };\n\tassign(obj, { bar: \"dwa\" }, { trzy: \"trzy\" });\n\treturn obj.foo + obj.bar + obj.trzy === \"razdwatrzy\";\n};\n","\"use strict\";\n\nvar keys  = require(\"../keys\")\n  , value = require(\"../valid-value\")\n  , max   = Math.max;\n\nmodule.exports = function (dest, src/*, …srcn*/) {\n\tvar error, i, length = max(arguments.length, 2), assign;\n\tdest = Object(value(dest));\n\tassign = function (key) {\n\t\ttry {\n\t\t\tdest[key] = src[key];\n\t\t} catch (e) {\n\t\t\tif (!error) error = e;\n\t\t}\n\t};\n\tfor (i = 1; i < length; ++i) {\n\t\tsrc = arguments[i];\n\t\tkeys(src).forEach(assign);\n\t}\n\tif (error !== undefined) throw error;\n\treturn dest;\n};\n","// Workaround for http://code.google.com/p/v8/issues/detail?id=2804\n\n\"use strict\";\n\nvar create = Object.create, shim;\n\nif (!require(\"./set-prototype-of/is-implemented\")()) {\n\tshim = require(\"./set-prototype-of/shim\");\n}\n\nmodule.exports = (function () {\n\tvar nullObject, polyProps, desc;\n\tif (!shim) return create;\n\tif (shim.level !== 1) return create;\n\n\tnullObject = {};\n\tpolyProps = {};\n\tdesc = { configurable: false, enumerable: false, writable: true, value: undefined };\n\tObject.getOwnPropertyNames(Object.prototype).forEach(function (name) {\n\t\tif (name === \"__proto__\") {\n\t\t\tpolyProps[name] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: undefined\n\t\t\t};\n\t\t\treturn;\n\t\t}\n\t\tpolyProps[name] = desc;\n\t});\n\tObject.defineProperties(nullObject, polyProps);\n\n\tObject.defineProperty(shim, \"nullPolyfill\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: nullObject\n\t});\n\n\treturn function (prototype, props) {\n\t\treturn create(prototype === null ? nullObject : prototype, props);\n\t};\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./_iterate\")(\"forEach\");\n","\"use strict\";\n\nvar isFunction = require(\"../function/is-function\")\n  , isObject   = require(\"./is-object\")\n  , isValue    = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\t(isValue(value) &&\n\t\t\ttypeof value.length === \"number\" &&\n\t\t\t// Just checking ((typeof x === 'object') && (typeof x !== 'function'))\n\t\t\t// won't work right for some cases, e.g.:\n\t\t\t// type of instance of NodeList in Safari is a 'function'\n\t\t\t((isObject(value) && !isFunction(value)) || typeof value === \"string\")) ||\n\t\tfalse\n\t);\n};\n","// Deprecated\n\n\"use strict\";\n\nmodule.exports = function (obj) { return typeof obj === \"function\"; };\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar map = { function: true, object: true };\n\nmodule.exports = function (value) { return (isValue(value) && map[typeof value]) || false; };\n","\"use strict\";\n\nvar _undefined = require(\"../function/noop\")(); // Support ES3 engines\n\nmodule.exports = function (val) { return val !== _undefined && val !== null; };\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.keys : require(\"./shim\");\n","\"use strict\";\n\nmodule.exports = function () {\n\ttry {\n\t\tObject.keys(\"primitive\");\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\nvar isValue = require(\"../is-value\");\n\nvar keys = Object.keys;\n\nmodule.exports = function (object) { return keys(isValue(object) ? Object(object) : object); };\n","\"use strict\";\n\nvar value                    = require(\"./valid-value\")\n  , defineProperty           = Object.defineProperty\n  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor\n  , getOwnPropertyNames      = Object.getOwnPropertyNames\n  , getOwnPropertySymbols    = Object.getOwnPropertySymbols;\n\nmodule.exports = function (target, source) {\n\tvar error, sourceObject = Object(value(source));\n\ttarget = Object(value(target));\n\tgetOwnPropertyNames(sourceObject).forEach(function (name) {\n\t\ttry {\n\t\t\tdefineProperty(target, name, getOwnPropertyDescriptor(source, name));\n\t\t} catch (e) { error = e; }\n\t});\n\tif (typeof getOwnPropertySymbols === \"function\") {\n\t\tgetOwnPropertySymbols(sourceObject).forEach(function (symbol) {\n\t\t\ttry {\n\t\t\t\tdefineProperty(target, symbol, getOwnPropertyDescriptor(source, symbol));\n\t\t\t} catch (e) { error = e; }\n\t\t});\n\t}\n\tif (error !== undefined) throw error;\n\treturn target;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nvar forEach = Array.prototype.forEach, create = Object.create;\n\nvar process = function (src, obj) {\n\tvar key;\n\tfor (key in src) obj[key] = src[key];\n};\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function (opts1/*, …options*/) {\n\tvar result = create(null);\n\tforEach.call(arguments, function (options) {\n\t\tif (!isValue(options)) return;\n\t\tprocess(Object(options), result);\n\t});\n\treturn result;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? Object.setPrototypeOf : require(\"./shim\");\n","\"use strict\";\n\nvar create = Object.create, getPrototypeOf = Object.getPrototypeOf, plainObject = {};\n\nmodule.exports = function (/* CustomCreate*/) {\n\tvar setPrototypeOf = Object.setPrototypeOf, customCreate = arguments[0] || create;\n\tif (typeof setPrototypeOf !== \"function\") return false;\n\treturn getPrototypeOf(setPrototypeOf(customCreate(null), plainObject)) === plainObject;\n};\n","/* eslint no-proto: \"off\" */\n\n// Big thanks to @WebReflection for sorting this out\n// https://gist.github.com/WebReflection/5593554\n\n\"use strict\";\n\nvar isObject         = require(\"../is-object\")\n  , value            = require(\"../valid-value\")\n  , objIsPrototypeOf = Object.prototype.isPrototypeOf\n  , defineProperty   = Object.defineProperty\n  , nullDesc         = { configurable: true, enumerable: false, writable: true, value: undefined }\n  , validate;\n\nvalidate = function (obj, prototype) {\n\tvalue(obj);\n\tif (prototype === null || isObject(prototype)) return obj;\n\tthrow new TypeError(\"Prototype must be null or an object\");\n};\n\nmodule.exports = (function (status) {\n\tvar fn, set;\n\tif (!status) return null;\n\tif (status.level === 2) {\n\t\tif (status.set) {\n\t\t\tset = status.set;\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tset.call(validate(obj, prototype), prototype);\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t} else {\n\t\t\tfn = function (obj, prototype) {\n\t\t\t\tvalidate(obj, prototype).__proto__ = prototype;\n\t\t\t\treturn obj;\n\t\t\t};\n\t\t}\n\t} else {\n\t\tfn = function self(obj, prototype) {\n\t\t\tvar isNullBase;\n\t\t\tvalidate(obj, prototype);\n\t\t\tisNullBase = objIsPrototypeOf.call(self.nullPolyfill, obj);\n\t\t\tif (isNullBase) delete self.nullPolyfill.__proto__;\n\t\t\tif (prototype === null) prototype = self.nullPolyfill;\n\t\t\tobj.__proto__ = prototype;\n\t\t\tif (isNullBase) defineProperty(self.nullPolyfill, \"__proto__\", nullDesc);\n\t\t\treturn obj;\n\t\t};\n\t}\n\treturn Object.defineProperty(fn, \"level\", {\n\t\tconfigurable: false,\n\t\tenumerable: false,\n\t\twritable: false,\n\t\tvalue: status.level\n\t});\n})(\n\t(function () {\n\t\tvar tmpObj1 = Object.create(null)\n\t\t  , tmpObj2 = {}\n\t\t  , set\n\t\t  , desc = Object.getOwnPropertyDescriptor(Object.prototype, \"__proto__\");\n\n\t\tif (desc) {\n\t\t\ttry {\n\t\t\t\tset = desc.set; // Opera crashes at this point\n\t\t\t\tset.call(tmpObj1, tmpObj2);\n\t\t\t} catch (ignore) {}\n\t\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { set: set, level: 2 };\n\t\t}\n\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 2 };\n\n\t\ttmpObj1 = {};\n\t\ttmpObj1.__proto__ = tmpObj2;\n\t\tif (Object.getPrototypeOf(tmpObj1) === tmpObj2) return { level: 1 };\n\n\t\treturn false;\n\t})()\n);\n\nrequire(\"../create\");\n","\"use strict\";\n\nmodule.exports = function (fn) {\n\tif (typeof fn !== \"function\") throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n","\"use strict\";\n\nvar isObject = require(\"./is-object\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) throw new TypeError(value + \" is not an Object\");\n\treturn value;\n};\n","\"use strict\";\n\nvar isValue = require(\"./is-value\");\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) throw new TypeError(\"Cannot use null or undefined\");\n\treturn value;\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.contains : require(\"./shim\");\n","\"use strict\";\n\nvar str = \"razdwatrzy\";\n\nmodule.exports = function () {\n\tif (typeof str.contains !== \"function\") return false;\n\treturn str.contains(\"dwa\") === true && str.contains(\"foo\") === false;\n};\n","\"use strict\";\n\nvar indexOf = String.prototype.indexOf;\n\nmodule.exports = function (searchString/*, position*/) {\n\treturn indexOf.call(this, searchString, arguments[1]) > -1;\n};\n","\"use strict\";\n\nvar toInteger = require(\"../../number/to-integer\")\n  , value     = require(\"../../object/valid-value\")\n  , repeat    = require(\"./repeat\")\n  , abs       = Math.abs\n  , max       = Math.max;\n\nmodule.exports = function (fill/*, length*/) {\n\tvar self = String(value(this)), sLength = self.length, length = arguments[1];\n\n\tlength = isNaN(length) ? 1 : toInteger(length);\n\tfill = repeat.call(String(fill), abs(length));\n\tif (length >= 0) return fill.slice(0, max(0, length - sLength)) + self;\n\treturn self + (sLength + length >= 0 ? \"\" : fill.slice(length + sLength));\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? String.prototype.repeat : require(\"./shim\");\n","\"use strict\";\n\nvar str = \"foo\";\n\nmodule.exports = function () {\n\tif (typeof str.repeat !== \"function\") return false;\n\treturn str.repeat(2) === \"foofoo\";\n};\n","// Thanks\n// @rauchma http://www.2ality.com/2014/01/efficient-string-repeat.html\n// @mathiasbynens https://github.com/mathiasbynens/String.prototype.repeat/blob/4a4b567def/repeat.js\n\n\"use strict\";\n\nvar value     = require(\"../../../object/valid-value\")\n  , toInteger = require(\"../../../number/to-integer\");\n\nmodule.exports = function (count) {\n\tvar str = String(value(this)), result;\n\tcount = toInteger(count);\n\tif (count < 0) throw new RangeError(\"Count must be >= 0\");\n\tif (!isFinite(count)) throw new RangeError(\"Count must be < ∞\");\n\n\tresult = \"\";\n\twhile (count) {\n\t\tif (count % 2) result += str;\n\t\tif (count > 1) str += str;\n\t\t// eslint-disable-next-line no-bitwise\n\t\tcount >>= 1;\n\t}\n\treturn result;\n};\n","\"use strict\";\n\nvar objToString = Object.prototype.toString, id = objToString.call(\"\");\n\nmodule.exports = function (value) {\n\treturn (\n\t\ttypeof value === \"string\" ||\n\t\t(value &&\n\t\t\ttypeof value === \"object\" &&\n\t\t\t(value instanceof String || objToString.call(value) === id)) ||\n\t\tfalse\n\t);\n};\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")()\n\t? require(\"ext/global-this\").Symbol\n\t: require(\"./polyfill\");\n","\"use strict\";\n\nvar global     = require(\"ext/global-this\")\n  , validTypes = { object: true, symbol: true };\n\nmodule.exports = function () {\n\tvar Symbol = global.Symbol;\n\tvar symbol;\n\tif (typeof Symbol !== \"function\") return false;\n\tsymbol = Symbol(\"test symbol\");\n\ttry { String(symbol); }\n\tcatch (e) { return false; }\n\n\t// Return 'true' also for polyfills\n\tif (!validTypes[typeof Symbol.iterator]) return false;\n\tif (!validTypes[typeof Symbol.toPrimitive]) return false;\n\tif (!validTypes[typeof Symbol.toStringTag]) return false;\n\n\treturn true;\n};\n","\"use strict\";\n\nmodule.exports = function (value) {\n\tif (!value) return false;\n\tif (typeof value === \"symbol\") return true;\n\tif (!value.constructor) return false;\n\tif (value.constructor.name !== \"Symbol\") return false;\n\treturn value[value.constructor.toStringTag] === \"Symbol\";\n};\n","\"use strict\";\n\nvar d = require(\"d\");\n\nvar create = Object.create, defineProperty = Object.defineProperty, objPrototype = Object.prototype;\n\nvar created = create(null);\nmodule.exports = function (desc) {\n\tvar postfix = 0, name, ie11BugWorkaround;\n\twhile (created[desc + (postfix || \"\")]) ++postfix;\n\tdesc += postfix || \"\";\n\tcreated[desc] = true;\n\tname = \"@@\" + desc;\n\tdefineProperty(\n\t\tobjPrototype,\n\t\tname,\n\t\td.gs(null, function (value) {\n\t\t\t// For IE11 issue see:\n\t\t\t// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/\n\t\t\t//    ie11-broken-getters-on-dom-objects\n\t\t\t// https://github.com/medikoo/es6-symbol/issues/12\n\t\t\tif (ie11BugWorkaround) return;\n\t\t\tie11BugWorkaround = true;\n\t\t\tdefineProperty(this, name, d(value));\n\t\t\tie11BugWorkaround = false;\n\t\t})\n\t);\n\treturn name;\n};\n","\"use strict\";\n\nvar d            = require(\"d\")\n  , NativeSymbol = require(\"ext/global-this\").Symbol;\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\t// To ensure proper interoperability with other native functions (e.g. Array.from)\n\t\t// fallback to eventual native implementation of given symbol\n\t\thasInstance: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill(\"hasInstance\")\n\t\t),\n\t\tisConcatSpreadable: d(\n\t\t\t\"\",\n\t\t\t(NativeSymbol && NativeSymbol.isConcatSpreadable) ||\n\t\t\t\tSymbolPolyfill(\"isConcatSpreadable\")\n\t\t),\n\t\titerator: d(\"\", (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill(\"iterator\")),\n\t\tmatch: d(\"\", (NativeSymbol && NativeSymbol.match) || SymbolPolyfill(\"match\")),\n\t\treplace: d(\"\", (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill(\"replace\")),\n\t\tsearch: d(\"\", (NativeSymbol && NativeSymbol.search) || SymbolPolyfill(\"search\")),\n\t\tspecies: d(\"\", (NativeSymbol && NativeSymbol.species) || SymbolPolyfill(\"species\")),\n\t\tsplit: d(\"\", (NativeSymbol && NativeSymbol.split) || SymbolPolyfill(\"split\")),\n\t\ttoPrimitive: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill(\"toPrimitive\")\n\t\t),\n\t\ttoStringTag: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill(\"toStringTag\")\n\t\t),\n\t\tunscopables: d(\n\t\t\t\"\", (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill(\"unscopables\")\n\t\t)\n\t});\n};\n","\"use strict\";\n\nvar d              = require(\"d\")\n  , validateSymbol = require(\"../../../validate-symbol\");\n\nvar registry = Object.create(null);\n\nmodule.exports = function (SymbolPolyfill) {\n\treturn Object.defineProperties(SymbolPolyfill, {\n\t\tfor: d(function (key) {\n\t\t\tif (registry[key]) return registry[key];\n\t\t\treturn (registry[key] = SymbolPolyfill(String(key)));\n\t\t}),\n\t\tkeyFor: d(function (symbol) {\n\t\t\tvar key;\n\t\t\tvalidateSymbol(symbol);\n\t\t\tfor (key in registry) {\n\t\t\t\tif (registry[key] === symbol) return key;\n\t\t\t}\n\t\t\treturn undefined;\n\t\t})\n\t});\n};\n","// ES2015 Symbol polyfill for environments that do not (or partially) support it\n\n\"use strict\";\n\nvar d                    = require(\"d\")\n  , validateSymbol       = require(\"./validate-symbol\")\n  , NativeSymbol         = require(\"ext/global-this\").Symbol\n  , generateName         = require(\"./lib/private/generate-name\")\n  , setupStandardSymbols = require(\"./lib/private/setup/standard-symbols\")\n  , setupSymbolRegistry  = require(\"./lib/private/setup/symbol-registry\");\n\nvar create = Object.create\n  , defineProperties = Object.defineProperties\n  , defineProperty = Object.defineProperty;\n\nvar SymbolPolyfill, HiddenSymbol, isNativeSafe;\n\nif (typeof NativeSymbol === \"function\") {\n\ttry {\n\t\tString(NativeSymbol());\n\t\tisNativeSafe = true;\n\t} catch (ignore) {}\n} else {\n\tNativeSymbol = null;\n}\n\n// Internal constructor (not one exposed) for creating Symbol instances.\n// This one is used to ensure that `someSymbol instanceof Symbol` always return false\nHiddenSymbol = function Symbol(description) {\n\tif (this instanceof HiddenSymbol) throw new TypeError(\"Symbol is not a constructor\");\n\treturn SymbolPolyfill(description);\n};\n\n// Exposed `Symbol` constructor\n// (returns instances of HiddenSymbol)\nmodule.exports = SymbolPolyfill = function Symbol(description) {\n\tvar symbol;\n\tif (this instanceof Symbol) throw new TypeError(\"Symbol is not a constructor\");\n\tif (isNativeSafe) return NativeSymbol(description);\n\tsymbol = create(HiddenSymbol.prototype);\n\tdescription = description === undefined ? \"\" : String(description);\n\treturn defineProperties(symbol, {\n\t\t__description__: d(\"\", description),\n\t\t__name__: d(\"\", generateName(description))\n\t});\n};\n\nsetupStandardSymbols(SymbolPolyfill);\nsetupSymbolRegistry(SymbolPolyfill);\n\n// Internal tweaks for real symbol producer\ndefineProperties(HiddenSymbol.prototype, {\n\tconstructor: d(SymbolPolyfill),\n\ttoString: d(\"\", function () { return this.__name__; })\n});\n\n// Proper implementation of methods exposed on Symbol.prototype\n// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype\ndefineProperties(SymbolPolyfill.prototype, {\n\ttoString: d(function () { return \"Symbol (\" + validateSymbol(this).__description__ + \")\"; }),\n\tvalueOf: d(function () { return validateSymbol(this); })\n});\ndefineProperty(\n\tSymbolPolyfill.prototype,\n\tSymbolPolyfill.toPrimitive,\n\td(\"\", function () {\n\t\tvar symbol = validateSymbol(this);\n\t\tif (typeof symbol === \"symbol\") return symbol;\n\t\treturn symbol.toString();\n\t})\n);\ndefineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d(\"c\", \"Symbol\"));\n\n// Proper implementaton of toPrimitive and toStringTag for returned symbol instances\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toStringTag,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toStringTag])\n);\n\n// Note: It's important to define `toPrimitive` as last one, as some implementations\n// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)\n// And that may invoke error in definition flow:\n// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149\ndefineProperty(\n\tHiddenSymbol.prototype, SymbolPolyfill.toPrimitive,\n\td(\"c\", SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive])\n);\n","\"use strict\";\n\nvar isSymbol = require(\"./is-symbol\");\n\nmodule.exports = function (value) {\n\tif (!isSymbol(value)) throw new TypeError(value + \" is not a symbol\");\n\treturn value;\n};\n","'use strict';\n\nvar d        = require('d')\n  , callable = require('es5-ext/object/valid-callable')\n\n  , apply = Function.prototype.apply, call = Function.prototype.call\n  , create = Object.create, defineProperty = Object.defineProperty\n  , defineProperties = Object.defineProperties\n  , hasOwnProperty = Object.prototype.hasOwnProperty\n  , descriptor = { configurable: true, enumerable: false, writable: true }\n\n  , on, once, off, emit, methods, descriptors, base;\n\non = function (type, listener) {\n\tvar data;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) {\n\t\tdata = descriptor.value = create(null);\n\t\tdefineProperty(this, '__ee__', descriptor);\n\t\tdescriptor.value = null;\n\t} else {\n\t\tdata = this.__ee__;\n\t}\n\tif (!data[type]) data[type] = listener;\n\telse if (typeof data[type] === 'object') data[type].push(listener);\n\telse data[type] = [data[type], listener];\n\n\treturn this;\n};\n\nonce = function (type, listener) {\n\tvar once, self;\n\n\tcallable(listener);\n\tself = this;\n\ton.call(this, type, once = function () {\n\t\toff.call(self, type, once);\n\t\tapply.call(listener, this, arguments);\n\t});\n\n\tonce.__eeOnceListener__ = listener;\n\treturn this;\n};\n\noff = function (type, listener) {\n\tvar data, listeners, candidate, i;\n\n\tcallable(listener);\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return this;\n\tdata = this.__ee__;\n\tif (!data[type]) return this;\n\tlisteners = data[type];\n\n\tif (typeof listeners === 'object') {\n\t\tfor (i = 0; (candidate = listeners[i]); ++i) {\n\t\t\tif ((candidate === listener) ||\n\t\t\t\t\t(candidate.__eeOnceListener__ === listener)) {\n\t\t\t\tif (listeners.length === 2) data[type] = listeners[i ? 0 : 1];\n\t\t\t\telse listeners.splice(i, 1);\n\t\t\t}\n\t\t}\n\t} else {\n\t\tif ((listeners === listener) ||\n\t\t\t\t(listeners.__eeOnceListener__ === listener)) {\n\t\t\tdelete data[type];\n\t\t}\n\t}\n\n\treturn this;\n};\n\nemit = function (type) {\n\tvar i, l, listener, listeners, args;\n\n\tif (!hasOwnProperty.call(this, '__ee__')) return;\n\tlisteners = this.__ee__[type];\n\tif (!listeners) return;\n\n\tif (typeof listeners === 'object') {\n\t\tl = arguments.length;\n\t\targs = new Array(l - 1);\n\t\tfor (i = 1; i < l; ++i) args[i - 1] = arguments[i];\n\n\t\tlisteners = listeners.slice();\n\t\tfor (i = 0; (listener = listeners[i]); ++i) {\n\t\t\tapply.call(listener, this, args);\n\t\t}\n\t} else {\n\t\tswitch (arguments.length) {\n\t\tcase 1:\n\t\t\tcall.call(listeners, this);\n\t\t\tbreak;\n\t\tcase 2:\n\t\t\tcall.call(listeners, this, arguments[1]);\n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tcall.call(listeners, this, arguments[1], arguments[2]);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tl = arguments.length;\n\t\t\targs = new Array(l - 1);\n\t\t\tfor (i = 1; i < l; ++i) {\n\t\t\t\targs[i - 1] = arguments[i];\n\t\t\t}\n\t\t\tapply.call(listeners, this, args);\n\t\t}\n\t}\n};\n\nmethods = {\n\ton: on,\n\tonce: once,\n\toff: off,\n\temit: emit\n};\n\ndescriptors = {\n\ton: d(on),\n\tonce: d(once),\n\toff: d(off),\n\temit: d(emit)\n};\n\nbase = defineProperties({}, descriptors);\n\nmodule.exports = exports = function (o) {\n\treturn (o == null) ? create(base) : defineProperties(Object(o), descriptors);\n};\nexports.methods = methods;\n","'use strict';\n\nvar forEach    = require('es5-ext/object/for-each')\n  , validValue = require('es5-ext/object/valid-object')\n\n  , push = Array.prototype.apply, defineProperty = Object.defineProperty\n  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty\n  , d = { configurable: true, enumerable: false, writable: true };\n\nmodule.exports = function (e1, e2) {\n\tvar data;\n\t(validValue(e1) && validValue(e2));\n\tif (!hasOwnProperty.call(e1, '__ee__')) {\n\t\tif (!hasOwnProperty.call(e2, '__ee__')) {\n\t\t\td.value = create(null);\n\t\t\tdefineProperty(e1, '__ee__', d);\n\t\t\tdefineProperty(e2, '__ee__', d);\n\t\t\td.value = null;\n\t\t\treturn;\n\t\t}\n\t\td.value = e2.__ee__;\n\t\tdefineProperty(e1, '__ee__', d);\n\t\td.value = null;\n\t\treturn;\n\t}\n\tdata = d.value = e1.__ee__;\n\tif (!hasOwnProperty.call(e2, '__ee__')) {\n\t\tdefineProperty(e2, '__ee__', d);\n\t\td.value = null;\n\t\treturn;\n\t}\n\tif (data === e2.__ee__) return;\n\tforEach(e2.__ee__, function (listener, name) {\n\t\tif (!data[name]) {\n\t\t\tdata[name] = listener;\n\t\t\treturn;\n\t\t}\n\t\tif (typeof data[name] === 'object') {\n\t\t\tif (typeof listener === 'object') push.apply(data[name], listener);\n\t\t\telse data[name].push(listener);\n\t\t} else if (typeof listener === 'object') {\n\t\t\tlistener.unshift(data[name]);\n\t\t\tdata[name] = listener;\n\t\t} else {\n\t\t\tdata[name] = [data[name], listener];\n\t\t}\n\t});\n\tdefineProperty(e2, '__ee__', d);\n\td.value = null;\n};\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of Object.prototype being sealed (via preventExtensions, seal or freeze)\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ is resolved with global context, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","\"use strict\";\n\nmodule.exports = require(\"./is-implemented\")() ? globalThis : require(\"./implementation\");\n","\"use strict\";\n\nmodule.exports = function () {\n\tif (typeof globalThis !== \"object\") return false;\n\tif (!globalThis) return false;\n\treturn globalThis.Array === Array;\n};\n","'use strict';\n\nvar ensureCallable = function (fn) {\n\tif (typeof fn !== 'function') throw new TypeError(fn + \" is not a function\");\n\treturn fn;\n};\n\nvar byObserver = function (Observer) {\n\tvar node = document.createTextNode(''), queue, currentQueue, i = 0;\n\tnew Observer(function () {\n\t\tvar callback;\n\t\tif (!queue) {\n\t\t\tif (!currentQueue) return;\n\t\t\tqueue = currentQueue;\n\t\t} else if (currentQueue) {\n\t\t\tqueue = currentQueue.concat(queue);\n\t\t}\n\t\tcurrentQueue = queue;\n\t\tqueue = null;\n\t\tif (typeof currentQueue === 'function') {\n\t\t\tcallback = currentQueue;\n\t\t\tcurrentQueue = null;\n\t\t\tcallback();\n\t\t\treturn;\n\t\t}\n\t\tnode.data = (i = ++i % 2); // Invoke other batch, to handle leftover callbacks in case of crash\n\t\twhile (currentQueue) {\n\t\t\tcallback = currentQueue.shift();\n\t\t\tif (!currentQueue.length) currentQueue = null;\n\t\t\tcallback();\n\t\t}\n\t}).observe(node, { characterData: true });\n\treturn function (fn) {\n\t\tensureCallable(fn);\n\t\tif (queue) {\n\t\t\tif (typeof queue === 'function') queue = [queue, fn];\n\t\t\telse queue.push(fn);\n\t\t\treturn;\n\t\t}\n\t\tqueue = fn;\n\t\tnode.data = (i = ++i % 2);\n\t};\n};\n\nmodule.exports = (function () {\n\t// Node.js\n\tif ((typeof process === 'object') && process && (typeof process.nextTick === 'function')) {\n\t\treturn process.nextTick;\n\t}\n\n\t// queueMicrotask\n\tif (typeof queueMicrotask === \"function\") {\n\t\treturn function (cb) { queueMicrotask(ensureCallable(cb)); };\n\t}\n\n\t// MutationObserver\n\tif ((typeof document === 'object') && document) {\n\t\tif (typeof MutationObserver === 'function') return byObserver(MutationObserver);\n\t\tif (typeof WebKitMutationObserver === 'function') return byObserver(WebKitMutationObserver);\n\t}\n\n\t// W3C Draft\n\t// http://dvcs.w3.org/hg/webperf/raw-file/tip/specs/setImmediate/Overview.html\n\tif (typeof setImmediate === 'function') {\n\t\treturn function (cb) { setImmediate(ensureCallable(cb)); };\n\t}\n\n\t// Wide available standard\n\tif ((typeof setTimeout === 'function') || (typeof setTimeout === 'object')) {\n\t\treturn function (cb) { setTimeout(ensureCallable(cb), 0); };\n\t}\n\n\treturn null;\n}());\n","\"use strict\";\n\nmodule.exports = 2147483647;\n","\"use strict\";\n\nvar toPosInt   = require(\"es5-ext/number/to-pos-integer\")\n  , maxTimeout = require(\"./max-timeout\");\n\nmodule.exports = function (value) {\n\tvalue = toPosInt(value);\n\tif (value > maxTimeout) throw new TypeError(value + \" exceeds maximum possible timeout\");\n\treturn value;\n};\n","\"use strict\";\n\nvar isPrototype = require(\"../prototype/is\");\n\nmodule.exports = function (value) {\n\tif (typeof value !== \"function\") return false;\n\n\tif (!hasOwnProperty.call(value, \"length\")) return false;\n\n\ttry {\n\t\tif (typeof value.length !== \"number\") return false;\n\t\tif (typeof value.call !== \"function\") return false;\n\t\tif (typeof value.apply !== \"function\") return false;\n\t} catch (error) {\n\t\treturn false;\n\t}\n\n\treturn !isPrototype(value);\n};\n","\"use strict\";\n\nvar isValue = require(\"../value/is\");\n\n// prettier-ignore\nvar possibleTypes = { \"object\": true, \"function\": true, \"undefined\": true /* document.all */ };\n\nmodule.exports = function (value) {\n\tif (!isValue(value)) return false;\n\treturn hasOwnProperty.call(possibleTypes, typeof value);\n};\n","\"use strict\";\n\nvar isFunction = require(\"../function/is\");\n\nvar classRe = /^\\s*class[\\s{/}]/, functionToString = Function.prototype.toString;\n\nmodule.exports = function (value) {\n\tif (!isFunction(value)) return false;\n\tif (classRe.test(functionToString.call(value))) return false;\n\treturn true;\n};\n","\"use strict\";\n\nvar isObject = require(\"../object/is\");\n\nmodule.exports = function (value) {\n\tif (!isObject(value)) return false;\n\ttry {\n\t\tif (!value.constructor) return false;\n\t\treturn value.constructor.prototype === value;\n\t} catch (error) {\n\t\treturn false;\n\t}\n};\n","\"use strict\";\n\n// ES3 safe\nvar _undefined = void 0;\n\nmodule.exports = function (value) { return value !== _undefined && value !== null; };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst async_1 = require(\"async\");\nconst CONCURRENCY_LIMIT = 1;\nconst Deferred = require('deferred');\nclass Queue {\n    constructor() {\n        this.registeredActions = {};\n        this.q = async_1.priorityQueue((actionName, callback) => this.invokeAction(actionName, callback), CONCURRENCY_LIMIT);\n    }\n    invokeAction(actionName, callback) {\n        const { queue: actionQueue } = this.registeredActions[actionName];\n        if (actionQueue) {\n            actionQueue.push(actionName, callback);\n        }\n    }\n    registerAction({ actionName, priority, fn }) {\n        this.registeredActions[actionName] = {\n            actionName,\n            priority,\n            queue: async_1.queue(async () => fn()),\n            fn,\n        };\n    }\n    registerActions(actionsToRegister) {\n        actionsToRegister.forEach((action) => this.registerAction(action));\n    }\n    async scheduleAction(actions) {\n        let actionsToSchedule = actions;\n        if (!Array.isArray(actionsToSchedule)) {\n            actionsToSchedule = [actionsToSchedule];\n        }\n        const allActionPromises = [];\n        for (let i = 0; i < actionsToSchedule.length; i++) {\n            const actionName = actionsToSchedule[i];\n            const { priority } = this.registeredActions[actionName];\n            const deferred = new Deferred();\n            allActionPromises.push(deferred.promise);\n            this.q.push(actionName, priority, (error) => {\n                if (error) {\n                    deferred.reject(error);\n                }\n                else {\n                    deferred.resolve();\n                }\n            });\n        }\n        await Promise.all(allActionPromises);\n    }\n}\nif (!window.Provus) {\n    window.Provus = {};\n}\nwindow.Provus.Queue = Queue;\n"],"sourceRoot":""}